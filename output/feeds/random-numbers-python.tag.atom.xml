<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Lo-Fi Python - random numbers python</title><link href="https://lofipython.com/" rel="alternate"></link><link href="https://lofipython.com/feeds/random-numbers-python.tag.atom.xml" rel="self"></link><id>https://lofipython.com/</id><updated>2022-09-15T23:09:00-05:00</updated><entry><title>Retrieve Random Numbers Via Python's random Module + range() Built-in</title><link href="https://lofipython.com/fetch-a-random-number-or-random-n-length-list-of-numbers-in-python-with-the-random-module.html" rel="alternate"></link><published>2022-09-15T23:09:00-05:00</published><updated>2022-09-15T23:09:00-05:00</updated><author><name>pythonmarketer</name></author><id>tag:lofipython.com,2022-09-15:/fetch-a-random-number-or-random-n-length-list-of-numbers-in-python-with-the-random-module.html</id><summary type="html">&lt;p&gt;There are usually many ways to do most things in Python. I've retrieved random numbers a few different ways at various times within the random module, often after reading a Stack Overflow post. This time in my most recent search for random digits, I discovered in the Python docs the â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;There are usually many ways to do most things in Python. I've retrieved random numbers a few different ways at various times within the random module, often after reading a Stack Overflow post. This time in my most recent search for random digits, I discovered in the Python docs the &lt;a class="reference external" href="https://docs.python.org/3/library/random.html#random.sample"&gt;random.sample()&lt;/a&gt; function with its k parameter:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Return a&amp;nbsp;&lt;em&gt;k&lt;/em&gt;&amp;nbsp;length list of unique elements chosen from the population sequence or set. Used for random sampling without replacement.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/3/library/random.html#random.sample"&gt;https://docs.python.org/3/library/random.html#random.sample&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When combined with the &lt;a class="reference external" href="https://docs.python.org/3.3/library/stdtypes.html?highlight=range#range"&gt;range() built-in&lt;/a&gt;, it makes doing this easy. Being able to specify a length and return a list of random numbers is mighty convenient. This function seems a Pythonic way to randomize to me. Have a look!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="c1"&gt;# Returns a list of 5 random numbers.&lt;/span&gt;
&lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10000000&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Returns a single random number.&lt;/span&gt;
&lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10000000&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div class="wp-image-7196 figure"&gt;
&lt;img alt="" src="https://pythonmarketer.files.wordpress.com/2022/09/image-2.png?w=552" /&gt;
&lt;p class="caption"&gt;To choose a sample from a range of integers, use a&amp;nbsp;&lt;a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#range"&gt;range()&lt;/a&gt;&amp;nbsp;object as an argument.&lt;/p&gt;
&lt;div class="legend"&gt;
&lt;p&gt;This is especially fast and space efficient for sampling from a large population:&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;sample(range(10000000),&amp;nbsp;k=60)&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/3/library/random.html#random.sample"&gt;https://docs.python.org/3/library/random.html#random.sample&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="coding, programming, python"></category><category term="python random numbers list"></category><category term="random module"></category><category term="random numbers python"></category></entry></feed>