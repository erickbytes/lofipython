<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Lo-Fi Python - SEO</title><link href="https://lofipython.com/" rel="alternate"></link><link href="https://lofipython.com/feeds/seo.tag.atom.xml" rel="self"></link><id>https://lofipython.com/</id><updated>2021-10-30T19:32:00-05:00</updated><entry><title>WordPress Ad Campaign Results from a Typical Blog</title><link href="https://lofipython.com/meta-blog-mediocre-september-ad-campaign-results.html" rel="alternate"></link><published>2021-10-30T19:32:00-05:00</published><updated>2021-10-30T19:32:00-05:00</updated><author><name>pythonmarketer</name></author><id>tag:lofipython.com,2021-10-30:/meta-blog-mediocre-september-ad-campaign-results.html</id><summary type="html">&lt;p&gt;In September 2021, I tested out the recommended ads runner, &lt;a class="reference external" href="https://wordads.co/"&gt;WordAds&lt;/a&gt;, on this WordPress blog. 6,182 ads were served over the course of a month, earning $0.86 from impressions and clicks. My average CPM or cost per thousand impressions was $0.14. My blog averages about 1,600 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In September 2021, I tested out the recommended ads runner, &lt;a class="reference external" href="https://wordads.co/"&gt;WordAds&lt;/a&gt;, on this WordPress blog. 6,182 ads were served over the course of a month, earning $0.86 from impressions and clicks. My average CPM or cost per thousand impressions was $0.14. My blog averages about 1,600 views a month at the moment, mostly fueled by various search engines. Here's an example of one ad that ran:&lt;/p&gt;
&lt;div class="wp-image-6185 figure"&gt;
&lt;img alt="**Example Ad Run on This Site Shown Above**" src="https://pythonmarketer.files.wordpress.com/2021/10/wordads-ad-1.png?w=877" /&gt;
&lt;p class="caption"&gt;&lt;strong&gt;Example Ad Run on This Site Shown Above&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In my WordPress account, I upgraded to the business plan. This gave me access to WordPress plug-ins. I enabled the &lt;a class="reference external" href="https://yoast.com/wordpress/plugins/seo/"&gt;Yoast SEO plug-in&lt;/a&gt; and activated its site optimization. I also enabled the maximum ads possible in my settings. In spite of these efforts, the results were sparse. Maybe there's more that I could have done. But this blog is passive and more like a hobby at the moment. I'm ok with a blog that makes $0.86 per month. Maybe someday it will be worth more. But I enjoy writing so it's all good. My skills grow and maybe I share something with someone across the world. That's what keeps me coming back.&lt;/p&gt;
&lt;p&gt;I concluded I will not be running ads anytime soon. I wanted to get a baseline of what I was leaving on the table by not running ads. Now I can project when I might tap into the blog's potential traffic revenue, if ever. It seems I would need much higher views per month before ads makes sense with my level of traffic, 65 blog followers and minor social media clout.&lt;/p&gt;
&lt;p&gt;There's also the added benefit of not serving up people's data to ad companies. Ads seem to be a generally accepted way to earn from your internet labors. But right now, they're not for this blog. Good luck monetizing your blog. Or just writing for the hell of it!&lt;/p&gt;
&lt;div class="wp-image-6182 figure"&gt;
&lt;img alt="" src="https://pythonmarketer.files.wordpress.com/2021/10/sept-2021-ad-campaign-results.png?w=1024" /&gt;
&lt;/div&gt;
</content><category term="Marketing, meta, writing"></category><category term="ad campaign"></category><category term="SEO"></category></entry><entry><title>Yoast SEO API Python Example With requests + pandas</title><link href="https://lofipython.com/yoast-api-python-example-with-requests-pandas.html" rel="alternate"></link><published>2021-09-06T14:12:00-05:00</published><updated>2021-09-06T14:12:00-05:00</updated><author><name>pythonmarketer</name></author><id>tag:lofipython.com,2021-09-06:/yoast-api-python-example-with-requests-pandas.html</id><summary type="html">&lt;p&gt;Lately I've been checking out the &lt;a class="reference external" href="https://yoast.com/wordpress/plugins/seo/"&gt;Yoast SEO plug-in&lt;/a&gt; and their &lt;a class="reference external" href="https://developer.yoast.com/customization/apis/rest-api"&gt;REST API&lt;/a&gt;. The API returns all of the SEO metadata, meta tags, schema.org data, etc. for your Wordpress blog posts. Here's a Yoast API Python example script to fetch post metadata via requests and pandas:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Lately I've been checking out the &lt;a class="reference external" href="https://yoast.com/wordpress/plugins/seo/"&gt;Yoast SEO plug-in&lt;/a&gt; and their &lt;a class="reference external" href="https://developer.yoast.com/customization/apis/rest-api"&gt;REST API&lt;/a&gt;. The API returns all of the SEO metadata, meta tags, schema.org data, etc. for your Wordpress blog posts. Here's a Yoast API Python example script to fetch post metadata via requests and pandas:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fetch_metadata&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;post_url&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Returns the Yoast API response as pandas dataframe.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://atomic-temporary-107329037.wpcomstaging.com/wp-json/yoast/v1/get_head?url=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;post_url&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;response_dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;metadata_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json_normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;metadata_df&lt;/span&gt;

&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/erickbytes/Python-Marketer-Reader-Analytics/blob/master/dataset/2020_pythonmarketer.com_post_views.xlsx?raw=true.xlsx&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_excel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# update url domain with pandas .str accessor&lt;/span&gt;
&lt;span class="n"&gt;posts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;posts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pat&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.wordpress&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;repl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;regex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;metadata&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;posts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fetch_metadata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;metadata_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;results&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;span class="n"&gt;metadata_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Wordpress Blog Post Yoast API Metadata.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;What this script is doing:&lt;/strong&gt;&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Read a list of my blog posts from Github into a &lt;a class="reference external" href="https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.html"&gt;pandas dataframe&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Use &lt;a class="reference external" href="https://pandas.pydata.org/docs/reference/api/pandas.Series.apply.html"&gt;pandas .apply&lt;/a&gt; to fetch the metadata for each post url.&lt;/li&gt;
&lt;li&gt;Deserialize + normalize the JSON response.&lt;/li&gt;
&lt;li&gt;Convert to a pandas dataframe and store in a pandas Series named 'metadata'.&lt;/li&gt;
&lt;li&gt;Merge the series and write the metadata to a csv file.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;The Payoff&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;You'll end up with blobs of JSON formatted metadata to sift through or wrangle to your liking! Check out the &lt;a class="reference external" href="https://developer.yoast.com/"&gt;Yoast documentation&lt;/a&gt; if you're interested in finding out more about their APIs.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;New to APIs?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It's ok if so, we all were once. Check out my &lt;a class="reference external" href="https://pythonmarketer.wordpress.com/2020/05/18/how-to-make-json-requests-with-python/"&gt;guide to making HTTP requests with Python&lt;/a&gt; if you want to see more API examples.&lt;/p&gt;
&lt;div class="wp-image-5922 figure"&gt;
&lt;img alt="SEO Overview" src="https://pythonmarketer.files.wordpress.com/2021/10/e5f7c-image.png" style="width: 640px; height: 451px;" /&gt;
&lt;/div&gt;
</content><category term="APIs, coding, HTTP, programming, python"></category><category term="Python Wordpress Blog SEO"></category><category term="SEO"></category><category term="Yoast API"></category></entry></feed>