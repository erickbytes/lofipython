<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Lo-Fi Python - regex</title><link href="https://lofipython.com/" rel="alternate"></link><link href="https://lofipython.com/feeds/regex.tag.atom.xml" rel="self"></link><id>https://lofipython.com/</id><updated>2021-12-31T14:19:00-06:00</updated><entry><title>Phone Number Cleaning Regex + pandas Series Example</title><link href="https://lofipython.com/phone-number-cleaning-regex-pandas-series-example.html" rel="alternate"></link><published>2021-12-31T14:19:00-06:00</published><updated>2021-12-31T14:19:00-06:00</updated><author><name>pythonmarketer</name></author><id>tag:lofipython.com,2021-12-31:/phone-number-cleaning-regex-pandas-series-example.html</id><summary type="html">&lt;p&gt;This is a solution I worked out recently to strip phone numbers into a uniform format. To install &lt;a class="reference external" href="https://pandas.pydata.org/docs/getting_started/install.html"&gt;pandas with pip&lt;/a&gt;, enter in command prompt:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pandas&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The pandas library has regex built in and it's pretty neat! Behold the power of pandas and a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Regular_expression"&gt;regular expression …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is a solution I worked out recently to strip phone numbers into a uniform format. To install &lt;a class="reference external" href="https://pandas.pydata.org/docs/getting_started/install.html"&gt;pandas with pip&lt;/a&gt;, enter in command prompt:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pandas&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The pandas library has regex built in and it's pretty neat! Behold the power of pandas and a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Regular_expression"&gt;regular expression&lt;/a&gt; to do trivial telephone tidying:&lt;/p&gt;
&lt;div class="wp-image-6382 figure"&gt;
&lt;img alt="strip phone formatting with Python" src="https://pythonmarketer.files.wordpress.com/2021/12/pandas-example-7-3.41.12-pm.png?w=561" style="width: 767px; height: 150px;" /&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;(010) 001-1010&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Phone&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;str&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# remove parentheses, hyphens and spaces with pandas + regex&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pat&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\(|\)|-| &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;repl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;regex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# resulting number: &amp;quot;0100011010&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Regex is cool.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Grasping the intricacies of what this code is doing feels elegant when you connect the dots.. or pipes. The replace is done via a pandas &lt;a class="reference external" href="https://pandas.pydata.org/pandas-docs/stable/reference/series.html#api-series-str"&gt;str accessor&lt;/a&gt;. In the pat string, the parentheses are escaped with slashes and separated by pipes &amp;quot;|&amp;quot;. They act as an &lt;a class="reference external" href="https://realpython.com/python-or-operator/"&gt;or operator&lt;/a&gt;, succinctly chaining multiple characters together for matching and in this case replacing them with nothing. Pretty nifty. If you read the &lt;a class="reference external" href="https://pandas.pydata.org/docs/"&gt;pandas docs&lt;/a&gt;, you'll find regex is accessible in different parts of the API. Dive in, it's some of my favorite documentation to snoop. There is so much you can do with pandas. This example demonstrates how its flexible functions get the job done efficiently.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Further Reading:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pandas.pydata.org/docs/reference/api/pandas.Series.html"&gt;pandas.Series documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pandas.pydata.org/docs/reference/api/pandas.Series.str.replace.html"&gt;pandas str.replace documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://regex.info/blog/2006-09-15/247"&gt;Source of the famous “Now you have two problems” quote&lt;/a&gt;&lt;/p&gt;
</content><category term="coding, pandas, programming, python"></category><category term="data cleaning"></category><category term="regex"></category></entry><entry><title>Findstr, RegEx File Searches for Windows</title><link href="https://lofipython.com/findstr-aka-grep-for-windows.html" rel="alternate"></link><published>2018-07-15T19:52:00-05:00</published><updated>2018-07-15T19:52:00-05:00</updated><author><name>pythonmarketer</name></author><id>tag:lofipython.com,2018-07-15:/findstr-aka-grep-for-windows.html</id><summary type="html">&lt;p&gt;Findstr is the Windows alternative to GREP, which runs on the &lt;a class="reference external" href="https://www.howtogeek.com/182649/htg-explains-what-is-unix/"&gt;Unix operating system&lt;/a&gt;. Findstr searches files with &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Regular_expression"&gt;regular expressions&lt;/a&gt; and seems useful for string matching within files and directories.&amp;nbsp; It is one of over &lt;a class="reference external" href="https://www.lifewire.com/list-of-command-prompt-commands-4092302"&gt;280 command prompt commands&lt;/a&gt;. Here's the official&amp;nbsp;&lt;a class="reference external" href="https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/findstr"&gt;Windows Documentation&lt;/a&gt;&amp;nbsp;and some&amp;nbsp;&lt;a class="reference external" href="https://www.mkyong.com/linux/grep-for-windows-findstr-example/"&gt;Linux vs. Windows Examples …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Findstr is the Windows alternative to GREP, which runs on the &lt;a class="reference external" href="https://www.howtogeek.com/182649/htg-explains-what-is-unix/"&gt;Unix operating system&lt;/a&gt;. Findstr searches files with &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Regular_expression"&gt;regular expressions&lt;/a&gt; and seems useful for string matching within files and directories.&amp;nbsp; It is one of over &lt;a class="reference external" href="https://www.lifewire.com/list-of-command-prompt-commands-4092302"&gt;280 command prompt commands&lt;/a&gt;. Here's the official&amp;nbsp;&lt;a class="reference external" href="https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/findstr"&gt;Windows Documentation&lt;/a&gt;&amp;nbsp;and some&amp;nbsp;&lt;a class="reference external" href="https://www.mkyong.com/linux/grep-for-windows-findstr-example/"&gt;Linux vs. Windows Examples.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Windows announced that &lt;a class="reference external" href="https://hackaday.com/2019/06/10/windows-10-goes-to-shell/"&gt;Grep and several other Unix command line tools will be added to Windows 10&lt;/a&gt;. This is a new alternative to findstr.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This findstr command returns all lines containing an '&amp;#64;' in a text file.&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
findstr &amp;#64; test.txt
&lt;/pre&gt;
&lt;img alt="findstr Emails" class="alignnone size-full wp-image-1406" src="https://pythonmarketer.files.wordpress.com/2018/07/findstr-emails.png" style="width: 602px; height: 48px;" /&gt;
&lt;p&gt;&lt;strong&gt;I was happy to see Findstr's convenient help menu:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
findstr -?
&lt;/pre&gt;
&lt;img alt="findstr_help" class="alignnone size-full wp-image-1408" src="https://pythonmarketer.files.wordpress.com/2018/07/findstr_help.png" style="width: 657px; height: 603px;" /&gt;
&lt;p&gt;Regular expressions are so powerful. It's nice to have this utility within the command prompt. I am hoping to get to know some of the other 280 command prompt commands.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I've previously explored regex with Python. This Python regex example finds all words in a text file containing '&amp;#64;' symbols:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;

&lt;span class="c1"&gt;# read the file to string + regex email search&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;test.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fhand&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fhand&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="c1"&gt;# this regex returns a python list of emails:&lt;/span&gt;
    &lt;span class="n"&gt;emails&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;(\S*@\S+)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;emails&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;img alt="findall_python" class="alignnone size-full wp-image-1405" src="https://pythonmarketer.files.wordpress.com/2018/07/findall_python.png" style="width: 633px; height: 173px;" /&gt;
&lt;p&gt;For more command prompt nuggets, check out my more recent post: &lt;a class="reference external" href="https://pythonmarketer.wordpress.com/2020/05/06/exploring-windows-command-line-tools-batch-file-automation-and-remote-desktop-connection/"&gt;Exploring Windows Command Line Tools, Batch Files and Remote Desktop Connection&lt;/a&gt;.&lt;/p&gt;
</content><category term="command prompt, data, python, Windows"></category><category term="programming"></category><category term="regex"></category></entry></feed>