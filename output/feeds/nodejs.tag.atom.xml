<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Lo-Fi Python - Node.js</title><link href="https://lofipython.com/" rel="alternate"></link><link href="https://lofipython.com/feeds/nodejs.tag.atom.xml" rel="self"></link><id>https://lofipython.com/</id><updated>2017-08-09T21:16:00-05:00</updated><entry><title>Creating A Simple Website and Server Environment with Node.js and Express.js</title><link href="https://lofipython.com/creating-a-simple-website-and-server-environment-with-node-js-and-express-js.html" rel="alternate"></link><published>2017-08-09T21:16:00-05:00</published><updated>2017-08-09T21:16:00-05:00</updated><author><name>pythonmarketer</name></author><id>tag:lofipython.com,2017-08-09:/creating-a-simple-website-and-server-environment-with-node-js-and-express-js.html</id><summary type="html">&lt;p&gt;Here is what I have deduced is the fastest way to get an app up and
running with Node.js. This requires some familiarity with using the
command line. I completed the Codeacademy course &amp;quot;&lt;a class="reference external" href="https://www.codecademy.com/learn/learn-the-command-line"&gt;Learn The Command
Line&lt;/a&gt;&amp;quot;
before beginning with Node.js. I think it helped me better understand …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Here is what I have deduced is the fastest way to get an app up and
running with Node.js. This requires some familiarity with using the
command line. I completed the Codeacademy course &amp;quot;&lt;a class="reference external" href="https://www.codecademy.com/learn/learn-the-command-line"&gt;Learn The Command
Line&lt;/a&gt;&amp;quot;
before beginning with Node.js. I think it helped me better understand
what the commands are and what they do.&lt;/p&gt;
&lt;p&gt;Download and install &lt;a class="reference external" href="https://nodejs.org/en/"&gt;Node.JS&lt;/a&gt; Open the node
command prompt. This was done on a windows machine.&lt;/p&gt;
&lt;p&gt;First, create a folder for your app(s):&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
mkdir node_apps
&lt;/pre&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Change the command prompt directory to your app's folder:&lt;/div&gt;
&lt;/div&gt;
&lt;pre class="code literal-block"&gt;
cd \app_name
&lt;/pre&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;creates json file for your app&lt;/div&gt;
&lt;div class="line"&gt;fill out applicable info or just hit enter until the file is created&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;pre class="code literal-block"&gt;
npm init
&lt;/pre&gt;
&lt;p&gt;installs express.js module in node.js&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
npm install express
&lt;/pre&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;installs express-generator module in node.js&lt;/div&gt;
&lt;div class="line"&gt;this module creates the web app's structure once the command in the
next step is entered&lt;/div&gt;
&lt;/div&gt;
&lt;pre class="code literal-block"&gt;
npm install express-generator -g
&lt;/pre&gt;
&lt;p&gt;creates the structure for your app and all necessary folders. (views,
css, Javascript, routing, etc.)&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
express app_name
&lt;/pre&gt;
&lt;p&gt;ensures all app module dependencies are installed&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
npm install
&lt;/pre&gt;
&lt;p&gt;starts your server and web app&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
npm start
&lt;/pre&gt;
&lt;p&gt;Go to &lt;a class="reference external" href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; in a browser. Port 3000 is the default port
of Express. Your app is live in dev environment.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I learned most of this from &lt;a class="reference external" href="https://codeforgeek.com/2014/10/express-complete-tutorial-part-1/"&gt;this great blog post&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The above does not include a database integration. I integrated with
a MongoDB database by &lt;a class="reference external" href="https://closebrace.com/tutorials/2017-03-02/the-dead-simple-step-by-step-guide-for-front-end-developers-to-getting-up-and-running-with-nodejs-express-and-mongodb"&gt;following the instructions in this post&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;This &lt;a class="reference external" href="https://www.youtube.com/watch?v=1uFY60CESlM"&gt;YouTube video&lt;/a&gt;
was also very helpful to me for figuring out MongoDB and Node.js
integration.&lt;/li&gt;
&lt;li&gt;An HTML shorthand language called jade (aka pug) comes stock within
Express.js. &lt;a class="reference external" href="https://webapplog.com/jade/"&gt;Here's further reading&lt;/a&gt;
on the pros and cons.&lt;/li&gt;
&lt;li&gt;All of the above has been from my own studies. I do not claim
anything listed as the most efficient or best way to use Node.js.
This is what has worked for me over the past two days.&lt;/li&gt;
&lt;li&gt;It feels good to whip up a nimble app environment that is capable of
producing and supporting world changing software; Node.js is used by
Netflix, PayPal, Microsoft and Uber.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="coding, javascript, programming, web development"></category><category term="command line"></category><category term="creating websites"></category><category term="express.js"></category><category term="mongodb"></category><category term="Node.js"></category><category term="web&#10;dev"></category><category term="website"></category></entry><entry><title>Oversimplified Javascript Terms</title><link href="https://lofipython.com/oversimplified-javascript-terms.html" rel="alternate"></link><published>2017-08-05T18:37:00-05:00</published><updated>2017-08-05T18:37:00-05:00</updated><author><name>pythonmarketer</name></author><id>tag:lofipython.com,2017-08-05:/oversimplified-javascript-terms.html</id><summary type="html">&lt;p&gt;I'm finally coming around in my understanding of Javascript. Here are a few quick explanations to help you if you are new to it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Javascript&lt;/strong&gt; = The language of the web. Most commonly used as a complement to HTML and CSS to create an interactive website.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JQuery&lt;/strong&gt; = A popular Javascript library …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm finally coming around in my understanding of Javascript. Here are a few quick explanations to help you if you are new to it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Javascript&lt;/strong&gt; = The language of the web. Most commonly used as a complement to HTML and CSS to create an interactive website.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JQuery&lt;/strong&gt; = A popular Javascript library with many powerful commands that are quick and easy to call.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Node.JS&lt;/strong&gt; = Software that allows you to run Javascript from the command line without being connected to the internet.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Express.JS&lt;/strong&gt; = A popular Node.JS framework.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Angular&lt;/strong&gt; = A popular front-end Javascript web framework. There are many out there but this seems to be the one I've heard of the most.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;I've begun to see a pattern with programming languages:&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;1) Learn to execute the core building blocks. (using variables, loops, functions, etc.)&lt;/div&gt;
&lt;div class="line"&gt;2) Learn more advanced libraries, documentation and uses.&lt;/div&gt;
&lt;div class="line"&gt;3) Consider using and learning web frameworks depending on what you're trying to do with the language.&lt;/div&gt;
&lt;div class="line"&gt;4) Practice to hone your knowledge. Build things you like.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;I've also noticed that Javascript has been easier to learn than Python was for me, because it's not my first programming language. The concepts are the same. The syntax can trip me up at times, but I'm currently flying through &lt;a class="reference external" href="https://www.codecademy.com/learn/learn-javascript"&gt;Codeacademy's Javascript courses&lt;/a&gt;. Sometimes it even seems fun!&lt;/p&gt;
</content><category term="coding, javascript, programming"></category><category term="angular"></category><category term="express.js"></category><category term="javascript terms"></category><category term="JQuery"></category><category term="Node.js"></category><category term="software"></category><category term="understanding javascript"></category><category term="web frameworks."></category></entry></feed>