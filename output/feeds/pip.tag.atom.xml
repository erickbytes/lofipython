<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Lo-Fi Python - pip</title><link href="https://lofipython.com/" rel="alternate"></link><link href="https://lofipython.com/feeds/pip.tag.atom.xml" rel="self"></link><id>https://lofipython.com/</id><updated>2022-01-23T14:41:00-06:00</updated><entry><title>How to Upgrade Requests in the Bash Console</title><link href="https://lofipython.com/how-to-upgrade-requests-in-the-pythonanywhere-bash-console.html" rel="alternate"></link><published>2022-01-23T14:41:00-06:00</published><updated>2022-01-23T14:41:00-06:00</updated><author><name>pythonmarketer</name></author><id>tag:lofipython.com,2022-01-23:/how-to-upgrade-requests-in-the-pythonanywhere-bash-console.html</id><summary type="html">&lt;p&gt;This command can be used to upgrade your Python &lt;a class="reference external" href="https://docs.python-requests.org/en/latest/"&gt;requests library&lt;/a&gt; with &lt;a class="reference external" href="https://pythonmarketer.com/2018/01/20/how-to-python-pip-install-new-libraries/"&gt;pip&lt;/a&gt;, Python's package manager. It is tailored for a PythonAnywhere environment. I suppose this command works on any &lt;a class="reference external" href="https://www.gnu.org/software/bash/"&gt;Bash console&lt;/a&gt;, but if you're running your app with pythonanywhere, you can find the bash console here:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;www …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;This command can be used to upgrade your Python &lt;a class="reference external" href="https://docs.python-requests.org/en/latest/"&gt;requests library&lt;/a&gt; with &lt;a class="reference external" href="https://pythonmarketer.com/2018/01/20/how-to-python-pip-install-new-libraries/"&gt;pip&lt;/a&gt;, Python's package manager. It is tailored for a PythonAnywhere environment. I suppose this command works on any &lt;a class="reference external" href="https://www.gnu.org/software/bash/"&gt;Bash console&lt;/a&gt;, but if you're running your app with pythonanywhere, you can find the bash console here:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pythonanywhere&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;your_username&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;consoles&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div class="wp-image-6771 figure"&gt;
&lt;img alt="" src="https://pythonmarketer.files.wordpress.com/2022/01/python-anywhere-bash-highlight-2.png?w=1024" /&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Install requests with this command:&lt;/strong&gt;&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;::&lt;/dt&gt;
&lt;dd&gt;python3.8 -m pip install requests --upgrade --user&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Substitute in whatever your Python version is. This command upgrades the requests library on a PythonAnywhere app. If any libraries depend on a specific version of requests, a warning appears like this one I saw for the &lt;a class="reference external" href="https://github.com/yakupadakli/python-unsplash"&gt;python-unsplash&lt;/a&gt; library.&lt;/p&gt;
&lt;blockquote&gt;
ERROR: python-unsplash 1.1.0 has requirement requests==2.20.0, but you'll have requests 2.27.1 which is incompatible.&lt;/blockquote&gt;
&lt;div class="wp-image-6777 figure"&gt;
&lt;img alt="" src="https://pythonmarketer.files.wordpress.com/2022/01/requests-upgrade-full-install.png?w=1024" /&gt;
&lt;/div&gt;
</content><category term="coding, python"></category><category term="bash"></category><category term="pip"></category><category term="python install"></category><category term="pythonanywhere"></category></entry><entry><title>How to Install Libraries and Enable the pip Installer in Python</title><link href="https://lofipython.com/how-to-python-pip-install-new-libraries.html" rel="alternate"></link><published>2018-01-20T17:50:00-06:00</published><updated>2018-01-20T17:50:00-06:00</updated><author><name>pythonmarketer</name></author><id>tag:lofipython.com,2018-01-20:/how-to-python-pip-install-new-libraries.html</id><summary type="html">&lt;p&gt;Python comes with a bunch of &lt;a class="reference external" href="https://docs.python.org/3/py-modindex.html"&gt;standard modules&lt;/a&gt;. My favorites are shutil, glob, datetime, time, os (operating system), re (regular expressions) and webbrowser. The standard library is loaded.&lt;/p&gt;
&lt;p&gt;Inevitably, you'll want to install new libraries from Python's rich ecosystem of external modules. Enter pip, Python's handy package manager and people's …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Python comes with a bunch of &lt;a class="reference external" href="https://docs.python.org/3/py-modindex.html"&gt;standard modules&lt;/a&gt;. My favorites are shutil, glob, datetime, time, os (operating system), re (regular expressions) and webbrowser. The standard library is loaded.&lt;/p&gt;
&lt;p&gt;Inevitably, you'll want to install new libraries from Python's rich ecosystem of external modules. Enter pip, Python's handy package manager and people's champion.&lt;/p&gt;
&lt;p&gt;This post will teach you some Python history, show how to install pandas, and help you troubleshoot problems if it's not working. You'll find Windows and Linux commands for venv setup (recommended). With pip, you'll feel like Neo when installing new modules. Any skill is at your fingertips. It's like learning kung fu. There's probably a library for that!&lt;/p&gt;
&lt;img alt="i know kung fu" class="alignnone size-full wp-image-1321" src="http://pythonmarketer.files.wordpress.com/2018/01/19c0c-i-know-kung-fu-e1516470914221.png" style="width: 1277px; height: 532px;" /&gt;
&lt;p&gt;First, Some Python Version Caveats + History**
**
------------------------------------------------&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python 2 reached end of life on January 1st, 2020&lt;/strong&gt;. &lt;a class="reference external" href="https://www.python.org/doc/sunset-python-2/"&gt;Python 2 has officially been sunset&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Python comes with pip now, no setup is required. But certain versions such as Python 3.2 or the Python 2.7 that came stock on my improbably still functioning 2008 black Macbook, for example, may not have it installed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In December 2021, Python 3.6 reached&lt;/strong&gt;&lt;a class="reference external" href="https://devguide.python.org/devcycle/#end-of-life-branches"&gt;&amp;quot;end of life phase&amp;quot;&lt;/a&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Python 3.6 is &amp;quot;now effectively frozen&amp;quot;. Read more in &lt;a class="reference external" href="https://www.python.org/dev/peps/pep-0494/"&gt;PEP 494&lt;/a&gt;. (Released Oct. 2022)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TLDR:&lt;/strong&gt; use Python 3.7 to 3.11. This blog endorses using the lightning fast Python version &lt;a class="reference external" href="https://www.python.org/downloads/release/python-3110/"&gt;3.11.&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="enter-this-in-your-terminal"&gt;
&lt;h2&gt;Enter This in Your Terminal&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;python &lt;span class="pre"&gt;-m&lt;/span&gt; pip install pandas&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Pandas is a super useful library for wrangling spreadsheet data, AKA &amp;quot;tabular&amp;quot; data. If successful, you should see activity that looks similar to the below screenshot, where I am installing &lt;a class="reference external" href="https://openpyxl.readthedocs.io/en/stable/"&gt;openpyxl&lt;/a&gt;, an additional Python Excel library you'll likely want. You are good to go! This is the part where you get to feel like Neo! See &lt;a class="reference external" href="https://docs.python.org/3/installing/index.html"&gt;Installing Python Modules&lt;/a&gt; in the Python Documentation for more detailed instructions.&lt;/p&gt;
&lt;img alt="neo_pip" class="alignnone size-full wp-image-1322" src="http://pythonmarketer.files.wordpress.com/2018/01/de9d6-neo_pip-e1587604013861.png" style="width: 650px; height: 340px;" /&gt;
&lt;p&gt;&lt;strong&gt;To view all your installed libraries, enter:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Write a &amp;quot;requirements.txt&amp;quot; of installed libraries:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;freeze&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;requirements&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;You can list your outdated packages with the --outdated argument:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;outdated&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Use pip's -h help command line argument:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Supplementary Resources&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Take a look at this &lt;a class="reference external" href="https://pythontips.com/2013/07/30/20-python-libraries-you-cant-live-without/"&gt;list of 20 modules&lt;/a&gt; to get started. Here is another &lt;a class="reference external" href="https://github.com/vinta/awesome-python"&gt;more comprehensive list of libraries&lt;/a&gt; you can now install.&lt;/li&gt;
&lt;li&gt;Swing by the pip documentation &lt;a class="reference external" href="https://pip.pypa.io/en/stable/quickstart/"&gt;Quickstart&lt;/a&gt;&amp;nbsp;and &lt;a class="reference external" href="https://pip.pypa.io/en/stable/user_guide/"&gt;User Guide&lt;/a&gt; to learn some helpful commands.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://pypi.org/search/?q=time+travel"&gt;PyPI, the&amp;nbsp;Python Package Index&lt;/a&gt; is the official Python package repository.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://snarky.ca/why-you-should-use-python-m-pip/"&gt;Why you should use 'python -m pip'&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://opensource.com/downloads/pip-cheat-sheet?utm_medium=Email&amp;amp;utm_campaign=weekly&amp;amp;sc_cid=7013a000002DAKPAA4"&gt;pip cheat sheet from opensource.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Congrats on figuring out how to install packages with pip, have fun!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="having-issues-try-upgrading-your-pip-version"&gt;
&lt;h2&gt;Having issues? Try upgrading your pip version.&lt;/h2&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;upgrade&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="try-the-ensurepip-command"&gt;
&lt;h2&gt;Try the ensurepip command.&lt;/h2&gt;
&lt;p&gt;This command will install and upgrade pip to the newest version. New in Python 3.4:&lt;/p&gt;
&lt;div class="highlight-python3 notranslate docutils container"&gt;
&lt;div class="highlight docutils container"&gt;
&lt;div class="highlight-python3 notranslate docutils container"&gt;
&lt;div class="highlight docutils container"&gt;
&lt;pre class="literal-block"&gt;
python -m ensurepip --upgrade
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;The&amp;nbsp;&lt;tt class="docutils literal"&gt;`ensurepip&lt;/tt&gt; &amp;lt;&lt;a class="reference external" href="https://docs.python.org/3/library/ensurepip.html#module-ensurepip"&gt;https://docs.python.org/3/library/ensurepip.html#module-ensurepip&lt;/a&gt;&amp;gt;`__&amp;nbsp;package provides support for bootstrapping the&amp;nbsp;&lt;tt class="docutils literal"&gt;pip&lt;/tt&gt;&amp;nbsp;installer into an existing Python installation or virtual environment. This bootstrapping approach reflects the fact that&amp;nbsp;&lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; is an independent project with its own release cycle, and the latest available stable version is bundled with maintenance and feature releases of the CPython reference interpreter.&amp;quot;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/library/ensurepip.html"&gt;ensurepip Python Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;You should follow best practice and&lt;/strong&gt; &lt;a class="reference external" href="https://docs.python.org/3/library/venv.html"&gt;create a virtual environment&lt;/a&gt; &lt;strong&gt;before installing libraries.&lt;/strong&gt;&lt;a class="reference external" href="https://docs.python.org/3/library/venv.html"&gt;venv&lt;/a&gt;&lt;strong&gt;or&lt;/strong&gt;&lt;a class="reference external" href="https://pythonmarketer.wordpress.com/2018/04/10/creating-isolated-python-environments-with-virtualenv/"&gt;virtualenv&lt;/a&gt;&lt;strong&gt;will help you out. To create with venv:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;python3 &lt;span class="pre"&gt;-m&lt;/span&gt; venv add_env_name_here&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;After your environment is created, activate it with the first command below, then install a library on Ubuntu Linux:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;cd add_env_path_here/bin &amp;amp; source activate&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;python &lt;span class="pre"&gt;-m&lt;/span&gt; pip install pandas&lt;/tt&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Alternatively, on Windows computers:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;cd add_env_path_here\scripts &amp;amp; activate&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;python &lt;span class="pre"&gt;-m&lt;/span&gt; pip install pandas&lt;/tt&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Know your OS.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you're interested in installing pip on Linux, &lt;a class="reference external" href="https://www.tecmint.com/install-pip-in-linux/"&gt;try here&lt;/a&gt;. For Mac, &lt;a class="reference external" href="https://www.shellhacks.com/python-install-pip-mac-ubuntu-centos/"&gt;try here&lt;/a&gt;. Windows, Mac and Linux sometimes use different prefixes (e.g. python, py, python3) to run a python script. Which leads me to my next point...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Getting the prefix right can be tricky.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Since this was written, I moved to Python 3.8. When I first moved from Python 2 to 3 on Windows, I somehow accidentally configured the following behavior: entering &lt;strong&gt;python some_program.py&lt;/strong&gt;&amp;nbsp;ran a .py file with Python 2. Whereas, entering &lt;strong&gt;py some_program.py&lt;/strong&gt;ran a .py file with Python 3.&lt;/p&gt;
&lt;p&gt;In the install command, the prefix is a reference to your Python executable. You may just need to alter your prefix to call it correctly. Here are some to try in place of &amp;quot;python&amp;quot;. Observe what happens when you run these command variations.Good luck!&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;python3 &lt;span class="pre"&gt;-m&lt;/span&gt; pip install pandas&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;python3.11 &lt;span class="pre"&gt;-m&lt;/span&gt; pip install pandas&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;py &lt;span class="pre"&gt;-m&lt;/span&gt; pip install pandas&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;pip3 install pandas&lt;/tt&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-to-manually-enable-the-pip-installer"&gt;
&lt;h2&gt;How to Manually Enable the pip Installer&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The rest of this post may be useful to you if you are:&lt;/strong&gt;&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Working on legacy Python 2 code or Python 3.3 or lower for which pip is not installed.&lt;/li&gt;
&lt;li&gt;Seeking to fix a faulty pip install that is not working properly.&lt;/li&gt;
&lt;li&gt;Curious to know how to manually set up pip.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;Assumes Python is already&lt;/em&gt;&lt;a class="reference external" href="https://www.python.org/downloads/"&gt;installed&lt;/a&gt;&lt;em&gt;. If you're running Windows 10, I found it easy to install Python from the&lt;/em&gt;&lt;a class="reference external" href="https://www.microsoft.com/en-us/p/python-39/9p7qfqmjrfp7?activetab=pivot:overviewtab"&gt;Windows store&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Download the&lt;/strong&gt;&lt;a class="reference external" href="https://bootstrap.pypa.io/get-pip.py"&gt;get-pip.py file&lt;/a&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Go to the link, right click the page and &amp;quot;Save As&amp;quot; a .py file to download. Then place the file where you want to access it. I placed mine in&amp;nbsp;C:Python27Libsite-packages&lt;/p&gt;
&lt;p&gt;You could also download the file with &lt;a class="reference external" href="https://curl.haxx.se/"&gt;curl&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;curl &lt;span class="pre"&gt;https://bootstrap.pypa.io/get-pip.py&lt;/span&gt; &lt;span class="pre"&gt;-o&lt;/span&gt; &lt;span class="pre"&gt;get-pip.pyt-pip.py&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;blockquote&gt;
If you are not sure where your site-packages folder is, type&lt;tt class="docutils literal"&gt;`python &lt;span class="pre"&gt;-m&lt;/span&gt; site&lt;/tt&gt; &amp;lt;&lt;a class="reference external" href="https://stackoverflow.com/questions/122327/how-do-i-find-the-location-of-my-python-site-packages-directory"&gt;https://stackoverflow.com/questions/122327/how-do-i-find-the-location-of-my-python-site-packages-directory&lt;/a&gt;&amp;gt;`__into command prompt for file path ideas.&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Run the get-pip.py file.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Using command prompt's cd command with a Windows &amp;quot;&amp;amp;&amp;quot; operator to run the Python file in a Windows command prompt:&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;cd &lt;span class="pre"&gt;c:\Python27\Lib\site-packages&lt;/span&gt; &amp;amp; python &lt;span class="pre"&gt;get-pip.py&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Or Linux terminal:&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;cd &lt;span class="pre"&gt;/Python27/Lib/site-packages&lt;/span&gt; &amp;amp;&amp;amp; python &lt;span class="pre"&gt;get-pip.py&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;You should see some activity in command prompt that shows installation/updating of &amp;quot;setup&amp;quot; and &amp;quot;wheel&amp;quot;. When it finishes, you have installed pip.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Type into command prompt at the same location:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;python &lt;span class="pre"&gt;-m&lt;/span&gt; pip install requests&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;This should install the Requests module into your Python libraries. Requests is an http module which is highly regarded almost universally by the Python community.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading! Check out these other posts with pip installed library examples:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pythonmarketer.com/2022/01/30/fix-spelling-and-grammar-with-language_tool_python-and-textblob/"&gt;Fix Grammar and Spelling with language_tool_python and textblob&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pythonmarketer.wordpress.com/2018/08/25/gooey-gui-for-python-scripts/"&gt;gooey&lt;/a&gt; - GUI library&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pythonmarketer.wordpress.com/2020/09/13/delete-all-your-tweets-with-tweepy-and-the-twitter-api/"&gt;tweepy&lt;/a&gt; - Twitter library&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pythonmarketer.com/2020/05/18/how-to-make-json-requests-with-python/"&gt;A Guide to Making HTTP requests&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pythonmarketer.wordpress.com/2019/04/12/datasets-plotting-using-jupyter-pandas-and-matplotlib/"&gt;Plotting Datasets Using Jupyter, Pandas and Matplotlib&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="coding, programming"></category><category term="command line"></category><category term="computers"></category><category term="matrix"></category><category term="neo"></category><category term="pip"></category><category term="python"></category><category term="python libraries"></category><category term="software"></category></entry></feed>