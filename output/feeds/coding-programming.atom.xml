<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Lo-Fi Python - coding, programming</title><link href="https://lofipython.com/" rel="alternate"></link><link href="https://lofipython.com/feeds/coding-programming.atom.xml" rel="self"></link><id>https://lofipython.com/</id><updated>2022-05-09T21:13:00-05:00</updated><entry><title>An Ode to Code</title><link href="https://lofipython.com/an-ode-to-code.html" rel="alternate"></link><published>2022-05-09T21:13:00-05:00</published><updated>2022-05-09T21:13:00-05:00</updated><author><name>pythonmarketer</name></author><id>tag:lofipython.com,2022-05-09:/an-ode-to-code.html</id><summary type="html">&lt;p&gt;Making time to code can be done every day. Carve out those little moments where you can automate tedious tasks or study up on that &lt;a class="reference external" href="https://github.com/tqdm/tqdm"&gt;hot new Python library&lt;/a&gt; that takes your quality to another level.&lt;/p&gt;
&lt;p&gt;Take time to reorganize and refactor in &lt;a class="reference external" href="https://atom.io/"&gt;your favorite text editor&lt;/a&gt;. Break your script …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Making time to code can be done every day. Carve out those little moments where you can automate tedious tasks or study up on that &lt;a class="reference external" href="https://github.com/tqdm/tqdm"&gt;hot new Python library&lt;/a&gt; that takes your quality to another level.&lt;/p&gt;
&lt;p&gt;Take time to reorganize and refactor in &lt;a class="reference external" href="https://atom.io/"&gt;your favorite text editor&lt;/a&gt;. Break your script, then break it again. Break it until it works. Absorb your new abilities as a machine literate human and build skills on top of skills. Make a breakthrough. The code is great. It makes sense. Another tweak here, another tweak there. Run &lt;a class="reference external" href="https://github.com/psf/black"&gt;black&lt;/a&gt; on it and then have a go at &lt;a class="reference external" href="https://peps.python.org/pep-0008/"&gt;PEP-8&lt;/a&gt; to brush up on your style. More tweaks, and need to add some &lt;a class="reference external" href="https://peps.python.org/pep-0257/"&gt;docstrings&lt;/a&gt; for more clarity.&lt;/p&gt;
&lt;p&gt;Another one bites the dust. Who knows where your skills could grow. Following the code is a delightful road. Some days it's hard. Some days it's easy. But it's fulfilling if you treat it like a locksmith does keys. Knowledge is flowing. The craft is built in each moment. Challenges overcome. Battles won. New innovations to munge.&lt;/p&gt;
&lt;p&gt;Code is the medium to communicate with machines and leverage their efficiency for convenient means. Tighter the web we weave with transistors and screens, the more we'll need dignified intermediaries of man and machine. Here's to the good code and the bad code we all will write. May we never let something stop our logical flights to code a better dream.&lt;/p&gt;
</content><category term="coding, programming"></category><category term="growth"></category><category term="python"></category></entry><entry><title>ftfy, The Wonky Text Fixing Python Library</title><link href="https://lofipython.com/ftfy-the-wonky-text-fixing-python-library.html" rel="alternate"></link><published>2022-01-06T11:44:00-06:00</published><updated>2022-01-06T11:44:00-06:00</updated><author><name>pythonmarketer</name></author><id>tag:lofipython.com,2022-01-06:/ftfy-the-wonky-text-fixing-python-library.html</id><summary type="html">&lt;p&gt;Every Python programmer has undoubtedly come across some crazy characters. The &lt;a class="reference external" href="https://ftfy.readthedocs.io/en/latest/"&gt;ftfy library &amp;quot;Fixes Text For You&amp;quot;&lt;/a&gt; and acts like a swiss army knife when you've got questionable characters breaking your script. In my case, an HTTP request was failing because of weird cryptic letters hiding in the data when …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Every Python programmer has undoubtedly come across some crazy characters. The &lt;a class="reference external" href="https://ftfy.readthedocs.io/en/latest/"&gt;ftfy library &amp;quot;Fixes Text For You&amp;quot;&lt;/a&gt; and acts like a swiss army knife when you've got questionable characters breaking your script. In my case, an HTTP request was failing because of weird cryptic letters hiding in the data when it was only supposed to be an apostrophe. This library fixed my text and made it appear flawless. I really like ftfy because it solves a common problem, fixing &amp;quot;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Mojibake#:~:text=Mojibake%20(%E6%96%87%E5%AD%97%E5%8C%96%E3%81%91%3B%20IPA%3A,from%20a%20different%20writing%20system."&gt;mojibake&lt;/a&gt;&amp;quot; or mangled characters. It's a good tool to have when you see these types of issues!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypi.org/project/ftfy/"&gt;Install with pip&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
pip install ftfy
&lt;/pre&gt;
&lt;div class="wp-image-6448 figure"&gt;
&lt;img alt="source: `ftfy documentation &amp;lt;https://ftfy.readthedocs.io/en/latest/avoid.html&amp;gt;`__" src="https://pythonmarketer.files.wordpress.com/2022/01/ftfy-example-1.png?w=819" /&gt;
&lt;p class="caption"&gt;source: &lt;a class="reference external" href="https://ftfy.readthedocs.io/en/latest/avoid.html"&gt;ftfy documentation&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;See also: &lt;a class="reference external" href="https://docs.python.org/3/howto/unicode.html"&gt;Python Unicode How To&lt;/a&gt;&lt;/p&gt;
</content><category term="coding, programming"></category><category term="ftfy"></category><category term="python"></category><category term="text cleaning"></category></entry><entry><title>Did You Read the Whole Error?</title><link href="https://lofipython.com/did-you-read-the-whole-error.html" rel="alternate"></link><published>2021-04-15T15:34:00-05:00</published><updated>2021-04-15T15:34:00-05:00</updated><author><name>pythonmarketer</name></author><id>tag:lofipython.com,2021-04-15:/did-you-read-the-whole-error.html</id><summary type="html">&lt;p&gt;You read the whole thing front to back? Every word? Stop and think about it. What is the computer trying to tell you?&lt;/p&gt;
&lt;p&gt;Sometimes something is obvious but needs to be reminded. I found myself thinking this yet again today. Often there are times where I would have saved some …&lt;/p&gt;</summary><content type="html">&lt;p&gt;You read the whole thing front to back? Every word? Stop and think about it. What is the computer trying to tell you?&lt;/p&gt;
&lt;p&gt;Sometimes something is obvious but needs to be reminded. I found myself thinking this yet again today. Often there are times where I would have saved some time and grief by carefully reading the error.&lt;/p&gt;
&lt;p&gt;Carefully read the error when you see a traceback. Then once you've taken it all in, consider what to do next. If you're stumped, googling it might yield a solution. But make sure you actually read the error first.&lt;/p&gt;
</content><category term="coding, programming"></category><category term="errors"></category><category term="solutions"></category></entry><entry><title>How to Install Libraries and Enable the pip Installer in Python</title><link href="https://lofipython.com/how-to-python-pip-install-new-libraries.html" rel="alternate"></link><published>2018-01-20T17:50:00-06:00</published><updated>2018-01-20T17:50:00-06:00</updated><author><name>pythonmarketer</name></author><id>tag:lofipython.com,2018-01-20:/how-to-python-pip-install-new-libraries.html</id><summary type="html">&lt;p&gt;Python comes with a bunch of &lt;a class="reference external" href="https://docs.python.org/3/py-modindex.html"&gt;standard modules&lt;/a&gt;. My favorites are
shutil, glob, datetime, time, os (operating system), re (regular
expressions) and webbrowser. The standard library is loaded.&lt;/p&gt;
&lt;p&gt;Inevitably, you'll want to install new libraries from Python's rich
ecosystem of external modules. Enter pip, Python's handy package manager
and people's …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Python comes with a bunch of &lt;a class="reference external" href="https://docs.python.org/3/py-modindex.html"&gt;standard modules&lt;/a&gt;. My favorites are
shutil, glob, datetime, time, os (operating system), re (regular
expressions) and webbrowser. The standard library is loaded.&lt;/p&gt;
&lt;p&gt;Inevitably, you'll want to install new libraries from Python's rich
ecosystem of external modules. Enter pip, Python's handy package manager
and people's champion.&lt;/p&gt;
&lt;p&gt;This post will teach you some Python history, show how to install
pandas, and help you troubleshoot problems if it's not working. You'll
find Windows and Linux commands for venv setup (recommended). With pip,
you'll feel like Neo when installing new modules. Any skill is at your
fingertips. It's like learning kung fu. There's probably a library for
that!&lt;/p&gt;
&lt;img alt="I know kung fu" class="alignnone size-full wp-image-1321" src="http://pythonmarketer.files.wordpress.com/2018/01/19c0c-i-know-kung-fu-e1516470914221.png" style="width: 1277px; height: 532px;" /&gt;
&lt;p&gt;&lt;strong&gt;First, Some Python Version Caveats + History&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python 2 reached end of life on January 1st, 2020&lt;/strong&gt;.
&lt;a class="reference external" href="https://www.python.org/doc/sunset-python-2/"&gt;Python 2 has officially been sunset&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Python comes with pip now, no setup is required. But certain versions
such as Python 3.2 or the Python 2.7 that came stock on my improbably
still functioning 2008 black Macbook, for example, may not have it
installed.&lt;/p&gt;
&lt;p&gt;In December 2021, Python 3.6 reached &lt;a class="reference external" href="https://devguide.python.org/devcycle/#end-of-life-branches"&gt;&amp;quot;end of life phase&amp;quot;&lt;/a&gt;. Python 3.6 is &amp;quot;now effectively frozen&amp;quot;. Read more in &lt;a class="reference external" href="https://www.python.org/dev/peps/pep-0494/"&gt;PEP 494&lt;/a&gt;. (Released Oct. 2022)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TLDR:&lt;/strong&gt; use Python 3.7 to 3.11. This blog endorses using the lightning
fast Python version &lt;a class="reference external" href="https://www.python.org/downloads/release/python-3110/"&gt;3.11.&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="enter-this-in-your-terminal"&gt;
&lt;h2&gt;Enter This in Your Terminal&lt;/h2&gt;
&lt;pre class="code literal-block"&gt;
python -m pip install pandas
&lt;/pre&gt;
&lt;p&gt;Pandas is a super useful library for wrangling spreadsheet data, AKA
&amp;quot;tabular&amp;quot; data. If successful, you should see activity that looks
similar to the below screenshot, where I am installing &lt;a class="reference external" href="https://openpyxl.readthedocs.io/en/stable/"&gt;openpyxl&lt;/a&gt;, an additional Python
Excel library you'll likely want. You are good to go! This is the part
where you get to feel like Neo! See &lt;a class="reference external" href="https://docs.python.org/3/installing/index.html"&gt;Installing Python Modules&lt;/a&gt; in the Python
Documentation for more detailed instructions.&lt;/p&gt;
&lt;img alt="neo_pip" class="alignnone size-full wp-image-1322" src="http://pythonmarketer.files.wordpress.com/2018/01/de9d6-neo_pip-e1587604013861.png" style="width: 650px; height: 340px;" /&gt;
&lt;p&gt;&lt;strong&gt;To view all your installed libraries, enter:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
pip list
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Write a &amp;quot;requirements.txt&amp;quot; of installed libraries:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
pip freeze &amp;gt; requirements.txt
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;You can list your outdated packages with the --outdated argument:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
pip list --outdated
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Use pip's -h help command line argument:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
pip -h
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;View your system and user pip config settings:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
pip config debug
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Supplementary Resources&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Take a look at this &lt;a class="reference external" href="https://pythontips.com/2013/07/30/20-python-libraries-you-cant-live-without/"&gt;list of 20 modules&lt;/a&gt;
to get started. Here is another &lt;a class="reference external" href="https://github.com/vinta/awesome-python"&gt;more comprehensive list of libraries&lt;/a&gt; you can now install.&lt;/li&gt;
&lt;li&gt;Swing by the pip documentation &lt;a class="reference external" href="https://pip.pypa.io/en/stable/quickstart/"&gt;Quickstart&lt;/a&gt;and &lt;a class="reference external" href="https://pip.pypa.io/en/stable/user_guide/"&gt;User Guide&lt;/a&gt; to learn some helpful
commands.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://pypi.org/search/?q=time+travel"&gt;PyPI, the Python Package Index&lt;/a&gt; is the official Python
package repository.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://snarky.ca/why-you-should-use-python-m-pip/"&gt;Why you should use 'python -m pip'&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://opensource.com/downloads/pip-cheat-sheet?utm_medium=Email&amp;amp;utm_campaign=weekly&amp;amp;sc_cid=7013a000002DAKPAA4"&gt;pip cheat sheet from opensource.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Congrats on figuring out how to install packages with pip, have fun!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="having-issues-try-upgrading-your-pip-version"&gt;
&lt;h2&gt;Having issues? Try upgrading your pip version.&lt;/h2&gt;
&lt;pre class="literal-block"&gt;
python -m pip install --upgrade pip
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="try-the-ensurepip-command"&gt;
&lt;h2&gt;Try the ensurepip command.&lt;/h2&gt;
&lt;p&gt;This command will install and upgrade pip to the newest version. New in
Python 3.4:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python -m ensurepip --upgrade
&lt;/pre&gt;
&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;The &lt;a class="reference external" href="https://docs.python.org/3/library/ensurepip.html#module-ensurepip"&gt;ensurepip&lt;/a&gt;
package provides support for bootstrapping the pip installer into an
existing Python installation or virtual environment. This
bootstrapping approach reflects the fact that pip is an independent
project with its own release cycle, and the latest available stable
version is bundled with maintenance and feature releases of the
CPython reference interpreter.&amp;quot;&lt;/p&gt;
&lt;p&gt;- &lt;a class="reference external" href="https://docs.python.org/3/library/ensurepip.html"&gt;ensurepip Python Documentation&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You should follow best practice and &lt;a class="reference external" href="https://docs.python.org/3/library/venv.html"&gt;create a virtual environment&lt;/a&gt; before installing
libraries. &lt;a class="reference external" href="https://docs.python.org/3/library/venv.html"&gt;venv&lt;/a&gt; or virtualenv. To create with venv:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python3 -m venv add_env_name_here
&lt;/pre&gt;
&lt;p&gt;After your environment is created, activate it with the first command
below, then install a library on Ubuntu Linux:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
source add_env_path_here/bin activate
python -m pip install pandas
&lt;/pre&gt;
&lt;p&gt;Alternatively, on Windows computers:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
cd add_env_path_here\scripts &amp;amp; activate
python -m pip install pandas
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Getting the prefix right can be tricky.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In the install command, the prefix is a reference to your Python
executable. You may just need to alter your prefix to call it correctly.
Here are some to try in place of &amp;quot;python&amp;quot;. Observe what happens when you
run these command variations. Good luck!&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python3 -m pip install pandas
python3.11 -m pip install pandas
py -m pip install pandas
pip3 install pandas
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="how-to-manually-enable-the-pip-installer"&gt;
&lt;h2&gt;How to Manually Enable the pip Installer&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The rest of this post may be useful to you if you are:&lt;/strong&gt;&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Working on legacy Python 2 or &amp;lt; 3.3 for which pip is not installed.&lt;/li&gt;
&lt;li&gt;Seeking to fix a faulty pip install that is not working properly.&lt;/li&gt;
&lt;li&gt;Curious to know how to manually set up pip.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Assumes Python is already &lt;a class="reference external" href="https://www.python.org/downloads/"&gt;installed&lt;/a&gt;. If you're running Windows 10, I
found it easy to install Python from the &lt;a class="reference external" href="https://www.microsoft.com/en-us/p/python-39/9p7qfqmjrfp7?activetab=pivot:overviewtab"&gt;Windows store&lt;/a&gt;.
Download the &lt;a class="reference external" href="https://bootstrap.pypa.io/get-pip.py"&gt;get-pip.py file&lt;/a&gt;.
Go to the link, right click the page and &amp;quot;Save As&amp;quot; a .py file to
download. Then place the file where you want to access it. I placed mine
in C:Python27Libsite-packages&lt;/p&gt;
&lt;p&gt;You could also download the file with &lt;a class="reference external" href="https://curl.haxx.se/"&gt;curl&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
curl https://bootstrap.pypa.io/get-pip.py -o get-pip.pyt-pip.py
&lt;/pre&gt;
&lt;p&gt;If you are not sure where your site-packages folder is, type &lt;a class="reference external" href="https://stackoverflow.com/questions/122327/how-do-i-find-the-location-of-my-python-site-packages-directory"&gt;python -m
site&lt;/a&gt;
into command prompt for file path ideas.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Run the get-pip.py file.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Using command prompt's cd command with a Windows &amp;quot;&amp;amp;&amp;quot; operator to run the
Python file in a Windows command prompt:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
cd c:\Python27\Lib\site-packages &amp;amp; python get-pip.py
&lt;/pre&gt;
&lt;p&gt;Or Linux terminal:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
cd /Python27/Lib/site-packages &amp;amp;&amp;amp; python get-pip.py
&lt;/pre&gt;
&lt;p&gt;You should see some activity in command prompt that shows
installation/updating of &amp;quot;setup&amp;quot; and &amp;quot;wheel&amp;quot;. When it finishes, you have
installed pip.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Type into command prompt at the same location:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python -m pip install requests
&lt;/pre&gt;
&lt;p&gt;This installs the Requests module into your Python libraries.
Requests is an http module which is highly regarded almost universally
by the Python community.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;Check out these other posts with pip installed library examples:&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a class="reference external" href="https://lofipython.com/fix-spelling-and-grammar-with-language_tool_python-and-textblob/"&gt;fix Grammar and Spelling with language_tool_python and textblob&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://lofipython.com/an-example-pelican-git-blog-post-workflow/"&gt;static site generation with pelican&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://lofipython.com/ftfy-the-wonky-text-fixing-python-library/"&gt;text mojibake mash fixing with ftfy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://lofipython.com/how-to-make-json-requests-with-python/"&gt;a guide to making HTTP requests&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://lofipython.com/gooey-gui-for-python-scripts/"&gt;simple GUI for scripts with gooey&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="coding, programming"></category><category term="command line"></category><category term="computers"></category><category term="matrix"></category><category term="neo"></category><category term="pip"></category><category term="python"></category><category term="python libraries"></category><category term="software"></category></entry><entry><title>Python File Handling Basics</title><link href="https://lofipython.com/python-file-handling-basics.html" rel="alternate"></link><published>2018-01-14T18:53:00-06:00</published><updated>2018-01-14T18:53:00-06:00</updated><author><name>pythonmarketer</name></author><id>tag:lofipython.com,2018-01-14:/python-file-handling-basics.html</id><summary type="html">&lt;p&gt;The basis of many great programs revolve around a simple set of operations:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Open a file.&lt;/li&gt;
&lt;li&gt;Do something with the file contents.&lt;/li&gt;
&lt;li&gt;Save the new file for the user.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Python is nice and simple for this.&amp;nbsp;Paste the below lines into a &lt;a class="reference external" href="https://www.google.com/search?q=text+editor&amp;amp;oq=text+edit&amp;amp;aqs=chrome.0.0j69i57j0l4.2054j0j7&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8"&gt;text editor&lt;/a&gt; and save as a .py file …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The basis of many great programs revolve around a simple set of operations:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Open a file.&lt;/li&gt;
&lt;li&gt;Do something with the file contents.&lt;/li&gt;
&lt;li&gt;Save the new file for the user.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Python is nice and simple for this.&amp;nbsp;Paste the below lines into a &lt;a class="reference external" href="https://www.google.com/search?q=text+editor&amp;amp;oq=text+edit&amp;amp;aqs=chrome.0.0j69i57j0l4.2054j0j7&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8"&gt;text editor&lt;/a&gt; and save as a .py file. &lt;a class="reference external" href="https://github.com/BurntSushi/nfldb/wiki/Python-&amp;amp;-pip-Windows-installation"&gt;You need to have Python 3 installed&lt;/a&gt;. In the same folder as your .py file, save a .txt file with some words in it. Alright, let's write some code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;file_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Enter your file name. e.g. words.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;file_handle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;file_handle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;file_handle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;In line 1, we ask the user to enter their file name with Python's raw_input function. When the program runs, the user enters their text file name with extension. This line stores the name in a variable called file_name.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In line 2,&lt;/strong&gt; we open your text file and store it in a variable I have named file_handle. Think of the file handle as a bridge between your code and the text file. Quick point about the 'r' above: that tells the program to open the file in &amp;quot;Read&amp;quot; mode. There are several different file modes in programming. Some modes are just for reading an existing file, some are just for writing a new file, and some are capable of both. &lt;a class="reference external" href="https://stackoverflow.com/questions/16208206/confused-by-python-file-mode-w/16208298"&gt;This Stack Overflow post&lt;/a&gt; is well written and details the differences between file modes. Once established, the file handle allows you to read the file's contents or write new contents to the file.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In line 3,&lt;/strong&gt;&amp;nbsp;we are calling the .readlines() method on our file handle. This method takes the file contents and stores them, line by line, into a list named &amp;quot;lines&amp;quot;. An alternative method is .read(), which opens the file and stores its contents as one string. Try switching this out in place of&amp;nbsp; .readlines() to check out the difference.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In line 4,&lt;/strong&gt; we are printing the stored lines to show them to the user. We now have the file contents, ready to be used however we please.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In line 5&lt;/strong&gt;, we are closing the file.&lt;/p&gt;
&lt;p&gt;Below, we are going to write a new file using the with statement, which is generally accepted as the best way to read or write a file:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
with open(&amp;quot;Notes.txt&amp;quot;, &amp;quot;w&amp;quot;) as fhand:
    fhand.write(&amp;quot;Did you know whales can live up to 90 years?&amp;quot;)
&lt;/pre&gt;
&lt;p&gt;In line 1, we are using Python's input function to ask the user what to name the file and storing it in a variable named file_name.&lt;/p&gt;
&lt;p&gt;In line 2,&amp;nbsp; we are calling the open function again that we used in the first example, but this time, notice the &amp;quot;w&amp;quot;. This indicates that we are opening the file in &amp;quot;write&amp;quot; mode.&lt;/p&gt;
&lt;p&gt;In line 3, we are calling the .write() method on our file handle, named save_file, and passing it our text to be saved in our new file.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In line 4&lt;/strong&gt;, we are closing the file, completing the creation of our new file in the same folder as our .py program file.&lt;/p&gt;
&lt;p&gt;Your program is now ready to be run. Double-click your .py file to execute it.&lt;/p&gt;
&lt;p&gt;Before learning Python, file operations were a mystery to me. It took me a while to understand this clearly, and I wanted to share. Once you master these basic file operations, programming gets to be a lot more fun. Do try it out for yourself :D&lt;/p&gt;
</content><category term="coding, programming"></category><category term="data"></category><category term="python"></category><category term="software"></category></entry><entry><title>Should You Go To Programming School?</title><link href="https://lofipython.com/should-i-go-to-programming-school.html" rel="alternate"></link><published>2017-07-28T23:45:00-05:00</published><updated>2017-07-28T23:45:00-05:00</updated><author><name>pythonmarketer</name></author><id>tag:lofipython.com,2017-07-28:/should-i-go-to-programming-school.html</id><summary type="html">&lt;p&gt;There is no one-size-fits-all answer. Below are some thoughts that may help you decide.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;What are your programming goals? Get a coding job? Create an app or website? Become more productive at your current job?&lt;/li&gt;
&lt;li&gt;What is your current experience level? Are you starting fresh or do you already know …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;There is no one-size-fits-all answer. Below are some thoughts that may help you decide.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;What are your programming goals? Get a coding job? Create an app or website? Become more productive at your current job?&lt;/li&gt;
&lt;li&gt;What is your current experience level? Are you starting fresh or do you already know a language or two?&lt;/li&gt;
&lt;li&gt;Do you have money saved up? Otherwise, you might need to take out a loan.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A computer science degree is typically most expensive. Coding bootcamps are a lower cost option that pack a wide curriculum into a few weeks or months, but they can still be pricey. The cheapest option is to take a piecemeal approach through various online courses.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;School Advantages&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Wholistic approach. You get the ins and outs of programming from a proven curriculum.&lt;/li&gt;
&lt;li&gt;Community. You learn with other students and from experienced teachers.&lt;/li&gt;
&lt;li&gt;Job placement. Often various schools and bootcamps will connect you to a company.&lt;/li&gt;
&lt;li&gt;Credentials. You gain confidence and the backing of your skills by an established institution.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Potential Downsides&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Tuition Money. A lot of&amp;nbsp;what you need to know is available for free or cheap on the web.&lt;/li&gt;
&lt;li&gt;Skill level match. Some bootcamps are oriented for beginners, others are more advanced. If you do a bootcamp, make sure it fits your skill level.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;If you want a coding job&lt;/strong&gt;, school makes sense. The bootcamps look to be effective if you can handle the up-front investment. It's possible to land a job without schooling but much tougher. I am currently considering &lt;a class="reference external" href="https://www.fullstackacademy.com/"&gt;Full Stack Academy&lt;/a&gt;. and &lt;a class="reference external" href="http://www.codingdojo.com/"&gt;Coding Dojo&lt;/a&gt;. There are many out there. CodeAcademy is a popular route as well.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If you want to make an app or website&lt;/strong&gt;, the school or the non-school route may both work. For the non-school route, the following languages are good places to start: &lt;em&gt;(note - not a comprehensive list, these are my picks.)&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Web App or Website: HTML, CSS,&amp;nbsp;Python, Javascript&lt;/li&gt;
&lt;li&gt;Web App or Website Framework:&amp;nbsp; Flask, Django, py4web, Ruby on Rails, React&lt;/li&gt;
&lt;li&gt;iOS app: Swift plus Apple's Xcode environment, Beeware (python library)&lt;/li&gt;
&lt;li&gt;Android App: Java or Kotlin, Beeware&lt;/li&gt;
&lt;li&gt;General Coding: Python or Ruby&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;If you want to be more productive at work&lt;/strong&gt;, I recommend learning Python. More on Python and where to start &lt;a class="reference external" href="https://pythonmarketer.wordpress.com/2016/02/22/marketer-slash-programmer/"&gt;here&lt;/a&gt;.&amp;nbsp;&lt;a class="reference external" href="https://automatetheboringstuff.com/"&gt;Automate the Boring Stuff With Python&lt;/a&gt; is a great resource for boosting your productivity also.&lt;/p&gt;
&lt;p&gt;It's not easy to decide whether or not school is for you. I'm still unsure after a year and a half of programming on the side. No matter what, continue to learn multiple languages and strive for a better grasp of the ones you know. Good luck!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;My decision: continue self-study and learning online for free.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As of 8 months after writing this post, I have concluded that learning for free online was the right choice for me. I've achieved many of my programming goals in the last three years, thanks to materials available from &lt;a class="reference external" href="https://www.codecademy.com/learn/learn-python"&gt;Codeacademy&lt;/a&gt;, &lt;a class="reference external" href="https://www.coursera.org/learn/python"&gt;Coursera&lt;/a&gt;, &lt;a class="reference external" href="https://www.youtube.com/watch?v=u3d-n41Tobw"&gt;YouTube&lt;/a&gt;, &lt;a class="reference external" href="https://stackoverflow.com/questions/1720421/how-to-concatenate-two-lists-in-python?rq=1"&gt;Stack Overflow&lt;/a&gt;, &lt;a class="reference external" href="https://automatetheboringstuff.com/"&gt;countless helpful resources,&lt;/a&gt;&lt;a class="reference external" href="https://pymotw.com/3/glob/index.html"&gt;interesting blogs&lt;/a&gt;, and &lt;a class="reference external" href="https://docs.python.org/3/library/index.html"&gt;documentation&lt;/a&gt;. I've talked with others who need the in-person assistance that a bootcamp offers to learn. Do what works for you. Good luck with your decision.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Several years later, I also get paid to use Python and Excel for a living! I studied for free online intermittently over 2 years to achieve it.&lt;/p&gt;
</content><category term="coding, programming"></category><category term="app development"></category><category term="computer jobs"></category><category term="python"></category><category term="software"></category><category term="web apps"></category><category term="web development"></category><category term="website"></category></entry></feed>