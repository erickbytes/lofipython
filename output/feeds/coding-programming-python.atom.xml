<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Lo-Fi Python - coding, programming, python</title><link href="https://lofipython.com/" rel="alternate"></link><link href="https://lofipython.com/feeds/coding-programming-python.atom.xml" rel="self"></link><id>https://lofipython.com/</id><updated>2024-01-15T17:41:00-06:00</updated><entry><title>Python Pandas API Oddities</title><link href="https://lofipython.com/python-pandas-api-oddities.html" rel="alternate"></link><published>2024-01-15T17:41:00-06:00</published><updated>2024-01-15T17:41:00-06:00</updated><author><name>lofipython</name></author><id>tag:lofipython.com,2024-01-15:/python-pandas-api-oddities.html</id><summary type="html">&lt;p&gt;This post uses the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/List_of_Delta_Air_Lines_destinations"&gt;Delta Airlines Airports Wikipedia HTML table&lt;/a&gt;
as an example to highlight some niche functions in Python's pandas library.
I be skipped the standard must knows like pd.read_csv() and pd.read_excel().
I use those all the time. This is aimed at the more advanced stuff on â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;This post uses the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/List_of_Delta_Air_Lines_destinations"&gt;Delta Airlines Airports Wikipedia HTML table&lt;/a&gt;
as an example to highlight some niche functions in Python's pandas library.
I be skipped the standard must knows like pd.read_csv() and pd.read_excel().
I use those all the time. This is aimed at the more advanced stuff on the fringes of the docs.
Here are some oddities of the less traveled parts of the pandas documentation.
You never know what you'll find there, it's always evolving.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Install Python dependencies: pandas and lxml, required for read_html()&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="go"&gt;python3.12 -m pip install pandas
python3.12 -m pip install lxml&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Import a DataFrame From Another Library Using the DataFrame Interchange Standard.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Keep in mind that a DataFrame standard exists and supoorted across the Python ecosystem.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="n"&gt;df_not_necessarily_pandas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]})&lt;/span&gt;
&lt;span class="n"&gt;interchange_object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_not_necessarily_pandas&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__dataframe__&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;img alt="interchange dataframes between libraries" src="https://lofipython.com/images/pandas-dataframe-interchange-protocol.png" /&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.api.interchange.from_dataframe.html#pandas.api.interchange.from_dataframe"&gt;Pandas Interchange Object Documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;pandas.read_html(url)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;pd.read_html() accepts a website url. It returns a list of all HTML tables
as DataFrames. After getting the table as a dataframe, use &amp;quot;.drop()&amp;quot; to drop a column and &amp;quot;.fillna()&amp;quot;
to fill NA values as blanks. &lt;a class="reference external" href="https://pandas.pydata.org/docs/reference/api/pandas.read_html.html"&gt;read_html() Documentation&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;

&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;https://en.wikipedia.org/wiki/List_of_Delta_Air_Lines_destinations&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;airports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;# Drop the irrelevant &amp;quot;Refs&amp;quot; column and fill nans blank.&lt;/span&gt;
&lt;span class="n"&gt;airports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;airports&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Refs&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fillna&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;airports&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;pandas.DataFrame.to_html()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This function returns your tabular data as an HTML string.
df.head() accepts a number and returns a df with that many records, in this case 2.
&lt;a class="reference external" href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_html.html"&gt;to_html() Documentation&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;airports&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_html&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;pre class="literal-block"&gt;
&amp;lt;table border=&amp;quot;1&amp;quot; class=&amp;quot;dataframe&amp;quot;&amp;gt;
 &amp;lt;thead&amp;gt;
   &amp;lt;tr style=&amp;quot;text-align: right;&amp;quot;&amp;gt;
     &amp;lt;th&amp;gt;&amp;lt;/th&amp;gt;
     &amp;lt;th&amp;gt;Country / Territory&amp;lt;/th&amp;gt;
     &amp;lt;th&amp;gt;City&amp;lt;/th&amp;gt;
     &amp;lt;th&amp;gt;Airport&amp;lt;/th&amp;gt;
     &amp;lt;th&amp;gt;Notes&amp;lt;/th&amp;gt;
   &amp;lt;/tr&amp;gt;
 &amp;lt;/thead&amp;gt;
 &amp;lt;tbody&amp;gt;
   &amp;lt;tr&amp;gt;
     &amp;lt;th&amp;gt;0&amp;lt;/th&amp;gt;
     &amp;lt;td&amp;gt;Antigua and Barbuda&amp;lt;/td&amp;gt;
     &amp;lt;td&amp;gt;Osbourn&amp;lt;/td&amp;gt;
     &amp;lt;td&amp;gt;V. C. Bird International Airport&amp;lt;/td&amp;gt;
     &amp;lt;td&amp;gt;Seasonal&amp;lt;/td&amp;gt;
   &amp;lt;/tr&amp;gt;
   &amp;lt;tr&amp;gt;
     &amp;lt;th&amp;gt;1&amp;lt;/th&amp;gt;
     &amp;lt;td&amp;gt;Argentina&amp;lt;/td&amp;gt;
     &amp;lt;td&amp;gt;Buenos Aires&amp;lt;/td&amp;gt;
     &amp;lt;td&amp;gt;Ministro Pistarini International Airport&amp;lt;/td&amp;gt;
     &amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;
   &amp;lt;/tr&amp;gt;
 &amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;pandas.DataFrame.memory_usage()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Returns the memory usage of each column in bytes. &lt;a class="reference external" href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.memory_usage.html"&gt;.memory_usage() Documentation&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;airports&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;memory_usage&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;
&lt;span class="normal"&gt;8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;&amp;gt;&amp;gt;&amp;gt; airports.memory_usage()&lt;/span&gt;

&lt;span class="go"&gt;Index                   132&lt;/span&gt;
&lt;span class="go"&gt;Country / Territory    2904&lt;/span&gt;
&lt;span class="go"&gt;City                   2904&lt;/span&gt;
&lt;span class="go"&gt;Airport                2904&lt;/span&gt;
&lt;span class="go"&gt;Notes                  2904&lt;/span&gt;
&lt;span class="go"&gt;dtype: int64&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;pandas.DataFrame.empty&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Every pandas DataFrame has a &amp;quot;.empty&amp;quot; attribute. If Series/DataFrame is empty,
returns True, if not returns False. &lt;a class="reference external" href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.empty.html"&gt;.empty Documentation&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;airports&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# False&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;pandas.DataFrame.T&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Every pandas DataFrame has a &amp;quot;.T&amp;quot; attribute. It returns the transposed version
of the DataFrame. &lt;a class="reference external" href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.T.html#pandas.DataFrame.T"&gt;.T Documentation&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;airports&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;  0                                         1                                    2&lt;/span&gt;
&lt;span class="go"&gt;Country / Territory               Antigua and Barbuda                                 Argentina                                Aruba&lt;/span&gt;
&lt;span class="go"&gt;City                                          Osbourn                              Buenos Aires                           Oranjestad&lt;/span&gt;
&lt;span class="go"&gt;Airport              V. C. Bird International Airport  Ministro Pistarini International Airport  Queen Beatrix International Airport&lt;/span&gt;
&lt;span class="go"&gt;Notes                                        Seasonal&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;pandas.Series.str.get(index)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;str.get() is available via the pandas Series string accessor.
This function is useful when your dataset contains a column holding a list in each cell.
You can pass an index and that value will be returned for each cell in a column.
&lt;a class="reference external" href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.str.get.html#pandas-series-str-get"&gt;str.get() Documentation&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;

&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;String&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;456&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;World&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;new_column&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_column&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;&amp;gt;&amp;gt;&amp;gt; s&lt;/span&gt;
&lt;span class="go"&gt;0                        String&lt;/span&gt;
&lt;span class="go"&gt;1                     (1, 2, 3)&lt;/span&gt;
&lt;span class="go"&gt;2                     [a, b, c]&lt;/span&gt;
&lt;span class="go"&gt;3                           123&lt;/span&gt;
&lt;span class="go"&gt;4                          -456&lt;/span&gt;
&lt;span class="go"&gt;5    {1: &amp;#39;Hello&amp;#39;, &amp;#39;2&amp;#39;: &amp;#39;World&amp;#39;}&lt;/span&gt;
&lt;span class="go"&gt;dtype: object&lt;/span&gt;

&lt;span class="go"&gt;&amp;gt;&amp;gt;&amp;gt; s.str.get(1)&lt;/span&gt;
&lt;span class="go"&gt;0        t&lt;/span&gt;
&lt;span class="go"&gt;1        2&lt;/span&gt;
&lt;span class="go"&gt;2        b&lt;/span&gt;
&lt;span class="go"&gt;3      NaN&lt;/span&gt;
&lt;span class="go"&gt;4      NaN&lt;/span&gt;
&lt;span class="go"&gt;5    Hello&lt;/span&gt;
&lt;span class="go"&gt;dtype: object&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;pandas.DataFrame.convert_dtypes() and .infer_objects()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;These are 2 functions for swiftly handling data types in your tabular data.
Note: these are alternatives to the &lt;a class="reference external" href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.astype.html"&gt;&amp;quot;astype()&amp;quot; function&lt;/a&gt;, which is used more commonly.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;

&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1234&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;5678&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dtypes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Use pandas to coerce data to default types.&lt;/span&gt;
&lt;span class="n"&gt;typed_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;convert_dtypes&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# Coerce data back to object types.&lt;/span&gt;
&lt;span class="n"&gt;objects_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;typed_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;infer_objects&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;converted_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dtypes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;objects_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dtypes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;&amp;gt;&amp;gt;&amp;gt; df.head()&lt;/span&gt;
&lt;span class="go"&gt;  0     1    2&lt;/span&gt;
&lt;span class="go"&gt;0  1234  5678  abc&lt;/span&gt;

&lt;span class="go"&gt;&amp;gt;&amp;gt;&amp;gt; df.dtypes&lt;/span&gt;
&lt;span class="go"&gt;0    object&lt;/span&gt;
&lt;span class="go"&gt;1    object&lt;/span&gt;
&lt;span class="go"&gt;2    object&lt;/span&gt;

&lt;span class="go"&gt;&amp;gt;&amp;gt;&amp;gt; converted_df.dtypes&lt;/span&gt;
&lt;span class="go"&gt;0    string[python]&lt;/span&gt;
&lt;span class="go"&gt;1    string[python]&lt;/span&gt;
&lt;span class="go"&gt;2    string[python]&lt;/span&gt;
&lt;span class="go"&gt;dtype: object&lt;/span&gt;

&lt;span class="go"&gt;&amp;gt;&amp;gt;&amp;gt; objects_df.dtypes&lt;/span&gt;
&lt;span class="go"&gt;0    object&lt;/span&gt;
&lt;span class="go"&gt;1    object&lt;/span&gt;
&lt;span class="go"&gt;2    object&lt;/span&gt;
&lt;span class="go"&gt;dtype: object&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.convert_dtypes.html"&gt;convert_dtypes Documentation&lt;/a&gt;
+ &lt;a class="reference external" href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.convert_dtypes.html"&gt;infer_objects() Documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pique Your Curiosity With Pandas&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now you know a few of my favorite pandas API oddities. It's always time
well spent reading the &lt;a class="reference external" href="https://pandas.pydata.org/"&gt;Pandas API documentation&lt;/a&gt;.
Check out &lt;a class="reference external" href="https://lofipython.com/pandas-pythons-excel-powerhouse"&gt;this other post I wrote about pandas&lt;/a&gt;
for a deeper dive into this powerful Python module.&lt;/p&gt;
</content><category term="coding, programming, python"></category><category term="pandas api"></category><category term="using pandas Python"></category><category term="working with data"></category></entry><entry><title>How to Install Python 3.11 or 3.12 on a Linux Computer</title><link href="https://lofipython.com/installing-python-3.11-on-ubuntu-linux.html" rel="alternate"></link><published>2023-08-13T22:45:00-05:00</published><updated>2023-08-13T22:45:00-05:00</updated><author><name>lofipython</name></author><id>tag:lofipython.com,2023-08-13:/installing-python-3.11-on-ubuntu-linux.html</id><summary type="html">&lt;p&gt;Below are the steps I followed to install both Python 3.11 and Python 3.12 in my Ubuntu Linux shell.
Make sure to adjust your Python version to match 3.11 or 3.12 in all commands.&lt;/p&gt;
&lt;p&gt;I downloaded the .tgz file from Python.org, not sure initially how â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Below are the steps I followed to install both Python 3.11 and Python 3.12 in my Ubuntu Linux shell.
Make sure to adjust your Python version to match 3.11 or 3.12 in all commands.&lt;/p&gt;
&lt;p&gt;I downloaded the .tgz file from Python.org, not sure initially how to build Python from it.
Once I unpacked the compressed files, I saw the build instructions in the README.rst
to build a functional Python 3.11 on my Ubuntu computer. Here's how to install the speedier Python versions 3.11 or 3.12.&lt;/p&gt;
&lt;div class="section" id="how-to-install-python-3-11-or-3-12"&gt;
&lt;h2&gt;How to Install Python 3.11 or 3.12&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Install Linux build libraries.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I followed this step posted on &lt;a class="reference external" href="https://aruljohn.com/blog/install-python/"&gt;this blog&lt;/a&gt;.
If you don't do this, you'll likely see an error about C not being found when running the ./configure command.&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="go"&gt;sudo apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Install sqllite Libraries (Django Requirement)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you wish to make a Django website, install sqllite libraries before you build Python.&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="go"&gt;sudo apt install sqlite3 libsqlite3-dev&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Use curl to download the Python gzip file.&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="go"&gt;curl https://www.python.org/ftp/python/3.11.0/Python-3.11.0.tgz --output Python-3.11.0.tgz&lt;/span&gt;
&lt;/pre&gt;
&lt;img alt="download Python with curl" src="https://lofipython.com/images/curl-python-install-command.png" /&gt;
&lt;p&gt;Unpack gzip file to folder.&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="go"&gt;tar -xvzf Python-3.11.0.tgz&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Change directory, read the README + find build commands.&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="go"&gt;cd Python-3.11.0
cat README.rst&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Build Python.&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="gp"&gt;# &lt;/span&gt;Build&lt;span class="w"&gt; &lt;/span&gt;Python&lt;span class="w"&gt; &lt;/span&gt;on&lt;span class="w"&gt; &lt;/span&gt;Unix,&lt;span class="w"&gt; &lt;/span&gt;Linux,&lt;span class="w"&gt; &lt;/span&gt;BSD,&lt;span class="w"&gt; &lt;/span&gt;macOS,&lt;span class="w"&gt; &lt;/span&gt;and&lt;span class="w"&gt; &lt;/span&gt;Cygwin:&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="go"&gt;./configure --enable-optimizations
make
make test
sudo make install&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Building Python on Various Platforms&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This will install Python as &lt;tt class="docutils literal"&gt;python3&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;You can pass many options to the configure script; run &lt;tt class="docutils literal"&gt;./configure &lt;span class="pre"&gt;--help&lt;/span&gt;&lt;/tt&gt;
to find out more.  On macOS case-insensitive file systems and on Cygwin,
the executable is called &lt;tt class="docutils literal"&gt;python.exe&lt;/tt&gt;; elsewhere it's just &lt;tt class="docutils literal"&gt;python&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Building a complete Python installation requires the use of various
additional third-party libraries, depending on your build platform and
configure options.  Not all standard library modules are buildable or
useable on all platforms.  Refer to the
&lt;a class="reference external" href="https://devguide.python.org/setup/#install-dependencies"&gt;Install dependencies&lt;/a&gt;
section of the Developer Guide for current detailed information on
dependencies for various Linux distributions and macOS.&lt;/p&gt;
&lt;p&gt;On macOS, there are additional configure and build options related
to macOS framework and universal builds.  Refer to &lt;a class="reference external" href="https://github.com/python/cpython/blob/main/Mac/README.rst"&gt;Mac/README.rst&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On Windows, see &lt;a class="reference external" href="https://github.com/python/cpython/blob/main/PCbuild/readme.txt"&gt;PCbuild/readme.txt&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;- Python 3.11 Linux README.rst&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
</content><category term="coding, programming, python"></category><category term="install python linux"></category><category term="installing Python 3.11"></category><category term="installing python 3.12"></category><category term="how to build Python 3.11 + 3.12"></category></entry><entry><title>Retrieve Random Numbers Via Python's random Module + range() Built-in</title><link href="https://lofipython.com/fetch-a-random-number-or-random-n-length-list-of-numbers-in-python-with-the-random-module.html" rel="alternate"></link><published>2022-09-15T23:09:00-05:00</published><updated>2022-09-15T23:09:00-05:00</updated><author><name>pythonmarketer</name></author><id>tag:lofipython.com,2022-09-15:/fetch-a-random-number-or-random-n-length-list-of-numbers-in-python-with-the-random-module.html</id><summary type="html">&lt;p&gt;There are usually many ways to do most things in Python. I've retrieved
random numbers a few different ways at various times within the random
module, often after reading a Stack Overflow post. This time in my most
recent search for random digits, I discovered in the Python docs the â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;There are usually many ways to do most things in Python. I've retrieved
random numbers a few different ways at various times within the random
module, often after reading a Stack Overflow post. This time in my most
recent search for random digits, I discovered in the Python docs the
&lt;a class="reference external" href="https://docs.python.org/3/library/random.html#random.sample"&gt;random.sample()&lt;/a&gt;
function with its k parameter:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Return a &lt;em&gt;k&lt;/em&gt; length list of unique elements chosen from the
population sequence or set. Used for random sampling without
replacement.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/3/library/random.html#random.sample"&gt;https://docs.python.org/3/library/random.html#random.sample&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When combined with the &lt;a class="reference external" href="https://docs.python.org/3.3/library/stdtypes.html?highlight=range#range"&gt;range() built-in&lt;/a&gt;,
it makes doing this easy. Being able to specify a length and return a
list of random numbers is mighty convenient. This function seems a
Pythonic way to randomize to me. Have a look!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="c1"&gt;# Returns a list of 5 random numbers.&lt;/span&gt;
&lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10000000&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Returns a single random number.&lt;/span&gt;
&lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10000000&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div class="wp-image-7196 figure"&gt;
&lt;img alt="Python Random Number Code" src="https://pythonmarketer.files.wordpress.com/2022/09/image-2.png?w=552" /&gt;
&lt;/div&gt;
&lt;p&gt;To choose a sample from a range of integers, use a &lt;a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#range"&gt;range()&lt;/a&gt; object as an
argument.&lt;/p&gt;
&lt;p&gt;&amp;quot;This is especially fast and space efficient for sampling from a large
population&amp;quot;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10000000&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;- Python Docs, &lt;a class="reference external" href="https://docs.python.org/3/library/random.html#random.sample"&gt;https://docs.python.org/3/library/random.html#random.sample&lt;/a&gt;&lt;/p&gt;
</content><category term="coding, programming, python"></category><category term="python random numbers list"></category><category term="random module"></category><category term="random numbers python"></category></entry><entry><title>What I Learned from Black, Python's "Uncompromising" Code Formatter</title><link href="https://lofipython.com/a-learning-use-case-for-black-python-code-formatter.html" rel="alternate"></link><published>2021-09-23T10:12:00-05:00</published><updated>2021-09-23T10:12:00-05:00</updated><author><name>pythonmarketer</name></author><id>tag:lofipython.com,2021-09-23:/a-learning-use-case-for-black-python-code-formatter.html</id><summary type="html">&lt;p&gt;Black is a code formatting tool that I have been testing out recently to see what the hype is about. It is the defacto &amp;quot;uncompromising code formatter in Python&amp;quot;. I normally do not use any code formatters since I'm not required to use them. This short post aims to convince â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Black is a code formatting tool that I have been testing out recently to see what the hype is about. It is the defacto &amp;quot;uncompromising code formatter in Python&amp;quot;. I normally do not use any code formatters since I'm not required to use them. This short post aims to convince you that Black is an insightful way to see the parts of your code that are dangerously unreadable.&lt;/p&gt;
&lt;p&gt;I have found it interesting to see what black does with my gnarliest code. It has taught me what is considered &amp;quot;good formatting&amp;quot; by some Pythonistas. The areas where I see the most improvement is how it enforces &lt;a class="reference external" href="https://www.python.org/dev/peps/pep-0008/"&gt;PEP-8&lt;/a&gt;'s characters per line limit. Often before, I didn't know how to break my code into several lines. My scripts tended to have one-liners trailing off the edge of my text editor. Black teaches you new ways to organize your code and makes it easier to understand. Now I write my code like Black the first time instead of letting it trail off the screen.&lt;/p&gt;
&lt;p&gt;Initially I was hesitant to try Black because I didn't want to sabotage my own code style. But since running Black on a few of my scripts, it has taught me new ways to write code. Give Black a chance and you will learn how to write more readable Python.&lt;/p&gt;
&lt;p&gt;Here's the project on GitHub: &lt;a class="reference external" href="https://github.com/psf/black"&gt;https://github.com/psf/black&lt;/a&gt;&lt;/p&gt;
</content><category term="coding, programming, python"></category><category term="Black Python"></category><category term="PEP-8"></category><category term="writing code"></category></entry><entry><title>Delete All Your Tweets with Tweepy and the Twitter API</title><link href="https://lofipython.com/delete-all-your-tweets-with-tweepy-and-the-twitter-api.html" rel="alternate"></link><published>2020-09-13T21:07:00-05:00</published><updated>2020-09-13T21:07:00-05:00</updated><author><name>pythonmarketer</name></author><id>tag:lofipython.com,2020-09-13:/delete-all-your-tweets-with-tweepy-and-the-twitter-api.html</id><summary type="html">&lt;p&gt;You may want to &lt;a class="reference external" href="https://help.twitter.com/en/managing-your-account/how-to-download-your-twitter-archive"&gt;download an archive&lt;/a&gt; of your tweets before deleting them. I did this and it took about a day to get my archive download.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How To Purge Your Tweet History with Python&lt;/strong&gt;&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Per the &lt;a class="reference external" href="http://docs.tweepy.org/en/latest/install.html"&gt;Tweepy library documentation&lt;/a&gt;, install tweepy with &lt;a class="reference external" href="https://pythonmarketer.wordpress.com/2018/01/20/how-to-python-pip-install-new-libraries/"&gt;pip&lt;/a&gt;. It worked fine in my python â€¦&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;You may want to &lt;a class="reference external" href="https://help.twitter.com/en/managing-your-account/how-to-download-your-twitter-archive"&gt;download an archive&lt;/a&gt; of your tweets before deleting them. I did this and it took about a day to get my archive download.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How To Purge Your Tweet History with Python&lt;/strong&gt;&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Per the &lt;a class="reference external" href="http://docs.tweepy.org/en/latest/install.html"&gt;Tweepy library documentation&lt;/a&gt;, install tweepy with &lt;a class="reference external" href="https://pythonmarketer.wordpress.com/2018/01/20/how-to-python-pip-install-new-libraries/"&gt;pip&lt;/a&gt;. It worked fine in my python 3.8 &lt;a class="reference external" href="https://docs.python.org/3/library/venv.html"&gt;virtual environment&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;
&lt;/pre&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;Sign up for a &lt;a class="reference external" href="https://developer.twitter.com/"&gt;Twitter Developer account&lt;/a&gt; and create an app. I named mine &amp;quot;tweetcleanr&amp;quot;.&lt;/li&gt;
&lt;li&gt;Find your app under &amp;quot;Projects &amp;amp; Apps&amp;quot;. Edit your app's permissions to &amp;quot;&lt;strong&gt;Read + Write + Direct Messages&lt;/strong&gt;&amp;quot;.&lt;/li&gt;
&lt;li&gt;After you update your permissions, select the &amp;quot;Keys and tokens&amp;quot; tab. Then regenerate new API keys. Then paste them in the below script.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="wp-image-4350 figure"&gt;
&lt;img alt="Twitter Dev UX" src="https://pythonmarketer.files.wordpress.com/2020/09/twitter-dev.png?w=1024" /&gt;
&lt;/div&gt;
&lt;ol class="arabic simple" start="5"&gt;
&lt;li&gt;Save the below script as a python file. In command prompt or terminal, run python &lt;strong&gt;delete_tweets.py&lt;/strong&gt; or whatever you want to name it!&lt;/li&gt;
&lt;li&gt;You'll be asked to go to a link and enter an authorization code. Then you'll see your tweets being deleted like pictured below.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;delete_tweets.py&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I found this &lt;a class="reference external" href="https://gist.github.com/davej/113241"&gt;Github Gist&lt;/a&gt; via Google and updated the print and input statements to Python 3. I also added the &lt;a class="reference external" href="https://docs.python.org/3/library/traceback.html"&gt;traceback module&lt;/a&gt; in case you need to debug it. Initially, I received an error telling me to complete step 3 above. I didn't see the error message at first, until adding &lt;tt class="docutils literal"&gt;traceback.print_exc()&lt;/tt&gt; like you see below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tweepy&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;traceback&lt;/span&gt;

&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Delete All Your Tweets - Github Gist by davej&lt;/span&gt;
&lt;span class="sd"&gt;Credit: https://gist.github.com/davej/113241&lt;/span&gt;
&lt;span class="sd"&gt;Ported to Python 3 by Lo-Fi Python: https://lofipython.com/delete-all-your-tweets-with-tweepy-and-the-twitter-api/&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;CONSUMER_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;get_from_dev_portal&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;CONSUMER_SECRET&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;get_from_dev_portal&amp;quot;&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;oauth_login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;consumer_key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;consumer_secret&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Authenticate with twitter using OAuth&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="n"&gt;auth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OAuthHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;consumer_key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;consumer_secret&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;auth_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_authorization_url&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;verify_code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Authenticate at &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; and then enter you verification code here &amp;gt; &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;auth_url&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_access_token&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verify_code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;API&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;batch_delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;api&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;You are about to delete all tweets from the account @&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;.&amp;quot;&lt;/span&gt;
        &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;api&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verify_credentials&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screen_name&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Does this sound ok? There is no undo! Type yes to carry out this action.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;do_delete&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;do_delete&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Cursor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;api&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user_timeline&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;api&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;destroy_status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Deleted:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;traceback&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;print_exc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Failed to delete:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;api&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;oauth_login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CONSUMER_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CONSUMER_SECRET&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Authenticated as: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;api&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screen_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;batch_delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;api&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div class="wp-image-4325 figure"&gt;
&lt;img alt="Python Script Deleting Tweets" src="https://pythonmarketer.files.wordpress.com/2020/09/terminaltweepy.png?w=755" /&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;âœ…&lt;/strong&gt; &lt;strong&gt;Twitter Cleanse Complete&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Twitter has a really slick developer dashboard. Its API combined with the tweepy library got the job done for me. It's great when stuff just works. And it only cost me about 1 hour to complete. Time to start a clean slate. Here's to looking forward.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Supplementary Reading&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://docs.tweepy.org/en/latest/getting_started.html"&gt;Tweepy Documentation Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://developer.twitter.com/en/docs/tutorials"&gt;Twitter's API Tutorials&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://developer.twitter.com/en/docs/tutorials/postman-getting-started"&gt;Twitter Postman Tutorial&lt;/a&gt;&lt;/p&gt;
</content><category term="coding, programming, python"></category><category term="api"></category><category term="tweepy"></category><category term="tweets"></category><category term="twitter"></category></entry></feed>