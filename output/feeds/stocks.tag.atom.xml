<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Lo-Fi Python - stocks</title><link href="https://lofipython.com/" rel="alternate"></link><link href="https://lofipython.com/feeds/stocks.tag.atom.xml" rel="self"></link><id>https://lofipython.com/</id><updated>2021-01-16T23:21:00-06:00</updated><entry><title>Pick Stocks Intelligently with ffn</title><link href="https://lofipython.com/pick-stocks-like-a-pro-with-ffn.html" rel="alternate"></link><published>2021-01-16T23:21:00-06:00</published><updated>2021-01-16T23:21:00-06:00</updated><author><name>pythonmarketer</name></author><id>tag:lofipython.com,2021-01-16:/pick-stocks-like-a-pro-with-ffn.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;How do you calculate stock valuation metrics like&lt;/strong&gt;&lt;a class="reference external" href="https://www.investopedia.com/terms/s/sharperatio.asp"&gt;Sharpe ratio&lt;/a&gt;&lt;strong&gt;?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Recently I've been reading about common &lt;a class="reference external" href="https://www.suredividend.com/ratios-metrics/"&gt;stock valuation metrics&lt;/a&gt; and wondered how I can apply them to my stock portfolio. I started reading about different metrics, sketching formulas and entertained writing a script to calculate these metrics. But Python has â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;How do you calculate stock valuation metrics like&lt;/strong&gt;&lt;a class="reference external" href="https://www.investopedia.com/terms/s/sharperatio.asp"&gt;Sharpe ratio&lt;/a&gt;&lt;strong&gt;?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Recently I've been reading about common &lt;a class="reference external" href="https://www.suredividend.com/ratios-metrics/"&gt;stock valuation metrics&lt;/a&gt; and wondered how I can apply them to my stock portfolio. I started reading about different metrics, sketching formulas and entertained writing a script to calculate these metrics. But Python has no shortage of finance-related libraries. After some furious googling I found &lt;a class="reference external" href="https://github.com/pmorissette/ffn"&gt;ffn&lt;/a&gt;, a way better option than rolling my own formulas. It's a &amp;quot;financial function&amp;quot; library, installable with pip.&lt;/p&gt;
&lt;p&gt;It will be interesting to observe how these metrics vary in my portfolio and learn more of &lt;a class="reference external" href="http://pmorissette.github.io/ffn/ffn.html"&gt;ffn's API&lt;/a&gt;. I like that they use &lt;a class="reference external" href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html"&gt;pandas dataframes&lt;/a&gt; within their library because I'm already familiar with them. At minimum, it's good to understand what stock formulas purport to measure and what it means if the measure is low or high. It makes sense to compare stocks in similar industries or competitors like &lt;a class="reference external" href="https://finance.yahoo.com/quote/NKE/"&gt;NKE&lt;/a&gt; and &lt;a class="reference external" href="https://finance.yahoo.com/quote/ADDYY?p=ADDYY&amp;amp;.tsrc=fin-srch"&gt;ADDYY&lt;/a&gt;. This is a neat tool for stock nerds who want to level up their stock analysis, make smart decisions and ideally pad the portfolio!&lt;/p&gt;
&lt;p&gt;The funny thing is... my lowest university grade was a &amp;quot;C&amp;quot; in my only Finance class. It wasn't easy for me to grasp. But with Python it's a little more interesting and easier to apply. Anyone can level up their finance skills thanks to a cornucopia of finance calculation libraries in the Python ecosystem.&lt;/p&gt;
&lt;p&gt;Recommended Reading: &lt;a class="reference external" href="https://pmorissette.github.io/ffn/index.html#a-brief-introduction"&gt;A Brief Introduction - ffn documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Install ffn with pip:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;python &lt;span class="pre"&gt;-m&lt;/span&gt; pip install ffn&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Here's the code to get stock data with &lt;a class="reference external" href="https://pmorissette.github.io/ffn/quick.html"&gt;ffn&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ffn&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c1"&gt;# ffn.get returns a pandas dataframe of market data.&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ffn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="s1"&gt;'tsla,spot,nflx,nke,addyy'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'2019-01-01'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'2020-12-31'&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="n"&gt;stats&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;calc_stats&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stats&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;
&lt;div class="wp-image-5165 figure"&gt;
&lt;img alt="" src="https://pythonmarketer.files.wordpress.com/2021/01/2019-2020-top-stock.jpg?w=794" /&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;side note on the pyfolio library&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I first considered using pyfolio to pull stock data. It is not &amp;quot;out of the box&amp;quot; ready per se to deliver the results pictured in their &lt;a class="reference external" href="https://pythonmarketer.wordpress.com/2021/01/16/pick-stocks-like-a-pro-with-pyfolio/"&gt;&amp;quot;single stock&amp;quot; example&lt;/a&gt; documentation. You'd need to find another way to fetch your market data or somehow patch the Yahoo Finance API within pyfolio. I preferred &lt;a class="reference external" href="http://pmorissette.github.io/ffn/quick.html"&gt;ffn&lt;/a&gt;, mostly because it worked right away after pip installing it and running the above code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2023 Update:&lt;/strong&gt; ffn and pyfolio depend on the Yahoo Finance API, which changes sometimes break these libraries. Troubleshooting traceback errors may be required.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Try these other Python financial analysis libraries:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://financetrain.com/best-python-librariespackages-finance-financial-data-scientists/"&gt;Best Python Libraries/Packages for Finance and Financial Data Scientists&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/3/library/statistics.html"&gt;python's built-in statistics module&lt;/a&gt; - &lt;a class="reference external" href="https://github.com/mementum/backtrader"&gt;Backtrader&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/bpsmith/tia"&gt;tia: Toolkit for integration and analysis&lt;/a&gt; - &lt;a class="reference external" href="https://github.com/peerchemist/finta"&gt;FinTA (Financial Technical Analysis)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pydata.github.io/pandas-datareader/index.html"&gt;pandas-datareader&lt;/a&gt; - &lt;a class="reference external" href="https://github.com/matplotlib/mplfinance#usage"&gt;mplfinance&lt;/a&gt; - &lt;a class="reference external" href="https://github.com/robertmartin8/PyPortfolioOpt"&gt;PyPortfolioOpt&lt;/a&gt; - &lt;a class="reference external" href="https://github.com/mrjbq7/ta-lib"&gt;TA-Lib Python Port&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/erickbytes/finsou.py"&gt;finsou.py&lt;/a&gt; (CLI written by me)&lt;/p&gt;
&lt;p&gt;see more: &lt;a class="reference external" href="https://github.com/wilsonfreitas/awesome-quant"&gt;awesome-quant&lt;/a&gt;` &amp;lt;&lt;a class="reference external" href="https://github.com/bpsmith/tia#overview"&gt;https://github.com/bpsmith/tia#overview&lt;/a&gt;&amp;gt;`__&lt;/p&gt;
&lt;div class="wp-image-5037 figure"&gt;
&lt;img alt="Image credit, ActiveState: https://www.activestate.com/blog/top-10-python-packages-for-finance-and-financial-modeling/" src="https://pythonmarketer.files.wordpress.com/2021/01/top10financepackages-1200x675-1.png?w=1024" /&gt;
&lt;p class="caption"&gt;Image credit, ActiveState: &lt;a class="reference external" href="https://www.activestate.com/blog/top-10-python-packages-for-finance-and-financial-modeling/"&gt;https://www.activestate.com/blog/top-10-python-packages-for-finance-and-financial-modeling/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="investing"></category><category term="money"></category><category term="personal finance"></category><category term="python"></category><category term="stock formulas"></category><category term="stocks"></category></entry></feed>