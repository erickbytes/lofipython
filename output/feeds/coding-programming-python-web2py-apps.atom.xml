<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Lo-Fi Python - coding, programming, python, web2py, apps</title><link href="https://lofipython.com/" rel="alternate"></link><link href="https://lofipython.com/feeds/coding-programming-python-web2py-apps.atom.xml" rel="self"></link><id>https://lofipython.com/</id><updated>2024-04-07T20:53:00-05:00</updated><entry><title>Troubleshooting Tracebacks to Resurrect a Python Web2py App</title><link href="https://lofipython.com/troubleshooting-tracebacks-to-resurrect-a-web2py-app.html" rel="alternate"></link><published>2024-04-07T20:53:00-05:00</published><updated>2024-04-07T20:53:00-05:00</updated><author><name>lofipython</name></author><id>tag:lofipython.com,2024-04-07:/troubleshooting-tracebacks-to-resurrect-a-web2py-app.html</id><summary type="html">&lt;p&gt;Back in 2016, I &lt;a class="reference external" href="https://lofipython.com/askkevinparker-com-my-first-web-app-other-notes"&gt;built a web2py app&lt;/a&gt;
as my first web application. It accepts a prompt from the user and
primitively attempts to match that text to a line of Kevin Parker's lyrics.&lt;/p&gt;
&lt;p&gt;I didn't look at the app's code for many years. I just needed to log into â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Back in 2016, I &lt;a class="reference external" href="https://lofipython.com/askkevinparker-com-my-first-web-app-other-notes"&gt;built a web2py app&lt;/a&gt;
as my first web application. It accepts a prompt from the user and
primitively attempts to match that text to a line of Kevin Parker's lyrics.&lt;/p&gt;
&lt;p&gt;I didn't look at the app's code for many years. I just needed to log into PythonAnywhere every 3 months
and hit a button to keep it running on their free plan. Until I decided to update it recently.&lt;/p&gt;
&lt;p&gt;Tame Impala released a new album and lots of additional tracks to import to the app.
Just need to update the database with new music. No big deal easy peasy, right? Wrong!&lt;/p&gt;
&lt;p&gt;Part of the problem was that I didn't remember where the important code like the controller default.py
and HTML files were after not seeing it for 5+ years. It took some time to remember the folder
structure of a web2py project.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;web2py Python Errors Solved&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I installed web2py locally with the help of a &lt;a class="reference external" href="https://www.digitalocean.com/community/tutorials/how-to-use-the-web2py-framework-to-quickly-build-your-python-app"&gt;DigitalOcean blog post&lt;/a&gt;.
After I failed to push a new version of the app to production, for some reasons it was in a broken state.
Python version issues surfaced, requiring some heady navigation. Enjoy these gritty details
of the tracebacks that transpired.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="go"&gt;ModuleNotFoundError: No module named 'formatter'&lt;/span&gt;
&lt;/pre&gt;
&lt;img alt="formatter module missing in Python WSGI app" src="https://lofipython.com/images/ModuleNotFoundError-no-module-named-formatter.png" /&gt;
&lt;p&gt;This error showed up in my app's WSGI error logs. Initially, I researched and attempted to install
the &lt;a class="reference external" href="https://pypi.org/project/formatter/"&gt;formatter module&lt;/a&gt;. I believe this was caused by attempting
to run Python code compiled to a .w2p fileon Python 3.11 on a Python 3.10 interpreter. However, I didn't
know how to solve it until after I saw the next error.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="go"&gt;SystemError: compiled code is incompatible&lt;/span&gt;
&lt;/pre&gt;
&lt;img alt="incompatible python interpreter and compiled python code" src="https://lofipython.com/images/SystemError-compiled-code-is-incompatible-cause.png" /&gt;
&lt;p&gt;After reading this error, I consulted Bing about it. One of the options that Bing suggested was
that my Python code had incompatible versions. This was caused by a mismatch between my development
and production Python versions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Installing Python 3.10 in Development Environment&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Originally, I compiled the updated web2py app in Python 3.11 on my Chromebook. My PythonAnywhere environment was
running &lt;a class="reference external" href="https://www.python.org/downloads/release/python-3105/"&gt;Python 3.10&lt;/a&gt;. Therefore, I need to build the development version in Python 3.10 to match the
production environment on PythonAnywhere. Then I entered a handful of commands from Bing Copilot to compile
my Python 3.10 Ubuntu development environment and waited for it to compile.&lt;/p&gt;
&lt;p&gt;The lesson I took away is to consider what Python version your production environment before you begin working on a project.
In most cases, you'll want to match that version in your development environment to avoid errors like this.&lt;/p&gt;
&lt;p&gt;After compiling the new development Python 3.10 version, I exported the app to a new .w2p file.
Next, I imported the .w2p file containing the new app to PythonAnywhere in the admin interface app importer.&lt;/p&gt;
&lt;p&gt;After syncing my development and production environment versions, the app showed a different error.
One problem solved, 2 more discovered in its wake, am I right? Since I was using a .w2p file from 5+ years ago, it contained old Python web2py code written in earlier
Python versions with a few more bugs.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="go"&gt;SyntaxError: multiple exception types must be parenthesized&lt;/span&gt;
&lt;/pre&gt;
&lt;img alt="exception types must be parenthesized in Python" src="https://lofipython.com/images/SyntaxError-exception-types-must-be-parenthesized.png" /&gt;
&lt;p&gt;This error showed up in my appadmin.py. At some point this unparenthesized syntax was phased out of Python.
The fix is add parentheses to the exception statements:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Incorrect&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Correct&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;hr class="docutils" /&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="go"&gt;unable to parse csv file: iterator should return strings, not bytes (the file should be opened in text mode)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;In order to import the new Tame Impala songs to the SQLlite database, web2py provides a
GUI interface in its admin panel or the DAL (Database Abstraction Layer).
I chose to use the GUI. In the GUI, you can either manually enter each song or use its csv import widget.
To save time, I imported via the csv widget. However, this error slowed me down.
It stemmed from the need for TextIOWrapper to convert the csv data to a required format.&lt;/p&gt;
&lt;img alt="unable to parse csv error importing to web2py SQLlite" src="https://lofipython.com/images/unable-to-parse-csv-web2py.png" /&gt;
&lt;p&gt;The solution I found was to use the
&lt;a class="reference external" href="https://github.com/web2py/web2py/issues/2148#issuecomment-616036400"&gt;fix suggested by AnooshaAviligonda&lt;/a&gt;.
In web2py/gluon/packages/dal/pydal/objects.py, I swapped in this code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;csv_reader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TextIOWrapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;utf8_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;dialect&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;dialect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;img alt="unable to parse csv Python fix with TextIOWrapper" src="https://lofipython.com/images/unable-to-parse-csv-fix.png" /&gt;
&lt;p&gt;After adding the above code to my web2py app's objects.py file, the csv importer completed my datavase
import of new tame impala songs. Mission accomplished.&lt;/p&gt;
&lt;p&gt;I successfully imported the new songs to my app and brought the code forward into future Python versions.
Keeping up with this project over the years shows how maintaining an app across different Python versions
can cause unexpected challenges. With tough Python tracebacks conquered, the app is back on the web, now
with all of Tame Impala's new music!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Check out my Tame Impala web2py app here:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://tameimpala.pythonanywhere.com/tameimpala"&gt;tameimpala.pythonanywhere.com/tameimpala&lt;/a&gt;.&lt;/p&gt;
</content><category term="coding, programming, python, web2py, apps"></category><category term="troubleshooting web2py app"></category><category term="updating old Python code"></category><category term="maintaining python code"></category></entry></feed>