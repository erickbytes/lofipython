<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Lo-Fi Python - sqlite3</title><link href="https://lofipython.com/" rel="alternate"></link><link href="https://lofipython.com/feeds/sqlite3.tag.atom.xml" rel="self"></link><id>https://lofipython.com/</id><updated>2020-09-20T00:09:00-05:00</updated><entry><title>SQLite3: Pythonic First Impressions &amp; Lay of the Land</title><link href="https://lofipython.com/getting-the-lay-of-the-land-in-sqlite-and-connecting-to-a-db-with-pythons-sqlite3-library.html" rel="alternate"></link><published>2020-09-20T00:09:00-05:00</published><updated>2020-09-20T00:09:00-05:00</updated><author><name>pythonmarketer</name></author><id>tag:lofipython.com,2020-09-20:/getting-the-lay-of-the-land-in-sqlite-and-connecting-to-a-db-with-pythons-sqlite3-library.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;introduction&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SQLite is one of the heavy hitters in the database space, up there with other popular choices like MySQL, Postgres, Microsoft SQLServer, Cassandra and MariaDB. There is no shortage of &lt;a class="reference external" href="https://dbdb.io/"&gt;database technologies&lt;/a&gt; but SQLite is certainly one that is commonly used. It also has a positive reputation. Its terminal â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;introduction&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SQLite is one of the heavy hitters in the database space, up there with other popular choices like MySQL, Postgres, Microsoft SQLServer, Cassandra and MariaDB. There is no shortage of &lt;a class="reference external" href="https://dbdb.io/"&gt;database technologies&lt;/a&gt; but SQLite is certainly one that is commonly used. It also has a positive reputation. Its terminal interface reminds me of &lt;a class="reference external" href="https://pythonmarketer.wordpress.com/2020/05/25/essential-mysql-terminal-commands-and-connecting-to-mysql-with-flask-pandas-and-pythonanywhere/"&gt;MySQL&lt;/a&gt;. The syntax of both seem similarly &amp;quot;SQL-like&amp;quot; and easy to pick up.&lt;/p&gt;
&lt;p&gt;I finally got around to test-driving a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/SQLite"&gt;SQLite&lt;/a&gt; database this week. In this post, I've listed my impressions of some practical SQLite commands. The &amp;quot;dot&amp;quot; syntax is helpful to do a lot things as you'll see below. I'll conclude by briefly exploring the sqlite3 python library in the python interpreter.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;getting started&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I &lt;a class="reference external" href="https://linuxhint.com/install_sqlite_browser_ubuntu_1804/"&gt;installed SQLite from the terminal&lt;/a&gt; with apt on Ubuntu Linux.&lt;/p&gt;
&lt;p&gt;There are also downloads for Windows. A popular GUI is &lt;a class="reference external" href="https://sqlitestudio.pl/"&gt;SQLite Studio&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;create a new database&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;sqlite3 PythonMarketer.db&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;create a new db + new table and import a csv file to the table, &amp;quot;Readers&amp;quot;&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sqlite3 PythonMarketer.db
.mode csv Readers
.import PythonMarketerReaders2015-2020.csv Readers
&lt;/pre&gt;
&lt;p&gt;[&lt;a class="reference external" href="https://tableplus.com/blog/2018/07/sqlite-how-to-import-csv-file-into-sqlite-table.html"&gt;source&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;create a table&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;CREATE TABLE&lt;/tt&gt;Readers&lt;tt class="docutils literal"&gt;(Country TEXT,Visits INTEGER);&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;add new column with a default value&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;ALTER TABLE Readers ADD&amp;nbsp; TEXT DEFAULT '0';&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;show all help (and . syntax) options&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;.help&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;show all tables&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;.tables&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;show table creation statement (table schema)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;.schema Readers&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;exit sqlite terminal&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;.exit&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;show databases&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;.databases&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;show all indexes&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;.indexes&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;quot;show&amp;quot; various DB settings&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;.show&lt;/tt&gt;&lt;/p&gt;
&lt;div class="wp-block-image docutils container"&gt;
&lt;div class="wp-image-4412 figure"&gt;
&lt;img alt="explain a table in sqllite" src="https://pythonmarketer.files.wordpress.com/2020/09/show-explain-sqlite3.jpg?w=904" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Pictured: &amp;quot;showing&amp;quot; DB settings and &amp;quot;&lt;/em&gt;&lt;a class="reference external" href="https://sqlite.org/lang_explain.html"&gt;EXPLAIN-ing&lt;/a&gt;&lt;em&gt;&amp;quot; a query&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Exploring sqlite operators:&lt;/strong&gt; the &lt;a class="reference external" href="https://www.sqlitetutorial.net/sqlite-glob/"&gt;GLOB operator&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="exploring-my-new-table-with-the-python-sqlite3-library-in-the-python-interpreter"&gt;
&lt;h2&gt;Exploring my new table with the &lt;a class="reference external" href="https://docs.python.org/3/library/sqlite3.html"&gt;Python sqlite3 library&lt;/a&gt; in the Python interpreter&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/3/library/sqlite3.html"&gt;sqlite3&lt;/a&gt; is in the python standard library, always a nice convenience to simply import it! Here we are connecting to an existing .db with &lt;tt class="docutils literal"&gt;sqlite3.connect()&lt;/tt&gt;&lt;/p&gt;
&lt;div class="wp-block-image docutils container"&gt;
&lt;div class="wp-image-4416 figure"&gt;
&lt;img alt="sqllite in the python interpreter" src="https://pythonmarketer.files.wordpress.com/2020/09/python-interpreter-python-sqlite.jpeg?w=717" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Below, getting a cursor object that holds our S&lt;tt class="docutils literal"&gt;ELECT&lt;/tt&gt; query results. Then iterating through each row of the cursor object with a for loop, as demonstrated in the documentation.&lt;/p&gt;
&lt;div class="wp-block-image docutils container"&gt;
&lt;div class="wp-image-4417 figure"&gt;
&lt;img alt="**Shown above:** printing the rows within the cursor object returned from executing a SELECT SQL statement." src="https://pythonmarketer.files.wordpress.com/2020/09/pythonsqlitedbreaders.jpeg?w=820" /&gt;
&lt;p class="caption"&gt;&lt;strong&gt;Shown above:&lt;/strong&gt; printing the rows within the cursor object returned from executing a SELECT SQL statement.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Comparable Cursors and PEP 249&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The cursor object has a variety of methods you can call on it for database operations and to execute SQL. You can read more about them in the &lt;a class="reference external" href="https://docs.python.org/3/library/sqlite3.html"&gt;sqlite3 module documentation&lt;/a&gt;. This library also follows &lt;a class="reference external" href="https://www.python.org/dev/peps/pep-0249/"&gt;PEP 249 - Python Database API Specification&lt;/a&gt; for recommended Database API interfaces. I've noticed that in &lt;a class="reference external" href="https://pythonmarketer.wordpress.com/2019/11/30/inserting-new-records-into-a-microsoft-access-database-with-python/"&gt;pyodbc&lt;/a&gt;, for example, the cursor object looks and feels the same as the cursor object in sqlite3. This is because they are both likely following PEP 249. Very cool!&lt;/p&gt;
&lt;/div&gt;
</content><category term="data, Databases, python, SQL"></category><category term="open data"></category><category term="SQLite"></category><category term="SQLite commands"></category><category term="sqlite3"></category></entry></feed>