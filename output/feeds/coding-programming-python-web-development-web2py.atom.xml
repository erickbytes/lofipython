<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Lo-Fi Python - coding, programming, python, web development, web2py</title><link href="https://lofipython.com/" rel="alternate"></link><link href="https://lofipython.com/feeds/coding-programming-python-web-development-web2py.atom.xml" rel="self"></link><id>https://lofipython.com/</id><updated>2016-03-29T03:02:00-05:00</updated><entry><title>Getting Started With web2py</title><link href="https://lofipython.com/getting-started-with-web2py.html" rel="alternate"></link><published>2016-03-29T03:02:00-05:00</published><updated>2016-03-29T03:02:00-05:00</updated><author><name>pythonmarketer</name></author><id>tag:lofipython.com,2016-03-29:/getting-started-with-web2py.html</id><summary type="html">&lt;p&gt;Feeling really good about my progress with web2py. The tutorial videos are comprehensive, yet easy to understand. For a beginner, the &amp;quot;batteries included&amp;quot; philosophy that web2py has embraced is a godsend. This means&amp;nbsp;everything you need to get creating comes stock. I &lt;a class="reference external" href="http://www.web2py.com/init/default/download"&gt;downloaded the web2py program&lt;/a&gt;, ran it, entered a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Feeling really good about my progress with web2py. The tutorial videos are comprehensive, yet easy to understand. For a beginner, the &amp;quot;batteries included&amp;quot; philosophy that web2py has embraced is a godsend. This means&amp;nbsp;everything you need to get creating comes stock. I &lt;a class="reference external" href="http://www.web2py.com/init/default/download"&gt;downloaded the web2py program&lt;/a&gt;, ran it, entered a password, and was immediately using&amp;nbsp;a functional development interface.&lt;/p&gt;
&lt;p&gt;web2py follows the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller"&gt;Model - View - Controller software architecture&lt;/a&gt;&amp;nbsp;- which means it separates out the activities of programs into a few different layers (please forgive my oversimplified explanations):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Model - Stores data / used&amp;nbsp;in tutorial for database table creation (Written in Python)&lt;/li&gt;
&lt;li&gt;Controller - Used to define page functions (Python)&lt;/li&gt;
&lt;li&gt;Views - What the user sees (HTML/CSS/Javascript)&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="en300" class="alignnone wp-image-479" src="https://pythonmarketer.files.wordpress.com/2016/03/en300.png" style="width: 460px; height: 307px;" /&gt;
&lt;p&gt;&lt;em&gt;(Image&amp;nbsp;from web2py Documentation)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If you're thinking about trying web2py&amp;nbsp;here's a few things that I've really liked so far:&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I have minimal knowledge outside of&amp;nbsp;a few basic concepts of server operations. web2py provides a few simple lines of code that allows quick creation of a table (done in model) and corresponding form (done in controller/view) to add entries to the table and display form submissions elsewhere on your site.&lt;/li&gt;
&lt;li&gt;Right now, I'm enjoying learning&amp;nbsp;about the &lt;a class="reference external" href="https://py4web.com/_documentation/static/en/chapter-05.html"&gt;Database Abstraction Layer (DAL),&lt;/a&gt; which is pretty cool because you can rapidly run and test complex server queries within it.&lt;/li&gt;
&lt;li&gt;It's set up for multiple applications, so I can create and play with&amp;nbsp;several projects at once, whether simple applications or more complex websites.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are 30 videos total on the web2py documentation page, and I've only watched 11 of them but have already learned a ton. The style of the Massimo Di Pierro is great because you often pick up on some golden nuggets of coding wisdom and programming&amp;nbsp;tips while he walks you through the topic.&lt;/p&gt;
&lt;p&gt;It's pretty sweet&amp;nbsp;to be able to create and manipulate a website so quickly; still need to learn more, such as pick up CSS to really make it my own. But for now I'm happy for the many small accomplishments&amp;nbsp;that have been easier to reach thanks to web2py.&lt;/p&gt;
&lt;blockquote&gt;
&lt;strong&gt;Update:&lt;/strong&gt; consider using &lt;a class="reference external" href="https://github.com/web2py/py4web"&gt;py4web&lt;/a&gt;, web2py's successor&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;See also:&lt;/strong&gt; &lt;a class="reference external" href="https://pythonmarketer.wordpress.com/2016/04/30/useful-links-for-web2py-beginners/"&gt;Useful Links for web2py Beginners&lt;/a&gt;&lt;/p&gt;
</content><category term="coding, programming, python, web development, web2py"></category></entry><entry><title>Choosing a Web Development Path</title><link href="https://lofipython.com/choosing-a-web-development-path.html" rel="alternate"></link><published>2016-03-22T03:45:00-05:00</published><updated>2016-03-22T03:45:00-05:00</updated><author><name>pythonmarketer</name></author><id>tag:lofipython.com,2016-03-22:/choosing-a-web-development-path.html</id><summary type="html">&lt;p&gt;I have recently finished this &lt;a class="reference external" href="https://www.coursera.org/learn/html"&gt;HTML course&lt;/a&gt;, which recommends using cPanel
to configure websites. So I bought a domain and registered with cPanel.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;What I thought would happen in trying to create a
website/app:&lt;/strong&gt;Buy a domain and use cPanel and Python in perfect
sync to create a website …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I have recently finished this &lt;a class="reference external" href="https://www.coursera.org/learn/html"&gt;HTML course&lt;/a&gt;, which recommends using cPanel
to configure websites. So I bought a domain and registered with cPanel.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;What I thought would happen in trying to create a
website/app:&lt;/strong&gt;Buy a domain and use cPanel and Python in perfect
sync to create a website.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reality:&lt;/strong&gt;cPanel is configured mostly for PHP. You can run Python
scripts with it, but it doesn't seem to be the most effective route
from what I've read.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So I went back to the drawing board and I've simplified this down to two
basic paths:&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="8%" /&gt;
&lt;col width="40%" /&gt;
&lt;col width="30%" /&gt;
&lt;col width="23%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Options&lt;/td&gt;
&lt;td&gt;Languages&lt;/td&gt;
&lt;td&gt;Hosting&lt;/td&gt;
&lt;td&gt;Framework / IDE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Path 1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Build a website using Python + Python Web Frameworks and HTML&lt;/td&gt;
&lt;td&gt;PythonAnywhere or other Python friendly hosts&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="http://www.web2py.com/"&gt;web2py&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Path 2&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Use a combo of HTML, Javascript + Python, other languages&lt;/td&gt;
&lt;td&gt;cPanel, many other hosts&lt;/td&gt;
&lt;td&gt;None (AKA I'm not sure)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;I'm going with Path 1 because the only language I know is Python. I hope
to learn other languages like Javascript and CSS but would like to get
building as fast as possible.&lt;/p&gt;
&lt;p&gt;I found a free web hosting service called PythonAnywhere. There are
other &lt;a class="reference external" href="https://wiki.python.org/moin/FreeHosts"&gt;free&lt;/a&gt; and paid Python-friendly hosts.&lt;/p&gt;
&lt;p&gt;Instead of the &lt;a class="reference external" href="https://lofipython/starting-to-almost-kinda-think-about-creating-a-web-app/"&gt;previously mentioned web frameworks&lt;/a&gt;,
I've chosen web2py as a starter because of its compatibility with
PythonAnywhere, its simplicity, easy to read documentation and relative
ease of use for beginners.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A note on PythonAnywhere: they get 5 stars for the tutorial pictured
below. It is very nice to see in the whirlwind of confusion of
learning to deal with code and a new environment.&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="PythonAnywhere Tutorial" class="alignnone size-full wp-image-286" src="https://pythonmarketer.files.wordpress.com/2016/03/pythonanywhere-tutorial.jpg" style="width: 1199px; height: 313px;" /&gt;
&lt;p&gt;++ Love this opening quote from &lt;a class="reference external" href="http://web2py.com/book"&gt;web2py Documentation&lt;/a&gt;: &amp;quot;I believe that the ability to easily build
high quality web applications is of critical importance for the growth
of a free and open society. This prevents the biggest players from
monopolizing the flow of information.&amp;quot;&lt;/p&gt;
&lt;p&gt;+++ A note on web2py so far: &lt;a class="reference external" href="http://www.web2py.com/init/default/documentation"&gt;the videos from the creator&lt;/a&gt;, Massimo Di
Pierro, are super useful!&lt;/p&gt;
&lt;blockquote&gt;
&lt;strong&gt;Update:&lt;/strong&gt; consider using &lt;a class="reference external" href="https://github.com/web2py/py4web"&gt;py4web&lt;/a&gt;, web2py's successor&lt;/blockquote&gt;
</content><category term="coding, programming, python, web development, web2py"></category></entry></feed>