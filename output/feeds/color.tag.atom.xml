<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Lo-Fi Python - color</title><link href="https://lofipython.com/" rel="alternate"></link><link href="https://lofipython.com/feeds/color.tag.atom.xml" rel="self"></link><id>https://lofipython.com/</id><updated>2018-09-14T05:45:00-05:00</updated><entry><title>Making A Desktop Color Eyedropper in Python to Grab Color Values</title><link href="https://lofipython.com/making-a-python-eyedropper.html" rel="alternate"></link><published>2018-09-14T05:45:00-05:00</published><updated>2018-09-14T05:45:00-05:00</updated><author><name>pythonmarketer</name></author><id>tag:lofipython.com,2018-09-14:/making-a-python-eyedropper.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Goal:&lt;/strong&gt;
recreate my resume in the dark Atom text editor theme (background and fonts).
&lt;strong&gt;Sub-goal:&lt;/strong&gt;
find a color eyedropper to grab the actual color values of the Atom layout.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Approach #1: find an Atom eyedropper package to grab the colors.&lt;/strong&gt;
My first thought was to find the easiest solution, within â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Goal:&lt;/strong&gt;
recreate my resume in the dark Atom text editor theme (background and fonts).
&lt;strong&gt;Sub-goal:&lt;/strong&gt;
find a color eyedropper to grab the actual color values of the Atom layout.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Approach #1: find an Atom eyedropper package to grab the colors.&lt;/strong&gt;
My first thought was to find the easiest solution, within the packages of my Atom text editor. After searching Atom's packages, the two best potential solutions were an-color-eyedropper: &lt;a class="reference external" href="https://atom.io/packages/an-color-picker"&gt;https://atom.io/packages/an-color-picker&lt;/a&gt; and color picker: &lt;a class="reference external" href="https://atom.io/packages/color-picker"&gt;https://atom.io/packages/color-picker&lt;/a&gt;. The an-color-eyedropper description sounds perfect: &amp;quot;A simple &amp;quot;real&amp;quot; color picker. By &amp;quot;real&amp;quot; I mean it's able to pick colors anywhere on any screen.&amp;quot;&lt;/p&gt;
&lt;p&gt;Unfortunately it failed to install and displayed the error, &amp;quot;Unable to download 400 Bad Request Repository inaccessible&amp;quot;. It seems to rely on the &amp;quot;python&amp;quot; Atom package which is now deprecated. I was unable to find a repo anywhere by googling.&lt;/p&gt;
&lt;p&gt;Color picker: &lt;a class="reference external" href="https://atom.io/packages/color-picker"&gt;https://atom.io/packages/color-picker&lt;/a&gt; has easy-to-follow instructions and installed with no problem. It allows you to quickly select any color visually with sliders. Then the RGB or Hexadecimal values of your color are added as text in the editor in proper format. However, we are looking for a color grabber to pull colors from a screen object. This is more of a productivity enhancing and color exploration tool for programmers. On to Python options.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Approach #2: Use the python tkcolorpicker package to grab the colors.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;The first thing I found on Google was &lt;a class="reference external" href="https://pypi.org/project/tkcolorpicker/"&gt;tkcolorpicker&lt;/a&gt;, a package that uses the &lt;a class="reference external" href="https://pythonmarketer.wordpress.com/2016/02/29/tkinter-and-python-libraries/"&gt;tkinter&lt;/a&gt; library. I couldn't tell exactly what it was, so let's find out. First, install via &lt;a class="reference external" href="https://pythonmarketer.wordpress.com/2018/01/20/how-to-python-pip-install-new-libraries/"&gt;pip&lt;/a&gt;:&lt;/div&gt;
&lt;/div&gt;
&lt;pre class="literal-block"&gt;
python -m pip install tkcolorpicker
&lt;/pre&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Then run the below script. Cool gadget for sure, but also not quite what I was looking to use. It allows selection of a color with sliders or input values, similar to Atom's color picker, but for user input rather than color picking. Nice little tool. :D&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="color_picker_gui" class="wp-image-1462 alignright" src="https://pythonmarketer.files.wordpress.com/2018/09/color_picker_gui.png" style="width: 301px; height: 315px;" /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;tk&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tkinter.ttk&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;ttk&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkcolorpicker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;askcolor&lt;/span&gt;

&lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ttk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;theme_use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;clam&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;hex_code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;RGB_code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;askcolor&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hex_code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;RGB_code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;askcolor()&lt;/tt&gt; returns a tuple with both the RGB and hex codes selected by the user. Above, we are unpacking that tuple into the &lt;tt class="docutils literal"&gt;hex_code&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;RGB_code&lt;/tt&gt; variables.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Approach #3: Use the Python eyedropper package to grab the colors.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I then found &lt;a class="reference external" href="https://github.com/umluizlima/eyedropper"&gt;eyedropper&lt;/a&gt; for Windows, which has a minimalist repository and offers a simple approach to desktop eyedropper functionality. Install eyedropper via &lt;a class="reference external" href="https://pythonmarketer.wordpress.com/2018/01/20/how-to-python-pip-install-new-libraries/"&gt;pip&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python -m pip install eyedropper
&lt;/pre&gt;
&lt;img alt="pyeyedropper_start" class="size-full wp-image-1458 alignright" src="https://pythonmarketer.files.wordpress.com/2018/09/pyeyedropper_start.png" style="width: 239px; height: 140px;" /&gt;
&lt;p&gt;Hover your mouse over the object you want to grab the color from (in my case, the Atom text editor background). Then &lt;a class="reference external" href="https://github.com/umluizlima/eyedropper"&gt;following these instructions&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;Alternatively, I was able to run eyedropper from the command line by entering: &lt;tt class="docutils literal"&gt;py &lt;span class="pre"&gt;-m&lt;/span&gt; eyedropper&lt;/tt&gt;&lt;/p&gt;
&lt;img alt="pasted_hex2" class="alignnone size-full wp-image-1461" src="https://pythonmarketer.files.wordpress.com/2018/09/pasted_hex2.png" style="width: 766px; height: 74px;" /&gt;
&lt;img alt="CCvOYFiUgAA4DJd" class="alignright" src="https://pythonmarketer.files.wordpress.com/2018/09/ccvoyfiugaa4djd.jpg" style="width: 151px; height: 116px;" /&gt;
&lt;p&gt;&lt;strong&gt;Mission possible.&lt;/strong&gt; Then I hit ctrl+v in a text file and there was the hex code for my Atom background. Some of the colors that eyedropper grabbed were nearly identical to those in the Atom text editor dark theme. Others were not quite the same. I made slight eyeball adjustments to the colors for some of the fonts.&lt;/p&gt;
&lt;p&gt;Here's the end result:&lt;a class="reference external" href="https://www.dropbox.com/s/g5uiaqaa5nb3fgn/Developer_Resume_Invert_v2.docx?dl=0"&gt;See My Resume via Dropbox&lt;/a&gt;:D&lt;/p&gt;
&lt;div class="section" id="why-not-use-python-to-convert-hex-to-rgb"&gt;
&lt;h2&gt;Why not &lt;a class="reference external" href="https://stackoverflow.com/questions/29643352/converting-hex-to-rgb-value-in-python"&gt;use Python to convert hex to RGB?&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Microsoft Word uses RGB codes but eyedropper gave us hex. To convert, I found &lt;a class="reference external" href="https://www.webpagefx.com/web-design/hex-to-rgb/"&gt;this website&lt;/a&gt; practical and quick.&lt;/p&gt;
&lt;p&gt;Alternatively, you could &lt;a class="reference external" href="https://stackoverflow.com/questions/29643352/converting-hex-to-rgb-value-in-python"&gt;convert a hex code to RGB with python:&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;hex_code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Enter hex: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lstrip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;RGB_code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hex_code&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;RGB =&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;RGB_code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;img alt="rgb_to_hex" class="alignnone size-full wp-image-2308" src="http://pythonmarketer.files.wordpress.com/2018/09/e084c-rgb_to_hex-e1581286493172.jpg" style="width: 805px; height: 83px;" /&gt;
&lt;/div&gt;
&lt;div class="section" id="what-the-hay-let-s-use-pd-read-clipboard-to-get-the-hex-codes"&gt;
&lt;h2&gt;What the hay, let's use &lt;a class="reference external" href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_clipboard.html"&gt;pd.read_clipboard()&lt;/a&gt; to get the hex codes.&lt;/h2&gt;
&lt;p&gt;Once eyedropper sends the color values to your system's clipboard, there are multiple ways to access them. This alternative uses pandas.&lt;/p&gt;
&lt;p&gt;Installing pandas and &lt;a class="reference external" href="https://github.com/asweigart/pyperclip"&gt;pyperclip&lt;/a&gt; with pip:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python -m pip install pandas
python -m pip install pyperclip
&lt;/pre&gt;
&lt;p&gt;On Linux, install  &lt;a class="reference external" href="https://github.com/astrand/xclip"&gt;xclip&lt;/a&gt; or &lt;a class="reference external" href="https://askubuntu.com/questions/705620/xclip-vs-xsel"&gt;xsel:&lt;/a&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo apt-get install xclip
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;To get the clipboard contents with pandas:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="n"&gt;hex_code_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_clipboard&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hex_code_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Supplementary Notes and Links&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Here's a Python &lt;a class="reference external" href="https://github.com/gigawhitlocks/eyedropper/blob/master/x-color-get.py"&gt;eyedropper script&lt;/a&gt; featuring the &lt;a class="reference external" href="https://pillow.readthedocs.io/en/5.2.x/index.html"&gt;pillow&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/python-xlib/python-xlib"&gt;xlib&lt;/a&gt; libraries that I was unable to get working.&lt;/li&gt;
&lt;li&gt;I didn't try &lt;a class="reference external" href="http://colorcop.net/"&gt;ColorCop for Windows&lt;/a&gt;, but it may be a non-Python alternative.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Did you know?&lt;/strong&gt; Python 2 had a &lt;a class="reference external" href="https://docs.python.org/2/library/colorpicker.html"&gt;ColorPicker&lt;/a&gt; module that is not in Python 3.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://dev.to/espoir/how-pandas-readclipboard-method-works-ake"&gt;How pandas read_clipboard method works&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/pandas-dev/pandas/blob/v1.0.1/pandas/io/clipboards.py#L10-L76"&gt;pandas to_clipboard and read_clipboard source code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;This &lt;a class="reference external" href="https://github.com/Toinane/colorpicker"&gt;desktop tool&lt;/a&gt; has great U/X and an eyedropper feature. It runs on Electron, a Javascript based framework. Coincidentally, Electron was used to build Atom.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="coding, Colors, pandas, programming"></category><category term="atom"></category><category term="color"></category><category term="eyedropper"></category><category term="gui"></category><category term="python"></category></entry></feed>