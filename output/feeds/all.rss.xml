<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Lo-Fi Python</title><link>https://lofipython.com/</link><description></description><lastBuildDate>Sat, 07 Sep 2024 14:42:00 -0500</lastBuildDate><item><title>Should You Block LLMs and Bots From Your Website?</title><link>https://lofipython.com/should-you-block-llms-and-bots-from-your-blog.html</link><description>&lt;p&gt;&lt;strong&gt;Bots and robots.txt&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Bots are crawling the internet. They make up a large chunk of all web traffic.
On my blogs, I've always used the robots.txt to say to bots, &amp;quot;scrape away!&amp;quot; like this:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
User-agent: *
Disallow:
&lt;/pre&gt;
&lt;p&gt;Some websites use a robots.txt to say, &amp;quot;don't scrape our content …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Sat, 07 Sep 2024 14:42:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2024-09-07:/should-you-block-llms-and-bots-from-your-blog.html</guid><category>bots, blogging, internet</category><category>robots.txt policy</category><category>LLMs</category><category>internet ethics</category></item><item><title>Launching A Web Browser From Ubuntu Shell</title><link>https://lofipython.com/launching-a-web-browser-from-ubuntu-shell.html</link><description>&lt;p&gt;Ubuntu allows aliasing commands to run a shell function. Below, I used
&lt;a class="reference external" href="https://linux.die.net/man/1/xdg-open"&gt;xdg-open&lt;/a&gt; to open my Cloudflare Pages
dashboard with an alias.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Add Ubuntu Function to .bashrc&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I used VS Code to add this to my .bashrc file. Now, when I type &lt;strong&gt;cloudflare&lt;/strong&gt;
into my shell it launches the dashboard …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Thu, 29 Aug 2024 12:45:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2024-08-29:/launching-a-web-browser-from-ubuntu-shell.html</guid><category>coding, programming, ubuntu, web browser</category><category>alias web browser from ubuntu</category><category>xdg-open browser in shell</category><category>ubuntu alias</category></item><item><title>Copying a Cell Value to a New Google Sheet With Apps Script</title><link>https://lofipython.com/copying-a-cell-value-to-a-new-google-sheet-with-apps-script.html</link><description>&lt;p&gt;I've been messing around with &lt;a class="reference external" href="https://www.google.com/script/start/"&gt;Apps Script&lt;/a&gt; lately
and am finding it useful. The below Apps Script was created with a few prompts to Bing Copilot. First, I asked Bing:&lt;/p&gt;
&lt;blockquote&gt;
Write a Google sheets formula that copies the value in cell B10 to another sheet and also fills another column …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Mon, 12 Aug 2024 17:00:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2024-08-12:/copying-a-cell-value-to-a-new-google-sheet-with-apps-script.html</guid><category>coding, programming, apps script, google sheets</category><category>automating google sheets job</category><category>google sheets auto-update</category><category>create new row in google sheets apps script</category></item><item><title>Importing and Analyzing Data With Google Sheets Functions</title><link>https://lofipython.com/import-analyze-data-with-google-sheets-functions.html</link><description>&lt;p&gt;This post focuses on Google Sheets formulas, rather than Python. If you're interested in accessing Google Sheets with Python,
check out this &lt;a class="reference external" href="https://lofipython.com/copying-a-csv-file-to-google-sheets-with-pygsheets"&gt;post I wrote about the pygsheets library&lt;/a&gt;. I haven't personally tried it, but
&lt;a class="reference external" href="https://www.xlwings.org/blog/python-for-google-sheets"&gt;xlwings&lt;/a&gt; also looks like a decent option if you're looking for Google Sheets Python libraries …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Thu, 25 Jul 2024 16:00:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2024-07-25:/import-analyze-data-with-google-sheets-functions.html</guid><category>spreadsheets, data analysis, google sheets</category><category>google sheets</category><category>data wrangling</category><category>speadsheet data import</category></item><item><title>There is Background Noise in Real Life</title><link>https://lofipython.com/background-noise-in-real-life.html</link><description>&lt;p&gt;While walking down a busy avenue in Mexico, I listened to a conversation in Spanish. I'm not fluent in Spanish,
but I have 4 years of high school classes and ~2 more years of real world experience. Spanish is not spoke in a bubble.
It needs to be practiced to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Tue, 25 Jun 2024 17:28:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2024-06-25:/background-noise-in-real-life.html</guid><category>learning, productivity, Spanish</category><category>learning philosophy</category><category>focus</category><category>achievement</category></item><item><title>How to Share a Google Calendar Event URL</title><link>https://lofipython.com/how-to-share-a-google-calendar-event-url.html</link><description>&lt;p&gt;You can easily share a Google Calendar event if you know the url syntax Google uses.
When the url is opened in a browser, it prompts the person you want to share an event
with to save it to their calendar.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Demonstrating Google Calendar URL Arguments in Python&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;By simply …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Wed, 01 May 2024 16:14:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2024-05-01:/how-to-share-a-google-calendar-event-url.html</guid><category>coding, programming, python, urls, automation</category><category>Google Calendar URL API example</category><category>sharing a Google Calendar event</category><category>create google calendar event with python</category></item><item><title>Troubleshooting Tracebacks to Resurrect a Python Web2py App</title><link>https://lofipython.com/troubleshooting-tracebacks-to-resurrect-a-web2py-app.html</link><description>&lt;p&gt;Back in 2016, I &lt;a class="reference external" href="https://lofipython.com/askkevinparker-com-my-first-web-app-other-notes"&gt;built a web2py app&lt;/a&gt;
as my first web application. It accepts a prompt from the user and
primitively attempts to match that text to a line of Kevin Parker's lyrics written for the band Tame Impala.&lt;/p&gt;
&lt;p&gt;I didn't look at the app's code for many years …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Sun, 07 Apr 2024 20:53:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2024-04-07:/troubleshooting-tracebacks-to-resurrect-a-web2py-app.html</guid><category>coding, programming, python, web2py, apps</category><category>troubleshooting web2py app</category><category>updating old Python code</category><category>maintaining python code</category></item><item><title>Run Python in Your HTML Via a Custom Django Template Tags Filter</title><link>https://lofipython.com/how-to-write-a-custom-django-html-filter.html</link><description>&lt;p&gt;This post shows how to set up a custom Django template tag filter. With help from Django's load built-in,
you can execute a Python function from your app's HTML. In this example, the function returns the quotient,
or result of dividing two numbers. Mathematics and Python for the win!&lt;/p&gt;
&lt;p&gt;I …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Sun, 31 Mar 2024 16:18:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2024-03-31:/how-to-write-a-custom-django-html-filter.html</guid><category>coding, programming, python, Django</category><category>django custom filter</category><category>dynamic HTML python django</category><category>running Python in Django HTML</category></item><item><title>Find Broken Links in Your .rst Documents With rst-url-validator</title><link>https://lofipython.com/validating-rst-links-with-rst-url-validator.html</link><description>&lt;p&gt;The posts on this blog are written in &lt;a class="reference external" href="https://www.writethedocs.org/guide/writing/reStructuredText/"&gt;reStructuredText&lt;/a&gt;.
I recently had an idea to write a Python script to check my .rst document url links for broken tags or urls that are not valid.
When I'm using &lt;a class="reference external" href="https://pypi.org/project/pelican/"&gt;Pelican&lt;/a&gt;, it hints when a url tag is malformed and gives a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Fri, 01 Mar 2024 12:56:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2024-03-01:/validating-rst-links-with-rst-url-validator.html</guid><category>coding, programming, python, writing, .rst, reStructuredtext</category><category>reStructuredtext Format</category><category>python rst url validation</category><category>how to validate .rst links</category></item><item><title>Fixing INSTALL_IMAGE_LOADER_TIMED_OUT Error 52 on Crostini Linux Terminal for Chromebook</title><link>https://lofipython.com/fixing-install_image_loader_timed_out-on-crostini-linux-chromebook-terminal.html</link><description>&lt;p&gt;When booting up the Ubuntu shell on my Chromebook, it usually just works. However, After I updated
to a new version of Chromebook OS, I was getting this error:&lt;/p&gt;
&lt;blockquote&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;vmshell failed:&lt;/dt&gt;
&lt;dd&gt;&lt;dl class="first last docutils"&gt;
&lt;dt&gt;Error starting crostini for terminal:&lt;/dt&gt;
&lt;dd&gt;52 (INSTALL_IMAGE_LOADER_TIMED_OUT)&lt;/dd&gt;
&lt;/dl&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/blockquote&gt;
&lt;p&gt;First, I restarted my Chromebook but the error persisted after restarting. So …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Thu, 22 Feb 2024 13:22:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2024-02-22:/fixing-install_image_loader_timed_out-on-crostini-linux-chromebook-terminal.html</guid><category>programming, linux, shell</category><category>troubleshooting chromebook crostini error 52</category><category>solving image loader timed out error</category><category>restart chromebook linux container</category></item><item><title>Passing the Webmention Rocks! Webmention Update Test With curl and Setting Up a Webmention.io Endpoint</title><link>https://lofipython.com/passing-the-webmention-rocks-webmention-update-test-with-curl.html</link><description>&lt;p&gt;After discovering Webmentions via a &lt;a class="reference external" href="https://localghost.dev/blog/sending-webmentions-from-a-static-site/"&gt;helpful blog post about sending webmentions&lt;/a&gt;,
I wondered how I might be able to achieve sending and receiving them from my Pelican blog. I discovered the
&lt;a class="reference external" href="Webmention.Rocks"&gt;Webmention Rocks!&lt;/a&gt; website and the &lt;a class="reference external" href="https://www.w3.org/TR/webmention/"&gt;Webmention Protocol&lt;/a&gt;.
Webmentions are a standard for sending notification of linkbacks, likes, comments and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Wed, 21 Feb 2024 15:37:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2024-02-21:/passing-the-webmention-rocks-webmention-update-test-with-curl.html</guid><category>coding, programming, curl, webmentions, blogging</category><category>webmention protocol</category><category>implementing webmentions on a blog</category><category>receiving webmentions with webmention.io</category><category>testing webmentions</category><category>sending webmentions</category></item><item><title>Make Your Python Installs Faster With uv</title><link>https://lofipython.com/make-your-python-installs-faster-with-uv.html</link><description>&lt;p&gt;For several years, &lt;a class="reference external" href="https://pip.pypa.io/en/stable/"&gt;pip&lt;/a&gt; and &lt;a class="reference external" href="https://pypi.org/project/pip-tools/"&gt;pip-tools&lt;/a&gt; have become distinguished in Python packaging
for their usability and ubiquity. Recently there has been some interesting new developments
in the realm of Python packaging tools. In a trend that started around 2022, there has been an
ongoing &amp;quot;Rustification&amp;quot; of Python tooling.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;uv is …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Fri, 16 Feb 2024 12:33:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2024-02-16:/make-your-python-installs-faster-with-uv.html</guid><category>coding, programming, python</category><category>optimizing python installs</category><category>uv python installation</category><category>installing python packages with uv</category></item><item><title>Ways to Free Up Disk Space on Your Computer for Python Developers</title><link>https://lofipython.com/ways-to-free-up-disk-space-on-your-computer.html</link><description>&lt;p&gt;Below are some ways to free up disk space on your computer. This will be most helpful
for Ubuntu users and Python developers. The pip examples show what I used on my Python
version 3.11, so if you're running a different version use that number, like
pip3.12, pip3 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Fri, 09 Feb 2024 14:30:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2024-02-09:/ways-to-free-up-disk-space-on-your-computer.html</guid><category>computer maintenance, Python, Ubuntu, disk space</category><category>how to free up disk space</category><category>creating extra linux ubuntu disk space</category><category>cleaning up disk space on hard drive</category><category>managing linux files</category><category>clearing python cache and libraries</category></item><item><title>Adding City Name Autocomplete to a Django Form With jQuery + AJAX</title><link>https://lofipython.com/adding-city-name-autocomplete-to-a-django-form-with-jquery-ajax.html</link><description>&lt;p&gt;Below is a slightly modified adaptation of the &lt;a class="reference external" href="https://espere.in/Enhance-Your-Django-App:-Step-by-Step-Guide-to-Implementing-Autocomplete-Search-with-jQuery/"&gt;Espere.in Step By Step Guide&lt;/a&gt;
by Abdulla Fajal. I needed to make a few changes to the code to get things to work.
I also expanded the example to show how I imported cities data to the Django model.
In this …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Mon, 05 Feb 2024 14:33:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2024-02-05:/adding-city-name-autocomplete-to-a-django-form-with-jquery-ajax.html</guid><category>coding, programming, python, AJAX, Javascript, web development</category><category>making a city autocomplete form</category><category>how to make django autocomplete</category><category>integrating Django and jQuery</category></item><item><title>First Impressions and Key Concepts of the Django Python Web Framework</title><link>https://lofipython.com/first-impressions-and-key-concepts-of-the-django-python-web-framework.html</link><description>&lt;p&gt;&lt;strong&gt;First Impressions of Django&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Picking up &lt;a class="reference external" href="https://pypi.org/project/Django/"&gt;Django&lt;/a&gt; felt right. In the past I used
other Python web frameworks like &lt;a class="reference external" href="http://www.web2py.com/"&gt;web2py&lt;/a&gt; and &lt;a class="reference external" href="http://www.web2py.com/"&gt;flask&lt;/a&gt;.
I mostly avoided Django before now because it felt a bit overkill for the smaller
toy apps I made in my beginning years as a Python developer. For …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Fri, 02 Feb 2024 12:33:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2024-02-02:/first-impressions-and-key-concepts-of-the-django-python-web-framework.html</guid><category>coding, programming, python, django, web development</category><category>django web framework</category><category>building websites with django python</category><category>getting started with a django app</category></item><item><title>Python Pandas API Oddities</title><link>https://lofipython.com/python-pandas-api-oddities.html</link><description>&lt;p&gt;Below I've highlighted some niche functions in Python's pandas library. I've plucked
a few examples from the pandas documentation and the
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/List_of_Delta_Air_Lines_destinations"&gt;Delta Airlines Airports Wikipedia HTML table&lt;/a&gt;
for sample data. This post is aimed at the more advanced stuff on the fringes of the pandas docs.
Here are some oddities …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Mon, 15 Jan 2024 17:41:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2024-01-15:/python-pandas-api-oddities.html</guid><category>coding, programming, python, pandas</category><category>pandas api</category><category>using pandas in Python</category><category>working with data</category><category>how to use pandas</category><category>reading HTML with pandas</category><category>reading pandas memory usage</category></item><item><title>Streamline Sharing Your Wi-Fi Network Details With Python</title><link>https://lofipython.com/how-to-make-a-wi-fi-qr-code-with-python.html</link><description>&lt;p&gt;If you host a public space or office with shared Wi-Fi, a QR code skips the tedious process of
exchanging your network's details. This is nice to have as an alternative to asking
people to manually enter an auto-generated, cryptic, error-prone 16 character string password.
Especially when you frequently have …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Fri, 27 Oct 2023 19:33:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2023-10-27:/how-to-make-a-wi-fi-qr-code-with-python.html</guid><category>coding, programming, python, QR code, Wi-Fi</category><category>making a wi-fi QR code</category><category>how to create a QR code for internet password</category></item><item><title>Formatting URL Parameters in Python</title><link>https://lofipython.com/formatting-url-arguments-in-python.html</link><description>&lt;p&gt;When I first started working with APIs, I had a bad habit of passing URL parameters
as one long ugly string. Anything longer than 79 characters violates PEP-8.
It's also hard to read and can be difficult to edit the code in your text editor if the URL is trailing …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Wed, 25 Oct 2023 15:42:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2023-10-25:/formatting-url-arguments-in-python.html</guid><category>http, urls, python, requests</category><category>url formatting</category><category>working with urls in APIs</category><category>python http url formatting</category><category>python url parameters</category><category>format python url arguments</category></item><item><title>How I Sped Up My Python CLI By 25%</title><link>https://lofipython.com/how-i-sped-up-a-python-get-request-by-25%.html</link><description>&lt;p&gt;I recently noticed that the &lt;a class="reference external" href="https://github.com/erickbytes/finsou.py"&gt;Yahoo Finance stock summary command line interface (CLI)&lt;/a&gt; I made seemed to be slowing down. Seeking to understand what was happening in my code, I remembered Python has multiple profilers available like Scalene, line_profiler, cProfile and pyinstrument. In this case, I was running my code …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Fri, 13 Oct 2023 17:25:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2023-10-13:/how-i-sped-up-a-python-get-request-by-25%.html</guid><category>coding, programming, python, python performance, CLI</category><category>python CLI</category><category>python script optimization</category><category>speeding up python code</category></item><item><title>Making a Yahoo Stock Price Summary CLI with Python</title><link>https://lofipython.com/making-a-yahoo-stock-price-summary-cli-with-python.html</link><description>&lt;p&gt;Over the past few years, I found a few different external Python libraries that relied on a broken &lt;a class="reference external" href="https://finance.yahoo.com/"&gt;Yahoo Finance&lt;/a&gt; API. Apparently, the API changes frequently, leaving us developers in a tough spot troubleshooting tracebacks in order to get stock data. I wanted to check my stocks' prices from the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Tue, 10 Oct 2023 18:56:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2023-10-10:/making-a-yahoo-stock-price-summary-cli-with-python.html</guid><category>coding, programming, python, stocks, CLI</category><category>stock prices command line</category><category>python CLI</category><category>python investing research</category></item><item><title>An Introduction to the LangChain Python Library</title><link>https://lofipython.com/an-introduction-to-the-langchain-python-library.html</link><description>&lt;p&gt;LangChain is a lauded Python library in the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Large_language_model"&gt;large language model&lt;/a&gt; space. It seems to be riding along on the AI hype train as of late and is getting mentioned everywhere I look. I wrote this post to understand better, what is LangChain? Warning: I learned a lot by researching …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Mon, 02 Oct 2023 15:15:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2023-10-02:/an-introduction-to-the-langchain-python-library.html</guid><category>coding, programming, python, artificial intelligence, AI</category><category>python large language models</category><category>python LLM</category><category>langchain python introduction</category><category>python LLM orchestration</category></item><item><title>RSS Is Thriving: Working With RSS Python Tools</title><link>https://lofipython.com/working-with-rss-in-python.html</link><description>&lt;p&gt;There have been countless obituaries about RSS on the internet, like when Dan McKinley wrote that &lt;a class="reference external" href="https://mcfunley.com/google-reader-killed-rss"&gt;&amp;quot;Google Reader Killed RSS&amp;quot;&lt;/a&gt;. For sure, the existence of Google Reader had an impact on other readers gaining a wider audience before it was shut down by Google. This likely did have a suppressive …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Mon, 18 Sep 2023 17:14:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2023-09-18:/working-with-rss-in-python.html</guid><category>coding, programming, python, XML, RSS, writing</category><category>python RSS tools</category><category>RSS aggregator</category><category>RSS validation</category><category>parsing RSS python</category><category>RSS feeds</category><category>python RSS readers</category></item><item><title>A Power Ranking of Python's Best Events and Conferences</title><link>https://lofipython.com/power-ranking-the-best-python-events-and-conferences.html</link><description>&lt;p&gt;Python events and conferences are a great way to learn about a niche problem someone solved, new libraries in the ecosystem or general programming topics. Here are some of the best events I've found or experienced related to Python.&lt;/p&gt;
&lt;p&gt;The events on this list can be either a live, in-person …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Thu, 14 Sep 2023 01:33:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2023-09-14:/power-ranking-the-best-python-events-and-conferences.html</guid><category>python, events, conferences</category><category>python events</category><category>best python conferences</category><category>best python talks</category></item><item><title>How to Install Python 3.11 or 3.12 on a Linux Computer</title><link>https://lofipython.com/installing-python-3.11-on-ubuntu-linux.html</link><description>&lt;p&gt;Below are the steps I followed to install both Python 3.11 and Python 3.12 in my Ubuntu Linux shell.
Make sure to adjust your Python version to match 3.11 or 3.12 in all commands.&lt;/p&gt;
&lt;p&gt;I downloaded the .tgz file from Python.org, not sure initially how …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Sun, 13 Aug 2023 22:45:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2023-08-13:/installing-python-3.11-on-ubuntu-linux.html</guid><category>coding, programming, python</category><category>install python linux</category><category>installing Python 3.11</category><category>installing python 3.12</category><category>how to build Python 3.11 + 3.12</category></item><item><title>Opening Files From The Terminal With Text Editor CLIs</title><link>https://lofipython.com/opening-files-in-the-shell-or-terminal-with-text-editor-clis.html</link><description>&lt;p&gt;Most text editors can open files from a computer's command line shell. Here are 8 different text editor commands for opening a file:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IDLE (Python's Built-in Editor)&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="go"&gt;idle file.py&lt;/span&gt;
&lt;/pre&gt;
&lt;img alt="CLI help options for Python's IDLE text editor" src="https://lofipython.com/images/idlecli.png" /&gt;
&lt;p&gt;image source: &lt;a class="reference external" href="https://docs.python.org/3/library/idle.html#startup-and-code-execution"&gt;IDLE documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sublime&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="go"&gt;subl template.rst&lt;/span&gt;
&lt;/pre&gt;
&lt;img alt="using subl CLI to open files in Sublime" src="https://lofipython.com/images/sublimeeditorexample.png" /&gt;
&lt;p&gt;&lt;strong&gt;VS Code&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="go"&gt;code file.py&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Atom&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="go"&gt;atom file.py&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Emacs&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="go"&gt;emacs -nw …&lt;/span&gt;&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Mon, 07 Aug 2023 13:56:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2023-08-07:/opening-files-in-the-shell-or-terminal-with-text-editor-clis.html</guid><category>coding, programming, text editors</category><category>sublime command line</category><category>vscode command prompt</category><category>text editor CLI</category><category>emacs open text file</category><category>vs code open script</category><category>open in notepad++ file</category></item><item><title>Analyzing Football AKA Soccer With Python</title><link>https://lofipython.com/analyzing-football-aka-soccer-with-python.html</link><description>&lt;p&gt;The world's game is fun to watch. It's obvious when a team is dominant against a weaker opponent. What gives one team an edge over another? Is it short, crisp and reliable passing resulting in a high conversion percentage? Or shots on goal? Quality touches. Clinicality in the final third …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Thu, 27 Jul 2023 22:23:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2023-07-27:/analyzing-football-aka-soccer-with-python.html</guid><category>football, coding, programming, python, sports</category><category>python football analytics Python football heat map</category><category>football data analytics</category><category>Python soccer analytics</category></item><item><title>There's a Linter for That! Python Linter and Formatter Libraries You Gotta Know</title><link>https://lofipython.com/There's-a-Linter-for-That-Python-Linting-Libraries-You-Should-Know.html</link><description>&lt;p&gt;Linters exist for almost every kind of structured document. Python code, SQL, reStructuredText and many data formats can be improved
with a linting library. Python's ecosystem has no shortage of formatters and linters.&lt;/p&gt;
&lt;p&gt;In this post, I'll highlight the typical players and some niche linters you might not have heard …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Sun, 23 Jul 2023 21:10:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2023-07-23:/There's-a-Linter-for-That-Python-Linting-Libraries-You-Should-Know.html</guid><category>coding, programming, python, linting, tools</category><category>python linters</category><category>linting tools</category><category>python RST linting</category><category>SQL linting</category><category>code linting</category><category>HTML linter</category><category>Markdown linter</category></item><item><title>15 Cloudflare Pages Free Plan Features</title><link>https://lofipython.com/15-Cloudflare-Pages-Free-Plan-Features.html</link><description>&lt;p&gt;Recently, this blog switched to &lt;a class="reference external" href="https://pages.cloudflare.com/"&gt;Cloudflare Pages&lt;/a&gt; after years of hosting on WordPress. I'm now using the free plan and enjoying the various settings that allow you control aspects of security at a level not found in WordPress.&lt;/p&gt;
&lt;p&gt;For example, you can activate the &amp;quot;bot fight mode&amp;quot;, &amp;quot;browser integrity check …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lofipython</dc:creator><pubDate>Sun, 09 Jul 2023 21:16:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2023-07-09:/15-Cloudflare-Pages-Free-Plan-Features.html</guid><category>coding, programming, blogging, web hosting</category><category>Cloudflare Pages blog</category><category>best Cloudflare website features</category><category>Cloudflare blog hosting features</category></item><item><title>How to Fix Pip Install Site-Packages --user Error</title><link>https://lofipython.com/fix-python-pip-user-install-error.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;While running Python version 3.8.10 today, out of the blue I saw this error attempting to pip install a package in my virtual environment:&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;pre class="literal-block"&gt;
ERROR: Cannot perform a '--user' install. User site-packages are not visible in this virtualenv.
&lt;/pre&gt;
&lt;p&gt;I found a &lt;a class="reference external" href="https://github.com/microsoft/vscode-python/issues/14327"&gt;Github thread&lt;/a&gt; that fixed the problem! You …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Wed, 17 May 2023 20:35:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2023-05-17:/fix-python-pip-user-install-error.html</guid><category>coding, python</category><category>pip</category><category>python install</category><category>troubleshooting error</category></item><item><title>Wordpress to Pelican Blog Migration Complete</title><link>https://lofipython.com/wordpress-to-pelican-blog-migration-complete.html</link><description>&lt;p&gt;This blog is formerly known as &amp;quot;Python Marketer&amp;quot; from 2016 to 2023. In
May 2023, I've begun the migration from Wordpress's &amp;quot;Personal&amp;quot; plan to a
free, Pythonic &lt;a class="reference external" href="https://docs.getpelican.com/en/latest/"&gt;Pelican&lt;/a&gt; static site.
100 posts are now hosted here exclusively on lofipython.com.
I will be posting my projects, Python explorations and technical …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Mon, 15 May 2023 17:45:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2023-05-15:/wordpress-to-pelican-blog-migration-complete.html</guid><category>coding, python, writing, meta</category><category>wordpress pelican migration</category><category>pelican blog</category><category>python static site</category></item><item><title>Using Bing + GPT-4 to Write a Python Script for Windows Computer Maintenance</title><link>https://lofipython.com/using-bing-chatgpt-to-write-a-python-script-for-windows-computer-maintenance.html</link><description>&lt;p&gt;Today, I was granted access to Bing's large language model, the next generation GPT-4. Bing's chat is the &amp;quot;more powerful&amp;quot; successor to &lt;a class="reference external" href="https://openai.com/"&gt;OpenAI&lt;/a&gt;'s groundbreaking chat service that's generating heaps of hype in addition to its AI text generation abilities. I gained the new chat functionality a few weeks after …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sun, 26 Feb 2023 22:05:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2023-02-26:/using-bing-chatgpt-to-write-a-python-script-for-windows-computer-maintenance.html</guid><category>automation, coding, command prompt, performance, productivity, programming, python, Scripts, software</category><category>AI chat</category><category>Bing ChatGPT Review</category><category>Python code Bing and ChatGPT</category><category>Windows 10 Command Line</category><category>Windows Maintenance</category></item><item><title>40 Open Source Libraries and Tools for the Modern Developer</title><link>https://lofipython.com/40-open-source-libraries-and-tools-for-the-modern-developer.html</link><description>&lt;p&gt;I usually find a lot of these tools from viewing GitHub's &lt;a class="reference external" href="https://github.com/trending"&gt;trending repositories&lt;/a&gt;. When I find a novel repo, I'll &lt;a class="reference external" href="https://github.com/erickbytes?tab=stars"&gt;star&lt;/a&gt; it to remember for later. This is a list of free, open source software spanning security, AI, cloud, HTTP, JSON, monitoring, dev ops and more.&lt;/p&gt;
&lt;p&gt;I enjoy finding and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sat, 25 Feb 2023 16:21:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2023-02-25:/40-open-source-libraries-and-tools-for-the-modern-developer.html</guid><category>apps, coding, command prompt, data, HTTP, json, productivity, programming, python, software</category><category>free software</category><category>free tools for developers</category><category>open source tools</category><category>opens source software</category></item><item><title>"Shutdown" a Windows Computer by Double-clicking a Batch File</title><link>https://lofipython.com/shutdown-windows-in-a-batch-file.html</link><description>&lt;p&gt;Here is a quick and easy way to automate turning off your computer. This saves me about 15 seconds to manually click the start menu and restart buttons. It worked for me on an old, laggy HP computer running the Windows 10 operating system. Now, I can double-click a batch …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Tue, 21 Feb 2023 18:28:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2023-02-21:/shutdown-windows-in-a-batch-file.html</guid><category>automation, coding, Windows</category><category>windows automation</category><category>windows batch files</category></item><item><title>App Review: Why You Should Use Pocket to Save Your Reads</title><link>https://lofipython.com/app-review-why-you-should-use-pocket-to-save-your-reads.html</link><description>&lt;p&gt;I'm really enjoying using &lt;a class="reference external" href="https://help.getpocket.com/"&gt;Pocket&lt;/a&gt; as my primary reading app on my cell phone. My top need is to download articles I find on the internet for offline viewing. This app does that and more in a smooth interface. This review reflects the perspective of using the &lt;a class="reference external" href="https://play.google.com/store/apps/details?id=com.ideashower.readitlater.pro"&gt;Pocket Android version …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Mon, 20 Feb 2023 12:38:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2023-02-20:/app-review-why-you-should-use-pocket-to-save-your-reads.html</guid><category>apps, internet, productivity</category><category>Pocket app review</category><category>Pocket reading app benefits</category><category>reading articles online</category></item><item><title>Getting People to Use Software is Hard</title><link>https://lofipython.com/getting-people-to-use-software-is-hard.html</link><description>&lt;p&gt;You're sure you've created a stellar solution to a problem at hand. You took the time to think an idea out and execute. You iterated tirelessly, making tweaks and creating a tool that will sell itself to potential human users. Everyone loves their own creation. Others will realize the tool's …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Wed, 15 Feb 2023 22:23:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2023-02-15:/getting-people-to-use-software-is-hard.html</guid><category>APIs, apps, coding, product development, programming, software, Uncategorized</category><category>building apps</category><category>making software</category><category>solving problems</category></item><item><title>6 of the Hottest Python Libraries in 2023</title><link>https://lofipython.com/6-of-the-hottest-python-libraries-in-2023.html</link><description>&lt;p&gt;Here's a short list of Python packages making a splash this year:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://pyscript.net/"&gt;pyscript&lt;/a&gt;: execute Python code in your web browser&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/astral-sh/ruff"&gt;ruff&lt;/a&gt;: code linting package built with Rust and Python&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://fastapi.tiangolo.com/"&gt;FastAPI&lt;/a&gt;: a rapidly adopted web framework for building APIs&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.pola.rs/"&gt;polars&lt;/a&gt;: high performance pandas drop in replacement, also built with Rust and …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sun, 22 Jan 2023 14:56:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2023-01-22:/6-of-the-hottest-python-libraries-in-2023.html</guid><category>APIs, coding, pandas, programming, python, Rust</category><category>advanced python modules</category><category>popular Python packages</category><category>Python Libraries in 2023</category><category>useful python libraries</category><category>web frameworks.</category></item><item><title>pymarketer: an HTTP + Spreadsheet Wrangling Python package</title><link>https://lofipython.com/pymarketer-http-spreadsheet-operations-python-package.html</link><description>&lt;p&gt;Typically, this blog reviews the other Python libraries in its vast ecosystem. This time, it's my own package I made for fun, pymarketer. This was created in a single day and can be installed from the &lt;a class="reference external" href="https://github.com/erickbytes/pymarketer"&gt;Github repo&lt;/a&gt;. Have a go at &lt;a class="reference external" href="https://lofipython.com/how-to-python-pip-install-new-libraries/"&gt;my most read post&lt;/a&gt; if you need help …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sun, 08 Jan 2023 19:52:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2023-01-08:/pymarketer-http-spreadsheet-operations-python-package.html</guid><category>coding, excel, HTTP</category><category>problem solving</category><category>programming</category><category>python</category><category>software</category></item><item><title>An Example Pelican + Git Blog Post Workflow</title><link>https://lofipython.com/an-example-pelican-git-blog-post-workflow.html</link><description>&lt;p&gt;In my Ubuntu Linux environment, I'm now publishing new blog posts following this &lt;a class="reference external" href="https://docs.getpelican.com/en/latest/quickstart.html"&gt;Pelican&lt;/a&gt; + Python + git workflow.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Activate the Python environment:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="literal-block"&gt;
# Create with a virtual env with venv: python -m venv env_name
source env_name/bin/activate
&lt;/pre&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;Clone your repo and go to the project folder:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="literal-block"&gt;
git clone https://github.com …&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sun, 04 Dec 2022 12:17:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2022-12-04:/an-example-pelican-git-blog-post-workflow.html</guid><category>automation, git, pelican, programming, python, writing</category><category>pelican blog</category><category>pelican workflow</category><category>pelican writing example</category></item><item><title>How to Find and Open a Public Wi-Fi Login Page</title><link>https://lofipython.com/how-to-find-and-open-a-public-wi-fi-login-page.html</link><description>&lt;p&gt;Sometimes, we find ourselves on a public Wi-Fi connection that is &amp;quot;connected&amp;quot;, but unable to get to the login page. While the login page is triggered automatically on most mobile devices, computers may not connect so easily. As usual, I turned to Google to find a way to get to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Tue, 18 Oct 2022 12:38:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2022-10-18:/how-to-find-and-open-a-public-wi-fi-login-page.html</guid><category>internet, network, productivity</category><category>find public wi-fi login page</category><category>open wi-fi login</category><category>wifi hack</category></item><item><title>How to Check Github Repo Star Counts With Python</title><link>https://lofipython.com/how-to-check-github-repo-star-counts-with-python.html</link><description>&lt;p&gt;Snooping through my package list, I noticed the &lt;a class="reference external" href="https://github.com/PyGithub/PyGithub"&gt;PyGithub library&lt;/a&gt; was installed. Its repo boasts &amp;quot;Typed interactions with the GitHub API v3&amp;quot;. I googled the package, wanting to check in on the repos I profiled in an &lt;a class="reference external" href="https://lofipython.com/a-brief-summary-of-promising-python-static-site-generators/"&gt;earlier post about static site generators&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I drafted the code below after noticing …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Mon, 10 Oct 2022 00:08:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2022-10-10:/how-to-check-github-repo-star-counts-with-python.html</guid><category>APIs, coding, programming, python</category><category>github api</category><category>github stars python</category><category>repo star counts</category></item><item><title>Pelican Fix for "No valid files found in content"...</title><link>https://lofipython.com/pelican-fix-for-no-valid-files-found-in-content.html</link><description>&lt;p&gt;Pelican is a popular &lt;a class="reference external" href="https://lofipython.com/a-brief-summary-of-promising-python-static-site-generators/"&gt;static site generator library&lt;/a&gt; in Python. I didn't know why my pelican blog was not working. I've used the &amp;quot;pelican content&amp;quot; command many times for my blog. This time, when attempting to write a new post on a new computer, I was getting this error where …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sat, 08 Oct 2022 13:43:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2022-10-08:/pelican-fix-for-no-valid-files-found-in-content.html</guid><category>coding, python, writing</category><category>markdown library</category><category>pelican blog</category><category>python fix</category></item><item><title>Retrieve Random Numbers Via Python's random Module + range() Built-in</title><link>https://lofipython.com/fetch-a-random-number-or-random-n-length-list-of-numbers-in-python-with-the-random-module.html</link><description>&lt;p&gt;There are usually many ways to do most things in Python. I've retrieved
random numbers a few different ways at various times within the random
module, often after reading a Stack Overflow post. This time in my most
recent search for random digits, I discovered in the Python docs the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Thu, 15 Sep 2022 23:09:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2022-09-15:/fetch-a-random-number-or-random-n-length-list-of-numbers-in-python-with-the-random-module.html</guid><category>coding, programming, python</category><category>python random numbers list</category><category>random module</category><category>random numbers python</category></item><item><title>Beyond the Standard Library, An External Python Modules Starter Pack</title><link>https://lofipython.com/30-external-python-libraries-starter-pack.html</link><description>&lt;p&gt;Here is a list of external Python modules you can install with &lt;a class="reference external" href="https://lofipython.com/how-to-python-pip-install-new-libraries/"&gt;pip&lt;/a&gt;.
These are not included with your Python version and need to be installed separately. In some cases, other options may be suitable.
To keep the list shorter, I picked libraries that were chosen based on having at …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Wed, 07 Sep 2022 23:46:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2022-09-07:/30-external-python-libraries-starter-pack.html</guid><category>programming, python</category><category>advanced python modules</category><category>coding</category><category>useful python libraries</category></item><item><title>Recycling Old Electronics in Chicago</title><link>https://lofipython.com/recycling-old-electronics-in-chicago.html</link><description>&lt;p&gt;Though we feel powerless at times, our individual choices can have ripple effects which can help us preserve Earth's precious materials. Here is how to recycle your old electronics in Chicago. Definitely check out if your city has a similar program for recycling electronics.&lt;/p&gt;
&lt;p&gt;Look up the schedule for any …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sun, 14 Aug 2022 14:02:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2022-08-14:/recycling-old-electronics-in-chicago.html</guid><category>Chicago, electronics</category><category>recycling</category><category>resources</category><category>smartphones</category></item><item><title>Launching a Live Static Site Blog via Pelican, Github and Cloudflare Pages</title><link>https://lofipython.com/launching-a-live-static-blog-via-pelican-github-and-cloudflare-pages.html</link><description>&lt;p&gt;Proud to announce my newest side project blog, Diversified Bullish, is live at &lt;a class="reference external" href="http://divbull.com"&gt;divbull.com&lt;/a&gt;.
It is made with &lt;a class="reference external" href="https://docs.getpelican.com/en/latest/quickstart.html#"&gt;Pelican&lt;/a&gt; and the &lt;a class="reference external" href="https://github.com/jody-frankowski/blue-penguin/tree/311a5208c030ea62d85bbca952e31b6775a50c2c"&gt;Blue Penguin theme&lt;/a&gt;.
I'm planning to write about stocks and investing there moving forward in addition to this blog which focuses on Python programming.&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://github.com/erickbytes/divbull/tree/main/divbull.com"&gt;divbull.com Github …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Fri, 08 Jul 2022 01:20:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2022-07-08:/launching-a-live-static-blog-via-pelican-github-and-cloudflare-pages.html</guid><category>internet, investing, personal finance, programming, writing</category><category>blog</category><category>cloudflare pages</category><category>pelican</category><category>python</category><category>static site generator</category></item><item><title>The Things They Don't Tell You About Ampersands and XML</title><link>https://lofipython.com/the-things-they-dont-tell-you-about-ampersands-and-xml.html</link><description>&lt;p&gt;&lt;strong&gt;In an XML document, you need to escape any ampersands in your text as&lt;/strong&gt; &lt;tt class="docutils literal"&gt;&amp;amp;amp;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;I began a new coding project. Sure, there's documentation for the API that solves my problem. I find out it uses XML.
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/XML"&gt;Extensible Markup Language&lt;/a&gt;, a classic API format. Cool. I craft a beautiful script …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Wed, 06 Jul 2022 12:49:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2022-07-06:/the-things-they-dont-tell-you-about-ampersands-and-xml.html</guid><category>APIs, coding, Google, programming</category><category>data</category><category>learning</category><category>problem solving</category><category>XML</category></item><item><title>Hammock-Driven Development Notes</title><link>https://lofipython.com/hammock-driven-development-talk-notes.html</link><description>&lt;p&gt;Occasionally you will find a video or talk that connects or resonates with you in a great way. Rich Hickey's &lt;a class="reference external" href="https://www.youtube.com/watch?v=f84n5oFoZBc"&gt;&amp;quot;Hammock Driven Development&amp;quot;&lt;/a&gt;, a self-described &amp;quot;rant&amp;quot; is packed with wisdom. I keep coming back to re-watch and today, I have written down some key points from this amazing rant!&lt;/p&gt;
&lt;div class="section" id="key-ideas"&gt;
&lt;h2&gt;Key …&lt;/h2&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Fri, 24 Jun 2022 11:39:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2022-06-24:/hammock-driven-development-talk-notes.html</guid><category>coding, programming, talks</category><category>learning</category><category>problem solving</category><category>software</category></item><item><title>A Quick Windows Command Line Tab Key Shortcut</title><link>https://lofipython.com/a-quick-windows-command-line-tab-key-shortcut.html</link><description>&lt;p&gt;You might know you can use the tab key to view the files in a folder one at a time on the command line. However, I recently stumbled into another way to help navigate folders with a lot of files in the command line. Let's say you're looking for a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sat, 11 Jun 2022 12:58:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2022-06-11:/a-quick-windows-command-line-tab-key-shortcut.html</guid><category>coding, command prompt, productivity, Windows</category><category>command line</category><category>file system</category><category>shortcuts</category></item><item><title>An Ode to Code</title><link>https://lofipython.com/an-ode-to-code.html</link><description>&lt;p&gt;Making time to code can be done every day. Carve out those little moments where you can automate tedious tasks or study up on that &lt;a class="reference external" href="https://github.com/tqdm/tqdm"&gt;hot new Python library&lt;/a&gt; that takes your quality to another level.&lt;/p&gt;
&lt;p&gt;Take time to reorganize and refactor in &lt;a class="reference external" href="https://atom.io/"&gt;your favorite text editor&lt;/a&gt;. Break your script …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Mon, 09 May 2022 21:13:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2022-05-09:/an-ode-to-code.html</guid><category>coding, programming</category><category>growth</category><category>python</category></item><item><title>Documentation is the Gateway to Delegation</title><link>https://lofipython.com/documentation-is-the-gateway-to-delegation.html</link><description>&lt;p&gt;The first step to offloading a task is writing down how to complete it. Once the process is typed into a lean text file or wiki page, it can be learned by another human. This helps your team, but what's in it for you?&lt;/p&gt;
&lt;div class="wp-image-6962 figure"&gt;
&lt;img alt="The definition of delegation" src="https://pythonmarketer.files.wordpress.com/2022/03/image_editor_output_image-551860623-1648785644967.jpg?w=720" /&gt;
&lt;/div&gt;
&lt;p&gt;The most selfish programmers probably want …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Thu, 31 Mar 2022 23:07:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2022-03-31:/documentation-is-the-gateway-to-delegation.html</guid><category>productivity, programming, writing</category><category>delegation</category><category>documentation</category><category>technical writing</category></item><item><title>6 Must-read Python Enhancement Proposals (PEPs)</title><link>https://lofipython.com/six-must-read-python-enhancement-proposals.html</link><description>&lt;p&gt;These are a few of my favorite PEPs, or Python Enhancements Proposals I've encountered recently. PEP 0, PEP 8 and PEP 20 are great reads for those aspiring to hone their Python skills. The &lt;a class="reference external" href="https://docs.python.org/3/"&gt;documentation&lt;/a&gt; sometimes references specific PEPs directly also. They document Python's evolution over time and the rationale …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Wed, 23 Feb 2022 17:15:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2022-02-23:/six-must-read-python-enhancement-proposals.html</guid><category>APIs, ODBC, programming, python</category><category>best PEPs Python</category><category>PEP 8</category><category>WSGI</category></item><item><title>How to Convert a Python Dictionary to and from a pandas DataFrame</title><link>https://lofipython.com/how-to-convert-a-python-dictionary-to-and-from-a-pandas-dataframe.html</link><description>&lt;p&gt;This is an example of how to cast a Python dict into a dataframe and vice versa. I picked up the df to dict part from this &lt;a class="reference external" href="https://cmdlinetips.com/2021/04/convert-two-column-values-from-pandas-dataframe-to-a-dictionary/#:~:text=Another%20approach%20to%20convert%20two,all%20columns%20in%20the%20dataframe."&gt;Python and R tips post&lt;/a&gt; and the dict to df part from a &lt;a class="reference external" href="https://stackoverflow.com/questions/18837262/convert-python-dict-into-a-dataframe"&gt;Stack Overflow post&lt;/a&gt;. The below adaptation begins by converting an …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Wed, 09 Feb 2022 23:16:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2022-02-09:/how-to-convert-a-python-dictionary-to-and-from-a-pandas-dataframe.html</guid><category>coding, pandas, programming, python</category><category>pandas df to Python dict</category><category>Python data structure conversion</category><category>Python dict to pandas df</category></item><item><title>Fix Spelling and Grammar with language_tool_python and textblob</title><link>https://lofipython.com/fix-spelling-and-grammar-with-language_tool_python-and-textblob.html</link><description>&lt;p&gt;Below are two practical Python libraries for text processing. This function uses &lt;a class="reference external" href="https://textblob.readthedocs.io/en/dev/api_reference.html?highlight=correct#textblob.blob.TextBlob.correct"&gt;textblob's spelling correction&lt;/a&gt; along with &lt;a class="reference external" href="https://pypi.org/project/language-tool-python/"&gt;language_tool_python&lt;/a&gt;, which applies grammatical corrections via the &lt;a class="reference external" href="https://languagetool.org/http-api/swagger-ui/#!/default/post_check"&gt;Language Tool API&lt;/a&gt;. I added these text processing transformations into my &lt;a class="reference external" href="https://positivethoughts.pythonanywhere.com/"&gt;concept text generation app&lt;/a&gt;. These are free, public APIs up to around 20 requests per …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sun, 30 Jan 2022 16:28:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2022-01-30:/fix-spelling-and-grammar-with-language_tool_python-and-textblob.html</guid><category>APIs, data, programming, writing</category><category>language</category><category>language tool</category><category>python</category><category>text</category><category>textblob</category></item><item><title>How to Upgrade Requests in the Bash Console</title><link>https://lofipython.com/how-to-upgrade-requests-in-the-pythonanywhere-bash-console.html</link><description>&lt;p&gt;This command can be used to upgrade your Python &lt;a class="reference external" href="https://docs.python-requests.org/en/latest/"&gt;requests library&lt;/a&gt; with &lt;a class="reference external" href="https://lofipython.com/how-to-python-pip-install-new-libraries/"&gt;pip&lt;/a&gt;, Python's package manager. It is tailored for a PythonAnywhere environment. I suppose this command works on any &lt;a class="reference external" href="https://www.gnu.org/software/bash/"&gt;Bash console&lt;/a&gt;, but if you're running your app with pythonanywhere, you can find the bash console here:&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;::&lt;/dt&gt;
&lt;dd&gt;&lt;a class="reference external" href="https://www.pythonanywhere.com/user/your_username/consoles/"&gt;https://www.pythonanywhere …&lt;/a&gt;&lt;/dd&gt;&lt;/dl&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sun, 23 Jan 2022 14:41:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2022-01-23:/how-to-upgrade-requests-in-the-pythonanywhere-bash-console.html</guid><category>coding, python</category><category>bash</category><category>pip</category><category>python install</category><category>pythonanywhere</category></item><item><title>Analyzing Messi vs. Ronaldo with the FIFA API + jq + curl</title><link>https://lofipython.com/pretty-print-the-ea-sports-fifa-ultimate-team-json-with-jq-curl.html</link><description>&lt;p&gt;Who is the world's greatest footballer, Messi or Ronaldo? EA Sports surely has calculated the answer to this question in their player ratings. They rate peak Crisitiano Ronaldo, Lionel Messi and Luka Modrić at 99 overall, with Neymar and Lewandowski at 98. Anecdotally, Messi has won 7 &lt;a class="reference external" href="https://www.topendsports.com/sport/soccer/list-player-of-the-year-ballondor.htm"&gt;Ballon d'Or&lt;/a&gt;, the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Mon, 10 Jan 2022 23:15:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2022-01-10:/pretty-print-the-ea-sports-fifa-ultimate-team-json-with-jq-curl.html</guid><category>command prompt, productivity</category><category>command line</category><category>data</category><category>fifa</category><category>football</category><category>jq</category><category>json</category></item><item><title>Experiencing Flow While Coding</title><link>https://lofipython.com/experiencing-flow-while-coding.html</link><description>&lt;p&gt;Yesterday, I experienced a flow state where I became manically obsessed
with perfecting a script I was working on. I think it's beautiful code,
about 100 lines long without &lt;a class="reference external" href="https://www.python.org/dev/peps/pep-0257/"&gt;docstrings&lt;/a&gt;. It solves a real need
and it felt great to write it. Some scripts feel terrible to write and
you …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sat, 08 Jan 2022 15:29:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2022-01-08:/experiencing-flow-while-coding.html</guid><category>APIs, coding, HTTP, productivity, programming</category><category>flow state</category><category>python</category><category>skills</category></item><item><title>Create a Column of Values in Pandas with df.assign()</title><link>https://lofipython.com/create-a-column-of-values-in-pandas-with-df-assign.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://pandas.pydata.org/docs/"&gt;Pandas&lt;/a&gt; is amazing, what else is there to say? Learning the nuances of its API have yielded tons of times where it helped me get stuff done.&lt;/p&gt;
&lt;p&gt;I recently picked up the &lt;a class="reference external" href="https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.assign.html"&gt;pandas dataframe's &amp;quot;assign&amp;quot; function&lt;/a&gt; for creating a new column of values. This is an elegant way to set …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Fri, 07 Jan 2022 13:12:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2022-01-07:/create-a-column-of-values-in-pandas-with-df-assign.html</guid><category>pandas, programming, python</category><category>cats</category><category>data</category></item><item><title>ftfy, The Wonky Text Fixing Python Library</title><link>https://lofipython.com/ftfy-the-wonky-text-fixing-python-library.html</link><description>&lt;p&gt;Every Python programmer has undoubtedly come across some crazy characters. The &lt;a class="reference external" href="https://ftfy.readthedocs.io/en/latest/"&gt;ftfy library &amp;quot;Fixes Text For You&amp;quot;&lt;/a&gt; and acts like a swiss army knife when you've got questionable characters breaking your script. In my case, an HTTP request was failing because of weird cryptic letters hiding in the data when …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Thu, 06 Jan 2022 11:44:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2022-01-06:/ftfy-the-wonky-text-fixing-python-library.html</guid><category>coding, programming</category><category>ftfy</category><category>python</category><category>text cleaning</category></item><item><title>How to Track Python Script Completion</title><link>https://lofipython.com/how-to-track-python-script-completion.html</link><description>&lt;p&gt;Did your script run to completion? Sure, you might log some tracebacks along the way or terminate the program early with &lt;a class="reference external" href="https://docs.python.org/3/library/sys.html#sys.exit"&gt;sys.exit()&lt;/a&gt;. But did your script actually run completely to the end? I have yet to use the &lt;a class="reference external" href="https://docs.python.org/3/library/trace.html"&gt;Trace module&lt;/a&gt; but it seems worth checking out also. Visualization tools …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Wed, 05 Jan 2022 11:49:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2022-01-05:/how-to-track-python-script-completion.html</guid><category>coding, programming, python, Scripts</category><category>logging</category><category>python scripts</category><category>reliability</category><category>tracking</category></item><item><title>Phone Number Cleaning Regex + pandas Series Example</title><link>https://lofipython.com/phone-number-cleaning-regex-pandas-series-example.html</link><description>&lt;p&gt;This is a solution I worked out recently to strip phone numbers into a uniform format. To install &lt;a class="reference external" href="https://pandas.pydata.org/docs/getting_started/install.html"&gt;pandas with pip&lt;/a&gt;, enter in command prompt:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pandas&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The pandas library has regex built in and it's pretty neat! Behold the power of pandas and a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Regular_expression"&gt;regular expression …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Fri, 31 Dec 2021 14:19:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2021-12-31:/phone-number-cleaning-regex-pandas-series-example.html</guid><category>coding, pandas, programming, python</category><category>data cleaning</category><category>regex</category></item><item><title>Memory Monitoring Python Libraries + Tools</title><link>https://lofipython.com/tools-tips-to-beat-memoryerror-in-your-python-scripts.html</link><description>&lt;p&gt;If you write Python code, there's probably been a time or two when you saw the dreaded &lt;a class="reference external" href="https://docs.python.org/3/library/exceptions.html#MemoryError"&gt;&amp;quot;MemoryError&amp;quot;&lt;/a&gt;.
This happens after one of your Python scripts stops because your computer has no spare &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Random-access_memory"&gt;RAM&lt;/a&gt; to execute it.
I recently experienced this frustration whilst trying to write hundreds of thousands of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sun, 19 Dec 2021 11:57:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2021-12-19:/tools-tips-to-beat-memoryerror-in-your-python-scripts.html</guid><category>coding, computing, pandas, performance, programming</category><category>memory profiling</category><category>monitoring</category><category>python</category><category>RAM</category><category>Windows</category></item><item><title>In Praise of Resource Scoping</title><link>https://lofipython.com/in-praise-of-resource-scoping.html</link><description>&lt;p&gt;When assessing your environment, problem or your goal, meticulously scout the tools at your disposal. When you're learning a new job, a new project or a programming language's tools for example, it pays to have a grasp of your options. Researching what documentation, guides, tools or libraries are at your …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sat, 18 Dec 2021 11:09:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2021-12-18:/in-praise-of-resource-scoping.html</guid><category>productivity, work</category><category>documentation</category><category>research</category><category>tools</category></item><item><title>What is Your Circle of the Internet?</title><link>https://lofipython.com/what-is-your-circle-of-the-internet.html</link><description>&lt;p&gt;This morning I'm meditating on my usual apps or websites I visit through the course of a typical day. I wonder how limited or expansive it could be in the span of all that's waiting to be consumed on the internet. I like reading online or physical books too and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sat, 06 Nov 2021 11:29:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2021-11-06:/what-is-your-circle-of-the-internet.html</guid><category>apps, internet, life</category><category>introspection</category><category>web browsing</category></item><item><title>WordPress Ad Campaign Results from a Typical Blog</title><link>https://lofipython.com/meta-blog-mediocre-september-ad-campaign-results.html</link><description>&lt;p&gt;In September 2021, I tested out the recommended ads runner, &lt;a class="reference external" href="https://wordads.co/"&gt;WordAds&lt;/a&gt;, on this WordPress blog. 6,182 ads were served over the course of a month, earning $0.86 from impressions and clicks. My average CPM or cost per thousand impressions was $0.14. My blog averages about 1,600 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sat, 30 Oct 2021 19:32:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2021-10-30:/meta-blog-mediocre-september-ad-campaign-results.html</guid><category>Marketing, meta, writing</category><category>ad campaign</category><category>SEO</category></item><item><title>What I Learned from Black, Python's "Uncompromising" Code Formatter</title><link>https://lofipython.com/a-learning-use-case-for-black-python-code-formatter.html</link><description>&lt;p&gt;Black is a code formatting tool that I have been testing out recently to see what the hype is about. It is the defacto &amp;quot;uncompromising code formatter in Python&amp;quot;. I normally do not use any code formatters since I'm not required to use them. This short post aims to convince …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Thu, 23 Sep 2021 10:12:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2021-09-23:/a-learning-use-case-for-black-python-code-formatter.html</guid><category>coding, programming, python</category><category>Black Python</category><category>PEP-8</category><category>writing code</category></item><item><title>Write More Code, Write Less Code</title><link>https://lofipython.com/write-more-code-write-less-code.html</link><description>&lt;p&gt;&lt;strong&gt;Write More Code&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Write code everyday. Code fast and break things. Cherish your tracebacks. Keep going back, no matter how hopeless it may seem. Code habitually. Learn how to code. Get better at code. Love code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Write Less Code&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Use as few lines as possible. Nothing looks better than a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Thu, 09 Sep 2021 17:11:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2021-09-09:/write-more-code-write-less-code.html</guid><category>coding</category><category>code</category><category>coding practice</category><category>how to code</category></item><item><title>Yoast SEO API Python Example With requests + pandas</title><link>https://lofipython.com/yoast-api-python-example-with-requests-pandas.html</link><description>&lt;p&gt;Lately I've been checking out the &lt;a class="reference external" href="https://yoast.com/wordpress/plugins/seo/"&gt;Yoast SEO plug-in&lt;/a&gt; and their &lt;a class="reference external" href="https://developer.yoast.com/customization/apis/rest-api"&gt;REST API&lt;/a&gt;. The API returns all of the SEO metadata, meta tags, schema.org data, etc. for your Wordpress blog posts. Here's a Yoast API Python example script to fetch post metadata via requests and pandas:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Mon, 06 Sep 2021 14:12:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2021-09-06:/yoast-api-python-example-with-requests-pandas.html</guid><category>APIs, coding, HTTP, programming, python</category><category>Python Wordpress Blog SEO</category><category>SEO</category><category>Yoast API</category></item><item><title>Opening Firefox Via the webbrowser Module + RPA Tools</title><link>https://lofipython.com/how-to-open-firefox-with-webbrowser-on-ubuntu-linux.html</link><description>&lt;p&gt;webbrowser is a convenient Python standard library module. It opened my
Firefox browser on my Ubuntu Linux operating system running on a
Chromebook. This code is adapted from a &lt;a class="reference external" href="https://pythonexamples.org/python-open-url-in-firefox-browser/"&gt;Python Examples blog post&lt;/a&gt;.
Below is a list of other browsers you can open with webbrowser. At the
bottom of this …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sun, 15 Aug 2021 23:13:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2021-08-15:/how-to-open-firefox-with-webbrowser-on-ubuntu-linux.html</guid><category>automation, coding, gui, programming, python</category><category>Firefox</category><category>RPA</category></item><item><title>8 Promising Python Static Site Generators</title><link>https://lofipython.com/a-brief-summary-of-promising-python-static-site-generators.html</link><description>&lt;p&gt;A static site generator creates static HTML and markdown files to serve as a website. They're commonly used to host blogs but not exclusively. I recently researched my options to roll a static site in Python. I'm assessing a few of them as a potential future self-hosted blogging solution for …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Wed, 28 Jul 2021 23:31:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2021-07-28:/a-brief-summary-of-promising-python-static-site-generators.html</guid><category>coding, programming, web development</category><category>creating your own blog</category><category>python</category><category>static site generator</category></item><item><title>Python Requests SSLCertVerificationError Solution for Windows</title><link>https://lofipython.com/how-to-fix-your-python-certificates-on-windows.html</link><description>&lt;p&gt;I initially installed my Python version from the &lt;a class="reference external" href="https://www.microsoft.com/en-us/p/python-39/9p7qfqmjrfp7"&gt;Windows Store&lt;/a&gt; and it worked fine for almost a year on my Windows 10 computer. Then I started getting this error message when trying to use the &lt;a class="reference external" href="https://docs.python-requests.org/en/master/user/advanced/#ssl-cert-verification"&gt;requests library&lt;/a&gt; on all HTTP requests:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exceptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SSLError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;HTTPSConnectionPool&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;api.example.com …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Thu, 10 Jun 2021 11:59:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2021-06-10:/how-to-fix-your-python-certificates-on-windows.html</guid><category>coding, HTTP, python, Windows</category><category>.PEM solution</category><category>problem solving</category><category>Windows 10</category></item><item><title>Python Libraries, Tools + Resources for Creative and Academic Writers</title><link>https://lofipython.com/python-libraries-tools-resources-for-creative-and-academic-writers.html</link><description>&lt;p&gt;Today I scoured the internet for tools written in Python that assist writing in any form. After some relentless Google and Github searching, here are my favorites. I found tools to help write modular stories and novels, screenwriting with Trelby and several libraries for academic papers. I haven't tried all …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sat, 29 May 2021 17:51:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2021-05-29:/python-libraries-tools-resources-for-creative-and-academic-writers.html</guid><category>education, productivity, python, writing</category><category>academic writing</category><category>Python Tools for Writing</category><category>resources for writers</category><category>storywriting</category><category>writing tools</category></item><item><title>Did You Read the Whole Error?</title><link>https://lofipython.com/did-you-read-the-whole-error.html</link><description>&lt;p&gt;You read the whole thing front to back? Every word? Stop and think about it. What is the computer trying to tell you?&lt;/p&gt;
&lt;p&gt;Sometimes something is obvious but needs to be reminded. I found myself thinking this yet again today. Often there are times where I would have saved some …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Thu, 15 Apr 2021 15:34:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2021-04-15:/did-you-read-the-whole-error.html</guid><category>coding, programming</category><category>errors</category><category>solutions</category></item><item><title>Aggregating A Python Error Summary from Log Files</title><link>https://lofipython.com/aggregating-tracebacks-from-python-log-files.html</link><description>&lt;p&gt;Follow these steps to maintain more reliable scripts and catch more of your traceback errors:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;automate your scripts to run daily, weekly, monthly, etc.&lt;/li&gt;
&lt;li&gt;Log your traceback errors with the &lt;a class="reference external" href="https://docs.python.org/3/library/logging.html"&gt;logging module&lt;/a&gt;. I tend to dump all of my logs into a single folder.&lt;/li&gt;
&lt;li&gt;automate aggregating the logs and parsing …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Tue, 06 Apr 2021 01:09:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2021-04-06:/aggregating-tracebacks-from-python-log-files.html</guid><category>automation, coding, education, programming, Scripts</category><category>productivity</category><category>python</category></item><item><title>So You Want to Learn Python?</title><link>https://lofipython.com/so-you-want-to-learn-python.html</link><description>&lt;p&gt;Here are a few Python concepts for beginners to explore if you are starting out with the language. In this post, I'll highlight my favorite &amp;quot;must-learn&amp;quot; tools to master that come with your Python installation. Understanding them will make you a more capable Python programmer and problem solver.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/library/functions.html#built-in-funcs"&gt;Built-in Functions …&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sun, 14 Feb 2021 14:05:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2021-02-14:/so-you-want-to-learn-python.html</guid><category>programming</category><category>learning</category><category>python</category><category>skills</category><category>technology</category></item><item><title>Organize Your Emails in Bulk With Gmail Search Operators + Python Libraries</title><link>https://lofipython.com/using-gmails-search-operators-to-organize-your-emails-in-bulk.html</link><description>&lt;p&gt;After 12 years with Gmail as my primary email inbox, I wanted to clear out old &amp;quot;Promotions&amp;quot; emails. This can be done with some clever use of Gmail's search syntax shown below.&lt;/p&gt;
&lt;p&gt;I wanted to preserve my &amp;quot;Starred&amp;quot; emails, but delete old emails to free up space. I was able …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sun, 07 Feb 2021 11:17:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2021-02-07:/using-gmails-search-operators-to-organize-your-emails-in-bulk.html</guid><category>productivity, python</category><category>email</category><category>gmail</category><category>IMAP</category><category>smtp</category></item><item><title>Pick Stocks Intelligently with ffn</title><link>https://lofipython.com/pick-stocks-like-a-pro-with-ffn.html</link><description>&lt;p&gt;How do you calculate stock valuation metrics like Sharpe ratio. Recently I've been reading about common &lt;a class="reference external" href="https://www.suredividend.com/ratios-metrics/"&gt;stock valuation metrics&lt;/a&gt; and wondered how I can apply them to my stock portfolio. I started reading about different metrics, sketching formulas and entertained writing a script to calculate these metrics. But Python has …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sat, 16 Jan 2021 23:21:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2021-01-16:/pick-stocks-like-a-pro-with-ffn.html</guid><category>investing</category><category>money</category><category>personal finance</category><category>python</category><category>stock formulas</category><category>stocks</category></item><item><title>20 Eclectic Computer Science Wikipedia Articles</title><link>https://lofipython.com/a-computer-science-themed-wikipedia-link-grab-bag.html</link><description>&lt;p&gt;Here are 20 random technology-oriented Wikipedia links I recently collected after re-organizing troves of bookmarked links
accumulated over the past few years. These articles peek into the wide variety of things to learn about that exist in Computer Science.
ABL. Always. Be. Learning. Curiosity and well organized browser bookmarks are …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sat, 28 Nov 2020 12:55:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2020-11-28:/a-computer-science-themed-wikipedia-link-grab-bag.html</guid><category>Databases, programming</category><category>algorithms</category><category>articles</category><category>computer science</category><category>Wikipedia</category></item><item><title>Google Vision OCR, Image Text and a Markov Chain: a recipe for positivipy</title><link>https://lofipython.com/generating-positive-thoughts-with-google-vision-ocr-and-markov-chains.html</link><description>&lt;p&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Recently an old idea came back to life. I've posted to a &lt;a class="reference external" href="https://www.facebook.com/positivedailythought"&gt;Facebook Page&lt;/a&gt; for several years as part of project I started on a whim. The goal of the page is to share anything positive and inspirational by famous thinkers, artists and creators I read, or simply something …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sun, 11 Oct 2020 15:37:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2020-10-11:/generating-positive-thoughts-with-google-vision-ocr-and-markov-chains.html</guid><category>coding, data analysis, Google, pandas, programming, python</category><category>Google Vision</category><category>natural language</category><category>positive thinking</category><category>positivity</category></item><item><title>Making A YouTube Video Downloader With Python's Flask and pytube3 Libraries</title><link>https://lofipython.com/making-a-youtube-video-downloader-with-pythons-flask-and-pytube3-libraries.html</link><description>&lt;p&gt;How do you download YouTube videos? The easiest answer is to google sites that have youtube downloader videos.
But then I thought, I wonder if I can make something?&lt;/p&gt;
&lt;p&gt;Boredom, my curiosity and some googling turned up the &lt;a class="reference external" href="https://github.com/get-pytube/pytube3"&gt;pytube3 library&lt;/a&gt;, &amp;quot;A lightweight, dependency-free Python 3 library (and command-line utility) for …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Wed, 07 Oct 2020 23:49:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2020-10-07:/making-a-youtube-video-downloader-with-pythons-flask-and-pytube3-libraries.html</guid><category>coding, flask, programming, python, web development</category><category>curiosity</category><category>hacking</category><category>prototyping</category><category>videos</category></item><item><title>Post an Unsplash Photo to Facebook Pages with Python</title><link>https://lofipython.com/post-a-photo-to-your-facebook-page-with-the-unsplash-facebook-apis.html</link><description>&lt;p&gt;My goal was to automate posting positive photos and quotes to my Facebook page, &amp;quot;&lt;a class="reference external" href="https://www.facebook.com/positivedailythought"&gt;Positive Thoughts Daily&lt;/a&gt;&amp;quot;, with the Unsplash and Facebook APIs. Here's how I did it!&lt;/p&gt;
&lt;p&gt;This implementation relies on &lt;a class="reference external" href="https://unsplash.com/&amp;#64;erickbytes/likes"&gt;my own collection of photos on Unsplash&lt;/a&gt;. I will manually select which photos I like to get added …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sun, 04 Oct 2020 15:13:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2020-10-04:/post-a-photo-to-your-facebook-page-with-the-unsplash-facebook-apis.html</guid><category>APIs, coding, programming</category><category>Facebook API</category><category>python</category><category>social media</category><category>Unsplash</category></item><item><title>SQLite3: Pythonic First Impressions &amp; Lay of the Land</title><link>https://lofipython.com/getting-the-lay-of-the-land-in-sqlite-and-connecting-to-a-db-with-pythons-sqlite3-library.html</link><description>&lt;p&gt;&lt;strong&gt;introduction&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SQLite is one of the heavy hitters in the database space, up there with other popular choices like MySQL, Postgres, Microsoft SQLServer, Cassandra and MariaDB. There is no shortage of &lt;a class="reference external" href="https://dbdb.io/"&gt;database technologies&lt;/a&gt; but SQLite is certainly one that is commonly used. It also has a positive reputation.
Its terminal …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sun, 20 Sep 2020 00:09:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2020-09-20:/getting-the-lay-of-the-land-in-sqlite-and-connecting-to-a-db-with-pythons-sqlite3-library.html</guid><category>data, Databases, python, SQL</category><category>open data</category><category>SQLite</category><category>SQLite commands</category><category>sqlite3</category></item><item><title>Delete All Your Tweets with Tweepy and the Twitter API</title><link>https://lofipython.com/delete-all-your-tweets-with-tweepy-and-the-twitter-api.html</link><description>&lt;p&gt;You may want to &lt;a class="reference external" href="https://help.twitter.com/en/managing-your-account/how-to-download-your-twitter-archive"&gt;download an archive&lt;/a&gt; of your tweets before deleting them. I did this and it took about a day to get my archive download.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How To Purge Your Tweet History with Python&lt;/strong&gt;&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Per the &lt;a class="reference external" href="http://docs.tweepy.org/en/latest/install.html"&gt;Tweepy library documentation&lt;/a&gt;, install tweepy with &lt;a class="reference external" href="https://lofipython.com/how-to-python-pip-install-new-libraries/"&gt;pip&lt;/a&gt;. It worked fine in my python …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sun, 13 Sep 2020 21:07:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2020-09-13:/delete-all-your-tweets-with-tweepy-and-the-twitter-api.html</guid><category>coding, programming, python</category><category>api</category><category>tweepy</category><category>tweets</category><category>twitter</category></item><item><title>Pondering Join Algorithms</title><link>https://lofipython.com/join-algorithms.html</link><description>&lt;p&gt;Truly enjoying this &lt;a class="reference external" href="https://www.youtube.com/playlist?list=PLSE8ODhjZXjbohkNBWQs_otTrBTrjyohi"&gt;Intro to Database Systems course&lt;/a&gt; from Carnegie Mellon University. Some really great breakdowns of common join algorithms in this lecture. Here are my notes.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=nUwT7PEQ49o&amp;amp;list=PLSE8ODhjZXjbohkNBWQs_otTrBTrjyohi&amp;amp;index=11"&gt;Lecture 11- Join Algorithms&lt;/a&gt;&lt;strong&gt;(CMU Databases Systems / Fall 2019)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Prof. Andy Pavlo, Carnegie Mellon Database Group&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img alt="Join Algorithms" class="alignnone size-full wp-image-4118" src="https://pythonmarketer.files.wordpress.com/2020/08/join-algorithms.png" style="width: 747px; height: 404px;" /&gt;
&lt;p&gt;&lt;em&gt;screenshot from lecture&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table Positioning for a …&lt;/strong&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sun, 09 Aug 2020 18:24:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2020-08-09:/join-algorithms.html</guid><category>coding, data, Databases, programming</category><category>algorithms</category><category>computer science</category><category>joins</category><category>learning</category><category>study</category><category>technology</category></item><item><title>Benefits of Go and Threads in Distributed Systems</title><link>https://lofipython.com/benefits-of-go-and-threads-in-distributed-systems.html</link><description>&lt;p&gt;&lt;strong&gt;Preface&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;These are my &lt;a class="reference external" href="https://www.youtube.com/watch?v=gA4YXUJX7t8&amp;amp;list=PLrw6a1wE39_tb2fErI4-WkMbsvGQk9_UB&amp;amp;index=3&amp;amp;t=0s"&gt;YouTube lecture&lt;/a&gt; notes from MIT's Distributed Systems course. Thank you MIT and Professor Morris!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.youtube.com/playlist?list=PLrw6a1wE39_tb2fErI4-WkMbsvGQk9_UB"&gt;MIT 6.824 Distributed Systems&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lecture 2: RPC and Threads - Feb 7, 2020&lt;/p&gt;
&lt;p&gt;Prof. Robert Morris (Spring 2020)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Go is a popular programming language choice so my ears perked up when …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Wed, 15 Jul 2020 00:24:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2020-07-15:/benefits-of-go-and-threads-in-distributed-systems.html</guid><category>coding, concurrency, data, education, Go, lectures notes, programming</category><category>computers</category><category>distributed systems</category><category>golang</category><category>MIT</category><category>python</category><category>rpc</category></item><item><title>Characterizing Database Workloads &amp; Storage Models</title><link>https://lofipython.com/choosing-database-storage-models-and-workloads-that-mesh.html</link><description>&lt;p&gt;Thank you &lt;a class="reference external" href="https://db.cs.cmu.edu/"&gt;Carnegie Mellon Database Group&lt;/a&gt; for putting this online! These are my notes from watching on YouTube.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Carnegie Mellon Databases Storage II, Lecture 4&lt;/p&gt;
&lt;p&gt;Prof. Andy Pavlo [&lt;a class="reference external" href="https://www.youtube.com/watch?v=YWRYEXNy6IE&amp;amp;list=PLSE8ODhjZXjbohkNBWQs_otTrBTrjyohi&amp;amp;index=4"&gt;Watch on YouTube&lt;/a&gt;]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="section" id="the-problem-and-solution"&gt;
&lt;h2&gt;The Problem and Solution&lt;/h2&gt;
&lt;p&gt;How should the DBMS represent the database in storage files on disk? Solve it by …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sat, 27 Jun 2020 13:22:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2020-06-27:/choosing-database-storage-models-and-workloads-that-mesh.html</guid><category>data, Databases, education, performance</category><category>Carnegie Mellon</category><category>database storage</category><category>learning</category><category>lectures notes</category></item><item><title>Free Computer Science Courses and Talks To Absorb</title><link>https://lofipython.com/my-favorite-free-educational-courses-and-talks-to-absorb.html</link><description>&lt;p&gt;Below you'll find a balanced curriculum of juicy courses and videos that are available for free on the internet. I'll definitely be diving into most of these in the 2nd half of 2020. Stay curious!&lt;/p&gt;
&lt;div class="section" id="university-cs-courses-for-free"&gt;
&lt;h2&gt;University CS Courses For Free&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.youtube.com/playlist?list=PLhQjrBD2T382hIW-IsOVuXP1uMzEvmcE5"&gt;CS50's Web Programming with Python and JavaScript&lt;/a&gt; | Harvard University&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://archive.org/details/ucberkeley_webcast_gJJeUFyuvvg"&gt;CS …&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Tue, 23 Jun 2020 03:35:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2020-06-23:/my-favorite-free-educational-courses-and-talks-to-absorb.html</guid><category>coding, data, Databases, education, programming, python, software</category><category>free education</category><category>harvard</category><category>knowledge</category><category>learning</category><category>MIT</category><category>university</category></item><item><title>Integrating MySQL with Flask, pandas and pythonanywhere</title><link>https://lofipython.com/essential-mysql-terminal-commands-and-connecting-to-mysql-with-flask-pandas-and-pythonanywhere.html</link><description>&lt;p&gt;Sometimes a spark comes from seemingly nowhere. That's when you reach for your tools and create. After a series of successful experiments,
I decided this stack might be my quickest, best shot to get a functional website up and running in Python.
I was pleasantly surprised to make rapid progress …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Mon, 25 May 2020 21:48:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2020-05-25:/essential-mysql-terminal-commands-and-connecting-to-mysql-with-flask-pandas-and-pythonanywhere.html</guid><category>data, Databases, ODBC, pandas, programming, SQL, web development, web2py</category><category>flask</category><category>mysql</category><category>py4web</category><category>pyDAL</category><category>python</category></item><item><title>A Guide To Making HTTP Requests To APIs With JSON &amp; Python</title><link>https://lofipython.com/how-to-make-json-requests-with-python.html</link><description>&lt;p&gt;This contains all of my best API-related knowledge picked up since learning how to use them. All APIs have their own style, quirks and unique requirements. This post explains general terminology, tips and examples if you're looking to tackle your first API.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Here's what is covered:&lt;/strong&gt;&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;API &amp;amp; HTTP Lingo You …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Mon, 18 May 2020 05:41:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2020-05-18:/how-to-make-json-requests-with-python.html</guid><category>Chicago, coding, HTTP, json, pandas, programming</category><category>api</category><category>data</category><category>python</category><category>requests</category><category>sandwiches</category><category>web</category></item><item><title>Script Windows Like A Pro: Command Line, Batch Files, Remote Desktop Connection and pywin32</title><link>https://lofipython.com/exploring-windows-command-line-tools-batch-file-automation-and-remote-desktop-connection.html</link><description>&lt;p&gt;Here are a few useful corners of the vast array of Windows scripting tools.&lt;/p&gt;
&lt;div class="section" id="helpful-windows-command-line-documentation"&gt;
&lt;h2&gt;Helpful Windows Command Line Documentation&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/command-line-syntax-key"&gt;Windows command line Documentation Syntax&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-xp/bb490890%28v%3dtechnet.10%29"&gt;Command-line reference A-Z&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-xp/bb490954%28v%3dtechnet.10%29"&gt;Command shell overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-xp/bb490982%28v%3dtechnet.10%29"&gt;Using command redirection operators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.microsoft.com/en-us/windows/win32/winrm/about-windows-remote-management"&gt;About Windows Remote Management&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="a-few-general-windows-commands"&gt;
&lt;h2&gt;A Few General Windows Commands&lt;/h2&gt;
&lt;p&gt;Use  &lt;a class="reference external" href="https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-xp/bb490906(v=technet.10)"&gt;find&lt;/a&gt;
to look in a text …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Wed, 06 May 2020 14:11:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2020-05-06:/exploring-windows-command-line-tools-batch-file-automation-and-remote-desktop-connection.html</guid><category>automation, command prompt, Scripts, Windows</category><category>command line</category><category>remote computer</category><category>scripting</category><category>shell</category></item><item><title>Reflections on 5 Years of Solving Problems with Python</title><link>https://lofipython.com/reflections-on-5-years-of-solving-problems-with-python.html</link><description>&lt;p&gt;Prior to learning Python, I had no programming experience. I worked in marketing for a book publisher and did not perform well at my job. It was not a good fit. They eventually fired me. As my previous job unraveled, I discovered Python and the Coursera course, &lt;a class="reference external" href="https://www.coursera.org/learn/python?utm_medium=email&amp;amp;utm_source=other&amp;amp;utm_campaign=opencourse.course_complete.python.%7Eopencourse.course_complete.7A1yFTaREeWWBQrVFXqd1w."&gt;Programming for Everybody …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sat, 11 Apr 2020 17:15:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2020-04-11:/reflections-on-5-years-of-solving-problems-with-python.html</guid><category>coding, education, Marketing, programming, python, wisdom</category><category>advice</category><category>learning</category><category>problem solving</category><category>writing</category></item><item><title>Easy Tune-ups For Your Windows Computer</title><link>https://lofipython.com/easy-wins-for-your-windows-computer.html</link><description>&lt;div class="section" id="this-post-covers-6-handy-windows-tools"&gt;
&lt;h2&gt;This post covers 6 handy Windows tools:&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Windows Experience Index&lt;/li&gt;
&lt;li&gt;Disk Cleanup&lt;/li&gt;
&lt;li&gt;Windows Update Troubleshooter&lt;/li&gt;
&lt;li&gt;Windows Update&lt;/li&gt;
&lt;li&gt;Microsoft Support and Recovery Assistant&lt;/li&gt;
&lt;li&gt;Disk Defragmenter&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="first-get-your-baseline-windows-experience-index-score"&gt;
&lt;h2&gt;&lt;strong&gt;First, get your baseline Windows Experience Index score.&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;These metrics are a way to monitor your system's performance over time.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Go to &amp;quot;Control PanelSystem and SecuritySystem …&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sun, 22 Mar 2020 22:59:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2020-03-22:/easy-wins-for-your-windows-computer.html</guid><category>performance, Windows</category><category>maintenance</category><category>operating system</category><category>windows update</category></item><item><title>Automating pytest on Windows with a .bat file, Python, Task Scheduler and Box</title><link>https://lofipython.com/automating-pytest-on-windows-with-a-bat-file-python-task-scheduler-and-box.html</link><description>&lt;p&gt;&lt;strong&gt;Automatic pytest Testing and Failure Alert Monitoring&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is my solution to replace manually running pytest each day in command prompt. I want to automate running pytest every day, test if my automated python scripts ran smoothly and get notified if any tests fail.&lt;/p&gt;
&lt;p&gt;Installing &lt;a class="reference external" href="https://docs.pytest.org/en/latest/getting-started.html"&gt;pytest&lt;/a&gt;, a Python testing library …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sat, 21 Mar 2020 01:47:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2020-03-21:/automating-pytest-on-windows-with-a-bat-file-python-task-scheduler-and-box.html</guid><category>automation, programming, software testing, Windows</category><category>coding</category><category>pytest</category><category>python</category><category>software development</category></item><item><title>Lessons Learned from "Lost in Space" on Netflix</title><link>https://lofipython.com/lessons-learned-from-lost-in-space-on-netflix.html</link><description>&lt;p&gt;Being a developer has similarities to the life of a family surviving in
space. Sure, the stakes are lower when writing code versus being chased
by alien life forms, but the core idea is the same. One is faced with a
problem and it must be solved, with varying degrees …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Tue, 28 Jan 2020 06:39:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2020-01-28:/lessons-learned-from-lost-in-space-on-netflix.html</guid><category>entertainment, life, space</category><category>Lost in Space</category><category>Netflix</category><category>problem solving</category></item><item><title>"Git" The Basics: A Version Control Cheat Sheet</title><link>https://lofipython.com/git-the-basics-a-git-version-control-cheat-sheet.html</link><description>&lt;p&gt;I am finally starting to understand &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Git"&gt;git version control&lt;/a&gt;! It makes developing a project on different computers easy. Some of these notes were picked up from the super informative &lt;a class="reference external" href="https://www.youtube.com/watch?v=_ZEWDGpM-vM"&gt;Reproducible Data Analysis in Jupyter video series&lt;/a&gt; by Jake VanderPlas, author of the &lt;a class="reference external" href="https://jakevdp.github.io/PythonDataScienceHandbook/"&gt;Python Data Science Handbook&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First, &lt;a class="reference external" href="https://git-scm.com/downloads"&gt;go here&lt;/a&gt; to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sat, 25 Jan 2020 05:06:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2020-01-25:/git-the-basics-a-git-version-control-cheat-sheet.html</guid><category>coding, command prompt, data analysis, git, programming, software</category><category>github</category><category>terminal</category><category>version control</category></item><item><title>Comparing Text Editors on Ubuntu: Atom, Emacs, Sublime, Vim &amp; VS Code</title><link>https://lofipython.com/comparing-text-editors-on-ubuntu-atom-emacs-sublime-vim-vs-code.html</link><description>&lt;p&gt;The text editor is a core tool for writing software. I've always used Atom. Lately, I've noticed my Atom text editor was bogging down on my Chromebook running Ubuntu 16.04. Keystrokes and mouse movements were lagging and slowing my coding down. I'm also getting low on disk space, which …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Thu, 26 Dec 2019 01:25:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2019-12-26:/comparing-text-editors-on-ubuntu-atom-emacs-sublime-vim-vs-code.html</guid><category>coding, Linux, Scripts, software, Ubuntu</category><category>atom</category><category>emacs</category><category>sublime</category><category>text editors</category><category>vim</category><category>vs code</category></item><item><title>Copying a pandas Dataframe to Google Sheets with pygsheets</title><link>https://lofipython.com/copying-a-csv-file-to-google-sheets-with-pygsheets.html</link><description>&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: This endeavor was before I discovered &lt;a class="reference external" href="https://developers.google.com/apps-script"&gt;AppScript&lt;/a&gt;, which may be an alternative solution to using pygsheets or other python libraries. pygsheets is interesting, but it could be a stretch to justify using it for something that could be done with AppScript. Both are ways to solve a problem by …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sat, 21 Dec 2019 18:58:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2019-12-21:/copying-a-csv-file-to-google-sheets-with-pygsheets.html</guid><category>automation, coding, excel, Google, pandas</category><category>api</category><category>google api</category><category>google sheets</category><category>json</category><category>python</category><category>spreadsheets</category></item><item><title>A Collection of Software Testing Opinions for Python and Beyond</title><link>https://lofipython.com/a-collection-of-software-testing-opinions-for-python-and-beyond.html</link><description>&lt;p&gt;I am a beginner to testing my code. I wanted to write about testing to better understand it. While shaping this link fest masquerading as an essay, I collected great ideas from people who are way more experienced than me. You'll find a few of my thoughts, a Pytest example …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Thu, 05 Dec 2019 03:06:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2019-12-05:/a-collection-of-software-testing-opinions-for-python-and-beyond.html</guid><category>coding, productivity, programming, python, software testing</category><category>pytest</category><category>software development</category><category>test driven development</category></item><item><title>Inserting New Rows Into A Microsoft Access Database With Python and pyodbc</title><link>https://lofipython.com/inserting-new-records-into-a-microsoft-access-database-with-python.html</link><description>&lt;p&gt;I recently automated the loading of data into a Microsoft Access database with &lt;a class="reference external" href="https://github.com/mkleehammer/pyodbc/wiki"&gt;pyodbc&lt;/a&gt;, a Python library for connecting to databases. ODBC stands for &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Open_Database_Connectivity"&gt;Open Database Connectivity&lt;/a&gt;. It can be used for a variety of Database Management Systems outside of Access also.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;First,&lt;/strong&gt; &lt;a class="reference external" href="https://docs.python.org/3/installing/index.html"&gt;install libraries with pip&lt;/a&gt;&lt;strong&gt;. Enter in terminal …&lt;/strong&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Sat, 30 Nov 2019 00:28:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2019-11-30:/inserting-new-records-into-a-microsoft-access-database-with-python.html</guid><category>automation, data, Databases, excel, ODBC, pandas, python, Windows</category><category>Access</category><category>Microsoft</category><category>productivity</category><category>programming</category></item><item><title>Installing Debian 9 Stretch Linux OS on a Dell Inspiron Laptop and Configuring the Wifi Network</title><link>https://lofipython.com/installing-debian-9-stretch-linux-os-on-a-dell-inspiron-laptop-and-troubleshooting-wifi.html</link><description>&lt;p&gt;Yesterday, I converted an 11-year old Dell Inspiron E1505 from Windows XP to Debian 9 Stretch. I may have overwrote my Windows XP OS. I do not care if I lost it since it's a vulnerable and outdated OS, which is no longer supported by Microsoft. I encountered difficulty with …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Thu, 25 Apr 2019 14:14:00 -0500</pubDate><guid isPermaLink="false">tag:lofipython.com,2019-04-25:/installing-debian-9-stretch-linux-os-on-a-dell-inspiron-laptop-and-troubleshooting-wifi.html</guid><category>Linux, software</category><category>computers</category><category>debian</category><category>operating system</category><category>os upgrade</category><category>Windows</category></item><item><title>Lightning Scripts ⚡</title><link>https://lofipython.com/lightning-scripts-%e2%9a%a1.html</link><description>&lt;p&gt;You may or may not be familiar with &lt;a class="reference external" href="https://www.youtube.com/channel/UCsX05-2sVSH7Nx3zuk3NYuQ"&gt;PyCon&lt;/a&gt;'s &lt;a class="reference external" href="https://pyvideo.org/pycon-us-2010/pycon-2010--plenary--saturday-evening-lightning-t.html"&gt;Lightning Talks&lt;/a&gt;, a session of quick hitter talks given each year on a variety of topics. These &amp;quot;Lightning Scripts&amp;quot; are ten of my favorite Python scripts that have served me well as of late to perform a variety of tasks …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">pythonmarketer</dc:creator><pubDate>Tue, 12 Feb 2019 06:27:00 -0600</pubDate><guid isPermaLink="false">tag:lofipython.com,2019-02-12:/lightning-scripts-%e2%9a%a1.html</guid><category>automation, coding, pandas, productivity, programming, Scripts</category><category>alicia keys</category><category>code</category><category>computers</category><category>hamilton</category><category>lightning scripts</category><category>python</category></item></channel></rss>