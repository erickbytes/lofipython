<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Lo-Fi Python - web dev</title><link href="https://lofipython.com/" rel="alternate"></link><link href="https://lofipython.com/feeds/web-dev.tag.atom.xml" rel="self"></link><id>https://lofipython.com/</id><updated>2017-08-09T21:16:00-05:00</updated><entry><title>Creating A Simple Website and Server Environment with Node.js and Express.js</title><link href="https://lofipython.com/creating-a-simple-website-and-server-environment-with-node-js-and-express-js.html" rel="alternate"></link><published>2017-08-09T21:16:00-05:00</published><updated>2017-08-09T21:16:00-05:00</updated><author><name>pythonmarketer</name></author><id>tag:lofipython.com,2017-08-09:/creating-a-simple-website-and-server-environment-with-node-js-and-express-js.html</id><summary type="html">&lt;p&gt;Here is what I have deduced is the fastest way to get an app up and running with Node.js. This requires some familiarity with using the command line.&amp;nbsp;I completed the Codeacademy course &amp;quot;&lt;a class="reference external" href="https://www.codecademy.com/learn/learn-the-command-line"&gt;Learn The Command Line&lt;/a&gt;&amp;quot; before beginning with Node.js. I think it helped me better understand â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Here is what I have deduced is the fastest way to get an app up and running with Node.js. This requires some familiarity with using the command line.&amp;nbsp;I completed the Codeacademy course &amp;quot;&lt;a class="reference external" href="https://www.codecademy.com/learn/learn-the-command-line"&gt;Learn The Command Line&lt;/a&gt;&amp;quot; before beginning with Node.js. I think it helped me better understand what the commands are and what they do.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Download and install&amp;nbsp;&lt;a class="reference external" href="https://nodejs.org/en/"&gt;Node.JS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Open the node command prompt. (This was on a windows machine.)&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;mkdir node_apps&lt;/tt&gt;&lt;ul&gt;
&lt;li&gt;creates a folder for your app(s)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;cd \app_name&lt;/tt&gt;&lt;ul&gt;
&lt;li&gt;changes command prompt directory to your app's folder&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;npm &amp;nbsp;init&lt;/tt&gt;&lt;ul&gt;
&lt;li&gt;Creates json file for your app&lt;/li&gt;
&lt;li&gt;fill out applicable info or just hit enter until the file is created&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;npm install express&lt;/tt&gt;&lt;ul&gt;
&lt;li&gt;installs express.js module in node.js&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;npm install &lt;span class="pre"&gt;express-generator&lt;/span&gt; &lt;span class="pre"&gt;-g&lt;/span&gt;&lt;/tt&gt;&lt;ul&gt;
&lt;li&gt;installs express-generator module in node.js&lt;/li&gt;
&lt;li&gt;this module creates the web app's structure once the command in the next step is entered&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;express app_name&lt;/tt&gt;&lt;ul&gt;
&lt;li&gt;creates the structure for your app and all necessary folders. (views, css, Javascript, routing, etc.)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;npm install&lt;/tt&gt;&lt;ul&gt;
&lt;li&gt;ensures all app module dependencies are installed&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;npm start&lt;/tt&gt;&lt;ul&gt;
&lt;li&gt;starts your server and web app&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Go to &lt;a class="reference external" href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; in a browser. Port 3000 is the default port of Express.&lt;ul&gt;
&lt;li&gt;Your app is live.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I learned most of this from &lt;a class="reference external" href="https://codeforgeek.com/2014/10/express-complete-tutorial-part-1/"&gt;this great blog post&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The above does not include a database integration. I integrated with a MongoDB database by &lt;a class="reference external" href="https://closebrace.com/tutorials/2017-03-02/the-dead-simple-step-by-step-guide-for-front-end-developers-to-getting-up-and-running-with-nodejs-express-and-mongodb"&gt;following the instructions in this post&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;This &lt;a class="reference external" href="https://www.youtube.com/watch?v=1uFY60CESlM"&gt;YouTube video&lt;/a&gt; was also very helpful to me for figuring out MongoDB and Node.js integration.&lt;/li&gt;
&lt;li&gt;An HTML shorthand language called jade (aka pug) comes stock within Express.js.&amp;nbsp; &lt;a class="reference external" href="https://webapplog.com/jade/"&gt;Here's further reading&lt;/a&gt; on the pros and cons.&lt;/li&gt;
&lt;li&gt;All of the above has been from my own studies. I do not claim anything listed as the most efficient or best way to use Node.js. This is what has worked for me over the past two days.&lt;/li&gt;
&lt;li&gt;It feels good to whip up a nimble app environment that is capable of producing and supporting world changing software; Node.js is used by Netflix, PayPal, Microsoft and Uber.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="coding, javascript, programming, web development"></category><category term="command line"></category><category term="creating websites"></category><category term="express.js"></category><category term="mongodb"></category><category term="Node.js"></category><category term="web dev"></category><category term="website"></category></entry></feed>